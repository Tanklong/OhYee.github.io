<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      
      <title><![CDATA[VPS gengrator 命令导致 hexo 被 killed 解决方案]]></title>
      <url>%2Fpost%2FNote%2FVPS_gengrator.html</url>
      <content type="text"><![CDATA[undefined|笔记|Hexo|VPS|Linux|问题在 Segmentfault 上提问 Linux(CentOs)下hexo生成文章被killed 有解决方案: 内存不足，创建交互空间即可。见：https://www.qcloud.com/document/product/362/3597]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[jQuery 实现内容折叠功能]]></title>
      <url>%2Fpost%2FNote%2Ffold.html</url>
      <content type="text"><![CDATA[undefined|undefined|笔记|Hexo|javascript|jquery|代码折叠功能如下 点击折叠/展开 我是内容]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[hexo next主题二级分类中的分隔符如何设置成下图这样的格式？]]></title>
      <url>%2Fpost%2FZhihu%2FHexo_separator.html</url>
      <content type="text"><![CDATA[知乎|Hexo|https://www.zhihu.com/question/57888214/answer/154699381]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[hexo next主题如何更改css使头像在手机端显示？]]></title>
      <url>%2Fpost%2FZhihu%2FHexo_avatar.html</url>
      <content type="text"><![CDATA[知乎|Hexo|https://www.zhihu.com/question/57821305/answer/154688341]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[U盘格式化 + 启动盘]]></title>
      <url>%2Fpost%2FNote%2FUdisk_formatting.html</url>
      <content type="text"><![CDATA[undefined|undefined|undefined|undefined|undefined|undefined|undefined|undefined|undefined|undefined|undefined|笔记|本身的U盘格式有问题,存在非常蛋疼的问题,抽时间重新格式化了一下U盘,发现还是有一些坑的]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Photoshop 安装错误解决]]></title>
      <url>%2Fpost%2FNote%2Fphotoshop_install.html</url>
      <content type="text"><![CDATA[undefined|undefined|undefined|笔记|Photoshop|安装 photoshop 时遇到错误应该是因为老版本没有卸载干净 Exit Code: 34Please see specific errors below for troubleshooting. For example, ERROR:-------------------------------------- Summary -------------------------------------- - 1 fatal error(s), 0 error(s) FATAL: Payload ‘Camera Profiles Installer 8.0.0.15 {3F023875-4A52-4605-9DB6-A88D4A813E8D}’ information not found in Media_db.------------------------------------------------------------------------------------- System Requirements]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[服务器权限设置出错及维护]]></title>
      <url>%2Fpost%2FNote%2Fserver_authority.html</url>
      <content type="text"><![CDATA[undefined|undefined|笔记|服务器|服务器上的网站除了首页，其他所有页面都打不开看了下数据库没问题，网站的 aspx 文件也没问题估计是权限的问题]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[安徽大学第九届大学生程序设计竞赛决赛]]></title>
      <url>%2Fpost%2FProject%2FACM2017_03_26.html</url>
      <content type="text"><![CDATA[专题| 编号 题目 题解 A AOJ.839.调酒师 题解 B AOJ.840.下一个幸运数 题解 C AOJ.841.最短路径和 题解 D AOJ.842.西瓜的编译原理作业 题解 E AOJ.843.晋级下一轮 题解 F AOJ.844.西瓜和病毒 题解 G AOJ.845.黑白棋 题解 H AOJ.846.勤劳的出题人 题解]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 846.勤劳的出题人]]></title>
      <url>%2Fpost%2FAOJ%2F846.html</url>
      <content type="text"><![CDATA[题解|AOJ|贪心算法|题目 点击显/隐题目 小蓝最近要办一场程序设计比赛, 要出一些题目.从无到有原创一道题是很难的一件事情, 好在小蓝平时积累了m道现成的题目, 记这m道题的编号为1到m, 这m道题的复杂度记为bi(1&lt;=i&lt;=m).另外为了保证比赛的质量, 小蓝指定了一个复杂度标准, 即, 小蓝至少需要出n道题, 复杂度分别恰好是ai(1&lt;=i&lt;=n).小蓝可以通过降低题目难度将现成的一道难度为c的题目改编成难度为d(d&lt;=c)的题目, 一道现成题最多使用一次; 也可以原创一道任意难度的题目, 鉴于原创的难度, 小蓝希望原创的题目越少越好.现在请你帮忙判断, 小蓝至少需要原创多少道题. 第一行: 两个数, n和m,(1 &lt;= n, m &lt;= 3000)第二行: n个数, 即a1, a2, …, an;第三行: m个数, 即b1, b2, …, bm(1 &lt;= ai, bi &lt;= 1000,000) 一个整数, 即小蓝至少需要原创的题目数 3 51 2 31 1 1 1 4 1]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 845.黑白棋]]></title>
      <url>%2Fpost%2FAOJ%2F845.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 点击显/隐题目 小红和小绿在玩一个摆棋子游戏.小红在桌上摆了12个棋子, 棋子分黑和白两个颜色. 小绿给出a, b两个正整数使得a和b的积为12, 然后依次取小红摆好的棋子中的前b个放到一列, 然后再取剩下来的棋子中的前b个放到第二列, …, 直到摆成一个a*b的棋子矩阵. 当矩阵中存在某一列或某些列全部为黑棋子时, 小绿成功完成这轮游戏, 否则失败. 现在小红已经把棋子摆好了, 请帮助小绿算出所有能让小绿成功完成游戏的a和b的选择方案. 第一行: 给出数据组数, t(1≤t≤100);接下来t行: 每行12个字符, 表示小红摆好的棋子序列, 字符’X’表示黑棋, ‘O’表示白棋. 一共t行, 一行对应一组输入数据的所有方案;对于一组数据, 先输出小绿可以成功完成游戏的方案数n, 接下来给出以’axb’的格式给出这n个方案, a值小的方案先输出. 方案之间用一个空格隔开. 4OXXXOXOOXOOXOXOXOXOXOXOXXXXXXXXXXXXXOOOOOOOOOOOO 3 1x12 2x6 4x34 1x12 2x6 3x4 6x26 1x12 2x6 3x4 4x3 6x2 12x10]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 844.西瓜与病毒]]></title>
      <url>%2Fpost%2FAOJ%2F844.html</url>
      <content type="text"><![CDATA[题解|AOJ|题目 点击显/隐题目 西瓜在研究病毒的时候发现了下面的规律：病毒的特征码就是某些确定的二进制串。如果一个可执行文件中二进制代码中不存在任何一段病毒代码，那么这个可执行文件就是安全的。经过几天的努力，西瓜已经找出了所有的病毒特征码，西瓜突发奇想，这个世界上是否存在一个无限长的安全的二进制代码呢。例如如果{011, 11, 00000}为病毒特征码，那么一个可能的无限长安全代码就是010101…。如果{01, 11, 000000}为病毒特征码，那么就不存在一个无限长的安全代码。请写一个程序： 读入病毒特征码； 判断是否存在一个无限长的安全代码； 将结果输出。 第一行包括一个整数n，表示病毒特征码的数目。以下的n行每一行都包括一个非空的01字符串——就是一个病毒特征码。所有病毒特征码的总长度不超过30000。 第一行输出一个单词： TAK——假如存在这样的代码； NIE——如果不存在。 3011100000 NIE]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 843.晋级下一轮]]></title>
      <url>%2Fpost%2FAOJ%2F843.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 点击显/隐题目 比赛规定，N个人的比赛，分数为正数且分数大于等于第K名分数的人可以晋级下一轮。 现在给N个人的分数，问有多少个人可以晋级。注意，分数越高，排名越靠前。 第一行，一个整数t，表示测试数据组数（1&lt;=t&lt;=100）每组测试数据：第一行两个整数，n和k，（1&lt;=k&lt;=n&lt;=100）第二行n个整数，表示每个人的分数，已经从高到低排列，（0&lt;=每个人的分数&lt;=100） 每组测试数据，一个整数，表示有多少个人可以晋级下一轮。 28 510 9 8 7 7 7 5 54 20 0 0 0 60]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 842.西瓜的编译原理]]></title>
      <url>%2Fpost%2FAOJ%2F842.html</url>
      <content type="text"><![CDATA[题解|AOJ|题目 点击显/隐题目 西瓜在写编译原理作业中的文法分析器的时候，通常需要检测一个单词是否在给定的单词列表里。为了提高查找和定位的速度，通常都要画出与单词列表所对应的单词查找树，其特点如下： 根节点不包含字母，除根节点外每一个节点都仅包含一个大写英文字母； 从根节点到某一节点，路径上经过的字母依次连起来所构成的字母序列，称为该节点对应的单词。单词列表中的每个词，都是该单词查找树某个节点所对应的单词； 在满足上述条件下，该单词查找树的节点数最少。例：图一的单词列表对应图二的单词查找树 对一个确定的单词列表，请统计对应的单词查找树的节点数（包括根节点） 输入一个单词列表，每一行仅包含一个单词和一个换行/回车符。每个单词仅由大写的英文字符组成，长度不超过63个字符，单词个数不超过5000。 输出仅包含一个整数和一个换行/回车符。该整数为单词列表对应的单词查找树的节点数。 AANASPASASCASCIIBASBASIC 13]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 841.最短路径和]]></title>
      <url>%2Fpost%2FAOJ%2F841.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|最短路|Floyd|题目 点击显/隐题目 小黄发明了一个图的游戏, 游戏在一个n个节点的有向有边权的完全图上进行: 游戏一共有n个步骤 在第i步, 小黄从图中移除掉一个节点以及与该节点相连的所有入边和出边(移除后的图仍然是一个完全图) 在每一步小黄移除一个节点之前, 他想知道所有节点对之间的最短路径的总和是多少 输入为小黄游戏之前的图:第一行: n(1&lt;=n&lt;=400), 表示图的节点个数;接下来一共n行为一个n*n的矩阵, 矩阵的每行n个数, 第i行的第j列的数字a(1≤a≤?50000表示从节点i到节点j的边的边权, 其中节点i到节点i自身的边权都是0;最后n行一行一个1到n之间的数, 其中的第i行表示第i步小黄要移除的节点编号. 输出一共一行n个数(一个空格隔开), 分别为第i步移除节点之前的所有节点对的最短路径总和. 40 3 1 16 0 400 12 4 0 11 1 1 04 1 2 3 17 23 404 0]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 840.下一个幸运数]]></title>
      <url>%2Fpost%2FAOJ%2F840.html</url>
      <content type="text"><![CDATA[题解|AOJ|二分|打表|题目 点击显/隐题目 数字的每一位只可能是4或者7的称为幸运数，比如说4，7，44，474，7474都是幸运数，而54，40，444467777都不是幸运数。而数字A的下一个幸运数，表示的是大于等于A的最小的幸运数。比如4的下一个幸运数是4，而5的下一个幸运数是7。现在给出一个区间[L, R]，求出区间内每个数的下一个幸运数的和。 一个整数t，表示测试数据的组数(1&lt;=t&lt;=200)。每组测试数据，两个整数L和R，空格隔开(1&lt;=L&lt;=R&lt;=1000000000)。 区间内每个数的下一个幸运数的和 34 43 44 7 4825]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 839.调酒师]]></title>
      <url>%2Fpost%2FAOJ%2F839.html</url>
      <content type="text"><![CDATA[题解|AOJ|题目 点击显/隐题目 作为调酒师的西瓜，在生日当天，请了N位好朋友来家中作客，当然免不了大展身手。西瓜在超市买了A瓶酒，每瓶酒有B毫升，买了C个柠檬，把每一个柠檬切成D片，还买了E克盐。西瓜要调的酒，每一杯需要F毫升的原味酒、一片柠檬以及G克盐。 西瓜希望每个朋友分到同样杯数的酒，同时西瓜又希望每个人分到的酒尽可能多。问每个朋友能分到几杯调好的酒。 一个整数t，表示测试数据组数(1&lt;=t&lt;=100)对于每一组数据，共一行，有8个整数，逗号隔开，分别为N,A,B,C,D,E,F,G，其中这7个整数都在[0, 1000]内，保证N不为0。 每一组测试数据，输出一个整数，表示每个朋友分到的酒的杯数。 22 4 7 3 4 10 2 11 1000 1000 1000 1000 1000 1 1 51000]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Hexo 自建标签渲染代码段的 Bug 解决方案]]></title>
      <url>%2Fpost%2FNote%2Fhexo_tag.html</url>
      <content type="text"><![CDATA[undefined|undefined|undefined|undefined|笔记|Hexo|解决自建标签渲染问题]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[安徽大学第九届大学生程序设计竞赛 网络预选赛]]></title>
      <url>%2Fpost%2FProject%2FACM2017_03_19.html</url>
      <content type="text"><![CDATA[专题| 编号 题目 题解 A AOJ.831.成功人士 题解 B AOJ.832.迭代归一 题解 C AOJ.833.置换的魔术 题解 D AOJ.834.买买买 题解 E AOJ.835.FJ的旅行 题解 F AOJ.836.周末大法好 题解 G AOJ.837.交换大法好 题解 H AOJ.838.今年多少岁 题解]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 838.今年多少岁]]></title>
      <url>%2Fpost%2FAOJ%2F838.html</url>
      <content type="text"><![CDATA[题解|AOJ|题目 点击显/隐题目 小明出生于1937年7月7日，问对于给定的日期，小明几周岁了，不足一周年的部分可以忽略。 注意：1938年7月6日，小明0周岁，1938年7月7日小明1周岁，同理1939年7月6日，小明1周岁，1939年7月7日，小明2周岁。 一个整数t(1&lt;=t&lt;=100)，表示数据组数对于每组测试数据，三个整数，逗号隔开，分别表示给定日期的年、月、日。给定的日期保证合法， 而且一定是小明出生后的日期，且小明的岁数保证在100以内。 对于每一组数据，输出一个整数，表示小明的周岁数。 21938 7 61938 7 7 01]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 837.交换大法好]]></title>
      <url>%2Fpost%2FAOJ%2F837.html</url>
      <content type="text"><![CDATA[题解|AOJ|二分|BFS|题目 点击显/隐题目 有一天，天上掉馅饼了。不过不是直接掉馅饼，是告诉你你将要得到的馅饼的数量a。聪明的你得到了一种魔法，可以在整数a中交换任意两个相邻的数字。而这种魔法，你最多只能使用k次。你使用魔法操作a，得到的最大的结果就是你最终获得的馅饼数量。 你最多可以获得的馅饼数量是多少呢？ 第一行，一个数字n(1&lt;=n&lt;=60)。代表测试数据数量。接下来n行，每行两个整数a和k（1&lt;=a&lt;=1,000,000,000; 0&lt;=k&lt;=100)。 输出n行，每行一个整数，代表你最多使用魔法k次，可以得到的最大的数字。 21990 11034 2 91903104]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 836.周末大法好]]></title>
      <url>%2Fpost%2FAOJ%2F836.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 点击显/隐题目 在火星上，每年有x天。惊奇的是，和地球上一样，火星上也是有星期的概念的，连续的5天工作日，然后连续的2天周末。他们只有周末放假。现在你的任务是，确定火星上每年可能的最少放假的天数和最多放假的天数。 第一行，一个数字n。代表测试数据数量。接下来n行，每行一个整数x (1&lt;=x&lt;=1,000,000),代表火星每年有x天。 输出n行，每行两个整数。代表火星上每年可能的最少放假的天数和最多放假的天数。 2142 4 40 2]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 831.成功人士]]></title>
      <url>%2Fpost%2FAOJ%2F831.html</url>
      <content type="text"><![CDATA[题解|AOJ|set|题目 点击显/隐题目 学校里共有n个学生，m门课，如果某个学生在某门课中拿到了最高分（可以是并列），则这个学生是成功人士。现在给出n个学生的m门课的成绩，问有多少个成功人士。 第一行，一个整数t，表示测试数据组数，(1&lt;=t&lt;=100)对于每组测试数据，第一行两个整数，n和m，（1&lt;=n,m&lt;=50）接下来n行，每一行有m个数字（中间不分隔），表示这个学生每门课的成绩，其中成绩为1-9的整数。 每组测试数据，一个整数，表示有多少个成功人士。 23 32232321123 5917281182811111 23]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 835.FJ的旅行]]></title>
      <url>%2Fpost%2FAOJ%2F835.html</url>
      <content type="text"><![CDATA[题解|AOJ|网络流|最短路|题目 点击显/隐题目 每当西瓜的朋友来西瓜家看他，西瓜总是喜欢带他们逛自己的豪宅。西瓜的豪宅有N幢楼（1&lt;=N&lt;=1000），用1到N的整数编号。1号楼是西瓜豪宅的大门，N号楼是西瓜的储藏室。西瓜的豪宅里总共有M条道路（1&lt;=M&lt;=10000）。每条道路连接两栋不同的楼房，道路的长度不超过35000。为了最好地炫耀他的豪宅，西瓜准备从大门出发，经过一些楼房到达储藏室，再经过一些楼房回到自己的大门。他要求他的路径越短越好，但是不能经过任意一条道路多于一次。请你计算这样的一条最短路径。西瓜保证这样的路径是存在的。 第一行：N和M第2..M+1行：每行三个整数表示一条道路（起点，终点，长度） 一个整数，表示最短路径长度 4 51 2 12 3 13 4 11 3 22 4 2 6]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 834.买买买]]></title>
      <url>%2Fpost%2FAOJ%2F834.html</url>
      <content type="text"><![CDATA[题解|AOJ|枚举|题目 点击显/隐题目 一天Alice打开了她日常玩的游戏，发现她里面还有n个游戏币，她想把这些游戏币花光。现在可以买的一共三种道具，分别是房子（每一个价值1234567个游戏币），车子（每一个价值123456个游戏币），电脑（每一个价值1234个游戏币）。现在她想知道，通过买这三种道具是否可以把n个游戏币全部花光。 第一行，一个数字t(1&lt;=t&lt;=100)。代表测试数据数量。对于每一组测试数据，一个整数n（1&lt;=n&lt;=1000000000)，代表现在的游戏币。 输出n行，每行输出”YES”或者”NO”，表示她可以或者不可以把游戏币全部花光。 2135925717851817 YESNO]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 833.置换的魔术]]></title>
      <url>%2Fpost%2FAOJ%2F833.html</url>
      <content type="text"><![CDATA[题解|AOJ|题目 点击显/隐题目 有n个正整数，其中1到n的正整数出现且只出现一次的序列，称为1-n的一个排列。如1，2，3和3，1，2都是1-3的排列，但是1，3，3不是1-3的排列。如今，给n个数，问最少修改几个数，可以使得序列成为1-n的一个排列。 一个整数t，表示测试数据的组数，(1&lt;=t&lt;=210)对于每一组测试数据，第一行为一个整数n，（1 &lt;= n &lt;= 500）第二行有n个整数a1,a2,……an，空格分隔，(ai为任意的32位有符号正整数)。 保证多组数据中的n的和不超过100000。 每组测试数据，输出一个整数，表示最少修改几个数。 251 3 2 4 561 1 1 1 1 1 05]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 832.迭代归一]]></title>
      <url>%2Fpost%2FAOJ%2F832.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 点击显/隐题目 我们把一个正整数的每一位上的数字加起来，得到新的数字，我们把这样的一次操作称为一次迭代变换。直到这个数字只有一位数。如，9876经过一次变换成为9+8+7+6=30，经过第二次变换成为3+0=3，结束。那么9876就经过了两次迭代变换。如今给一个正整数，问需要迭代变换多少次后会停止。 一个整数t，表示测试数据组数(1&lt;=t&lt;=100)。对于每组测试数据，只有一行，表示一个正整数，正整数最多有100000位。 输出若干行，每行对应每组数据需要迭代变换的次数 321099999999 012]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[安徽大学第九届大学生程序设计竞赛热身赛]]></title>
      <url>%2Fpost%2FProject%2FACM2017_03_18.html</url>
      <content type="text"><![CDATA[专题|题解 部分题目之前写过,就没重写(我是写题解的时候才发现……)所以代码风格可能差异较大 编号 题目 题解 A AOJ.480.分数序列求和 题解 B AOJ.483.求素数 题解 C AOJ.775.迷宫问题 题解 D AOJ.481.猴子摘桃 题解 E AOJ.776.马的走法 题解 F AOJ.482.二分法求方程的根 题解 G AOJ.781.素数环 题解 H AOJ.763.过河卒 题解 I AOJ.754.数根 题解 J AOJ.759.会绕圈的数 题解]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 754.数根]]></title>
      <url>%2Fpost%2FAOJ%2F754.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 点击显/隐题目 计算该整数的各位数字之和，如果结果值是单个数字的数，那么这个数就是所求数根；如果结果值是由两位数或两位以上的数字组成的数，则继续计算各位数字的和，直到结果值只有一位数字为止。24， 2+4=6, 则根是639， 3+9=12，1+2=3，根是3 输入包括多组数据，每组测试数据包括一个正整数，并且占一行，输入数据为0时，表示输入结束。 对于每组测试数据，给出对应输出，并且每组输出占一行 24390 63]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 781.素数环]]></title>
      <url>%2Fpost%2FAOJ%2F781.html</url>
      <content type="text"><![CDATA[题解|AOJ|质数|DFS|打表|暴力|题目 点击显/隐题目 把1-20这20个数摆成一个环，要求相邻的两个数的和是一个素数。编写程序，对给定的第一个数m,打印出满足条件的一种排列顺序。如果有多组解，输出字典序最小的一组。 包括多组测试数据，每组测试数据占一行，并且只有一个整数m，(0&lt;=m&lt;=20),当m=0时，表示输入结束。 对每组测试数据输出一行结果，结果为第一个整数为m的一种排列序列，序列中共有20个整数，各数之间用空格分隔。如果有多组解，输出字典序最小的一组。 150 1 2 3 4 7 6 5 8 9 10 13 16 15 14 17 20 11 12 19 185 2 1 4 3 8 9 10 7 6 11 20 17 12 19 18 13 16 15 14]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 482.二分法求方程的根]]></title>
      <url>%2Fpost%2FAOJ%2F482.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|double|题目 点击显/隐题目 用二分法求方程f(x)=ax4+bx3+cx2+dx+e=0 在 (x1,x2) 之内的根本题保证f(x1)*f(x2)&lt;=0且(x1,x2)内只有一个根 行1：5个空格分隔的整数a,b,c,d,e，a,b,c,d,e∈[-9,9]行2：2个空格分隔的整数x1,x2，x1,x2∈[-10,10]，x1&lt;x2 行1：一个浮点数，代表根，精确到小数点后10位 0 2 -4 3 -6-10 10 2.0000000000]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 481.猴子摘桃]]></title>
      <url>%2Fpost%2FAOJ%2F481.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 点击显/隐题目 猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第n天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。 行1：一个整数n，n∈[2,20] 行1：一个整数，代表第一天桃子的总数 10 1534]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 483.求素数]]></title>
      <url>%2Fpost%2FAOJ%2F483.html</url>
      <content type="text"><![CDATA[题解|AOJ|质数|题目 点击显/隐题目 用筛选法求(1,n]之内的全部素数 行1：一个整数n，n∈[2,100000] 每行输出一个素数，由小到大排列 20 235711131719]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 480.分数序列求和]]></title>
      <url>%2Fpost%2FAOJ%2F480.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|double|题目 点击显/隐题目 有一个分数序列:2/1,3/2,5/3,8/5……求出这个数列的前n项之和. 行1：一个整数n，n∈[1,40] 行1：累加和，精确到小数点后6位 20 32.660261]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[服务器 SQL 数据库还原]]></title>
      <url>%2Fpost%2FNote%2FSQL_Restore.html</url>
      <content type="text"><![CDATA[undefined|undefined|undefined|undefined|undefined|笔记|SQL|数据库|解决了两个问题： 未正常卸载 SQL 2005 的情况下重装 SQL 提示 “工作站组件、联机丛书和开发工具安装失败“ 在只有 MDF 和 LDF 文件情况下还原数据库]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[学习安卓开发]]></title>
      <url>%2Fpost%2FNote%2FLearnAndroid.html</url>
      <content type="text"><![CDATA[笔记|Android|安卓又是一个大坑]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[COGS 185.挖水井]]></title>
      <url>%2Fpost%2FCOGS%2F185.html</url>
      <content type="text"><![CDATA[题解|图论|最小生成树|COGS|题目 点击显/隐题目 农夫约翰决定给他的N（1&lt;=N&lt;=300）个牧场浇水，这些牧场被自然的命名为1..N。他可以给一个牧场引入水通过在这个牧场挖一口井或者修一条管道使这个牧场和一个已经有水的牧场连接。在牧场i挖一口井的花费是w_i（1&lt;=w_i&lt;=100000）。修建一条水管连接牧场i和牧场j的花费是p_ij（1&lt;=p_ij&lt;=100000;p_ij=p_ji;p_ii=0）。请确定农夫约翰为了完成浇灌所有的牧场所需的最小的总花费。 第1行：一个单独的整数n。第2..n+1行：第i+1行包含一个单独的整数w_i。第n+2..2n+1行：第n+1+i行包含n个用空可分开的整数；其中第j个数是p_ij。 第1行：一个单独的整数，表示花费。 454430 2 2 22 0 3 32 3 0 42 3 4 0 9]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[安徽大学第八届程序设计竞赛 现场决赛]]></title>
      <url>%2Fpost%2FProject%2FAOJ8th.html</url>
      <content type="text"><![CDATA[专题| 题号 名称 题解 788 数方块 题解 789 买酒 题解 793 西瓜理发记（一） 题解 794 西瓜理发记（二） 题解 795 西瓜理发记（三） 题解 797 Roll不是处女座 题解 802 运输宝物 题解]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 795.西瓜理发记(三)]]></title>
      <url>%2Fpost%2FAOJ%2F795.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|DFS|树形dp|题目 点击显/隐题目 顺利潜入勺林寺几天后，方丈给了西瓜一个光荣而艰巨的任务——打扫寺庙中的道路。同时给了西瓜一张勺林寺的地图。西瓜这才知道，勺林寺中总共有n座房子，但道路只有n-1条，这n-1条道路连接了寺中的所有房子，即保证在任何两座房子都能沿着道路抵达。好在西瓜人缘不错，他知道每座房子中都有个自己的朋友，只要给他们每个人打个电话，让他到自己这里来，顺便把路也扫了，即给某座房子中的朋友打过电话后，可认为从该房子到西瓜所在的位置之间所有的道路都会被打扫干净。同时西瓜还知道，这n-1条道路中有一些路昨天已经被人打扫过了不需要再打扫一遍。现在西瓜想知道，自己最少要给多少个朋友打电话才能完成方丈给的任务。西瓜在编号为1的房子中。 输入包含多组数据每组数据第一行包含一个n(2?≤?n?≤?10^5)，表示有n座房子之后n-1行，每行三个数字a，b，c表示在房子a和房子b之间有一条路，c等于1表示路已被打扫，c等于2表示路未被打扫。 每组数据输出一个整数k，表示最少要给k个朋友打电话 51 2 21 3 21 4 21 5 2 4]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 797.Roll不是处女座]]></title>
      <url>%2Fpost%2FAOJ%2F797.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|最长上升子序列|题目 点击显/隐题目 一天Roll在codeforces网站上做ACM练习的时候，由于打开题目的顺序比较随性，他看到了他的浏览器标签页是这样的： 虽然Roll不是处女座，但他还是非常地不开心，于是他移动了标签页，就变成了这样: 由此想到了一个问题，对于一个乱序的不重复的数字序列，最少需要移动几个数字，能使它们从小到大排列。例如序列 4 2 3 1 5，只要把1放到第一个，4放到3和5之间，就变成了1 2 3 4 5 输入数据包含多组每组数据第一行一个数n (0﹤n≤?1000)，表示这个序列有n个数字。第二行包含n个数字Ai(0≤Ai≤10^9), 对于每组数据输出一个整数，表示最少需要移动几个数字。 54 2 3 1 521 2 20]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 6015.Skip the Class]]></title>
      <url>%2Fpost%2FHDU%2F6015.html</url>
      <content type="text"><![CDATA[undefined|题解|HDU|题目 点击显/隐题目 Finally term begins. luras loves school so much as she could skip the class happily again.(wtf?) Luras will take n lessons in sequence(in another word, to have a chance to skip xDDDD). For every lesson, it has its own type and value to skip. But the only thing to note here is that luras can’t skip the same type lesson more than twice. Which means if she have escaped the class type twice, she has to take all other lessons of this type. Now please answer the highest value luras can earn if she choose in the best way. The first line is an integer T which indicates the case number. And as for each case, the first line is an integer n which indicates the number of lessons luras will take in sequence. Then there are n lines, for each line, there is a string consists of letters from ‘a’ to ‘z’ which is within the length of 10,and there is also an integer which is the value of this lesson. The string indicates the lesson type and the same string stands for the same lesson type. It is guaranteed that—— T is about 1000 For 100% cases, 1 &lt;= n &lt;= 100，1 &lt;= |s| &lt;= 10, 1 &lt;= v &lt;= 1000 As for each case, you need to output a single line.there should be 1 integer in the line which represents the highest value luras can earn if she choose in the best way. 25english 1english 2english 3math 10cook 1002a 1a 2 1153]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Miller_rabin 判断素数]]></title>
      <url>%2Fpost%2FAlgorithm%2FMiller_rabin.html</url>
      <content type="text"><![CDATA[undefined|undefined|算法|数学|质数|Miller_rabin|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[使用 Termux 在手机上运行 linux 黑科技]]></title>
      <url>%2Fpost%2FNote%2FTermux.html</url>
      <content type="text"><![CDATA[笔记|Termux|非常棒的神器不同于其他终端,这个终端是一个寄居在安卓系统中的阉割版 Linux手机里的 /data/data/com.termux/files/ 目录对应的就是 Linux 的根目录 / 在自己的这一块地方里, Termux 拥有绝对权限,但是出去后需要 root 权限才能进行操作 这篇博客介绍Termux的基础配置及在手机上写Hexo博客(是不是很激动[滑稽])]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Hexo本地搜索及部分SEO优化]]></title>
      <url>%2Fpost%2FNote%2FLocalSearch.html</url>
      <content type="text"><![CDATA[undefined|undefined|笔记|SEO|Hexo|解决本地搜索问题,并且修改了 Next 主题的部分SEO内容,写了一个小插件用于生成 urls.txt 用来给百度主动推送]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[三星 C5 Google(港版) + root + Xposed + 其他设置]]></title>
      <url>%2Fpost%2FWriting%2Fsamsung_c5_root.html</url>
      <content type="text"><![CDATA[随笔|Android|三星(SAMSUNG)|C5|root|== 刷机前注意！！ ==刷机有风险,会失去保修、失去 Knox 、失去 SAMSUNG PAY 、失去指纹支付(支付宝、微信)]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2017安徽省程序设计竞赛培训笔记]]></title>
      <url>%2Fpost%2FNote%2F2017_Winter_Coding_Training.html</url>
      <content type="text"><![CDATA[笔记|2017-1-16 ~ 2017-1-19内容: 数学(数论 &amp; 组合数学) 数据结构 图论 动态规划]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5984.Pocky(2016 CCPC 青岛 C)]]></title>
      <url>%2Fpost%2FHDU%2F5984.html</url>
      <content type="text"><![CDATA[题解|HDU|数学|CCPC|题目 点击显/隐题目 Let’s talking about something of eating a pocky. Here is a Decorer Pocky, with colorful decorative stripes in the coating, of length L.While the length of remaining pocky is longer than d, we perform the following procedure.We break the pocky at any point on it in an equal possibility and this will divide the remaining pocky into two parts.Take the left part and eat it. When it is not longer than d, we do not repeat this procedure.Now we want to know the expected number of times we should repeat the procedure above.Round it to 6 decimal places behind the decimal point. The first line of input contains an integer N which is the number of test cases. Each of the N lines contains two float-numbers L and d respectively with at most 5 decimal places behind the decimal point where 1 ≤ d, L ≤ 150. For each test case, output the expected number of times rounded to 6 decimal places behind the decimal point in a line. 61.0 1.02.0 1.04.0 1.08.0 1.016.0 1.07.00 3.00 0.0000001.6931472.3862943.0794423.7725891.847298]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5983.Pocket Cube(2016 CCPC 青岛 B)]]></title>
      <url>%2Fpost%2FHDU%2F5983.html</url>
      <content type="text"><![CDATA[题解|HDU|模拟|CCPC|题目 点击显/隐题目 The Pocket Cube, also known as the Mini Cube or the Ice Cube, is the 2 × 2 × 2 equivalence of a Rubik’s Cube.The cube consists of 8 pieces, all corners.Each piece is labeled by a three dimensional coordinate (h, k, l) where h, k, l ∈ {0, 1}. Each of the six faces owns four small faces filled with a positive integer.For each step, you can choose a certain face and turn the face ninety degrees clockwise or counterclockwise.You should judge that if one can restore the pocket cube in one step. We say a pocket cube has been restored if each face owns four same integers. The first line of input contains one integer N(N ≤ 30) which is the number of test cases.For each test case, the first line describes the top face of the pocket cube, which is the common 2 × 2 face of pieceslabelled by (0, 0, 1),(0, 1, 1),(1, 0, 1),(1, 1, 1). Four integers are given corresponding to the above pieces.The second line describes the front face, the common face of (1, 0, 1),(1, 1, 1),(1, 0, 0),(1, 1, 0). Four integers aregiven corresponding to the above pieces.The third line describes the bottom face, the common face of (1, 0, 0),(1, 1, 0),(0, 0, 0),(0, 1, 0). Four integers aregiven corresponding to the above pieces.The fourth line describes the back face, the common face of (0, 0, 0),(0, 1, 0),(0, 0, 1),(0, 1, 1). Four integers aregiven corresponding to the above pieces.The fifth line describes the left face, the common face of (0, 0, 0),(0, 0, 1),(1, 0, 0),(1, 0, 1). Four integers are givencorresponding to the above pieces.The six line describes the right face, the common face of (0, 1, 1),(0, 1, 0),(1, 1, 1),(1, 1, 0). Four integers are givencorresponding to the above pieces.In other words, each test case contains 24 integers a, b, c to x. You can flat the surface to get the surface developmentas follows. + - + - + - + - + - + - + | q | r | a | b | u | v | + - + - + - + - + - + - + | s | t | c | d | w | x | + - + - + - + - + - + - + | e | f | + - + - + | g | h | + - + - + | i | j | + - + - + | k | l | + - + - + | m | n | + - + - + | o | p | + - + - + For each test case, output YES if can be restored in one step, otherwise output NO. 41 1 1 12 2 2 23 3 3 34 4 4 45 5 5 56 6 6 66 6 6 61 1 1 12 2 2 23 3 3 35 5 5 54 4 4 41 4 1 42 1 2 13 2 3 24 3 4 35 5 5 56 6 6 61 3 1 32 4 2 43 1 3 14 2 4 25 5 5 56 6 6 6 YESYESYESNO]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[遗传算法解决TSP问题]]></title>
      <url>%2Fpost%2FAlgorithm%2FGenetic_Algorithm.html</url>
      <content type="text"><![CDATA[算法|遗传算法|TSP|写了下遗传算法的TSP问题 要求如下: N&gt;=8。 随即生成N个城市间的连接矩阵。 指定起始城市。 给出每一代的最优路线和总路线长度。 以代数T作为结束条件，T&gt;=50。 巡回旅行商问题给定一组n个城市和俩俩之间的直达距离，寻找一条闭合的旅程，使得每个城市刚好经过一次且总的旅行距离最短。TSP问题也称为货郎担问题，是一个古老的问题。最早可以追溯到1759年Euler提出的骑士旅行的问题。1948年，由美国兰德公司推动，TSP成为近代组合优化领域的典型难题。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[使用 Python 写 OJ 题目格式生成工具]]></title>
      <url>%2Fpost%2FNote%2Fpython_problem_format.html</url>
      <content type="text"><![CDATA[笔记|Python|使用正则表达式将文本分割开,然后拼接成应该的格式 转码成 utf-8 输出出来 算是第一次学 Python 吧学习了下一些基本的语法]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5982.Relic Discovery(2016 CCPC 青岛 A)]]></title>
      <url>%2Fpost%2FHDU%2F5982.html</url>
      <content type="text"><![CDATA[题解|HDU|模拟|CCPC|题目 点击显/隐题目 Recently, paleoanthropologists have found historical remains on an island in the Atlantic Ocean. The most inspiring thing is that they excavated in a magnificent cave and found that it was a huge tomb. Inside the construction,researchers identified a large number of skeletons, and funeral objects including stone axe, livestock bones and murals. Now, all items have been sorted, and they can be divided into N types. After they were checked attentively, you are told that there are Ai items of the i-th type. Further more, each item of the i-th type requires Bi million dollars for transportation, analysis, and preservation averagely. As your job, you need to calculate the total expenditure. The first line of input contains an integer T which is the number of test cases. For each test case, the first line contains an integer N which is the number of types. In the next N lines, the i-th line contains two numbers Ai and Bi as described above. All numbers are positive integers and less than 101. For each case, output one integer, the total expenditure in million dollars. 121 23 4 14]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[VS Code 便携环境配置]]></title>
      <url>%2Fpost%2FNote%2Fvscode.html</url>
      <content type="text"><![CDATA[undefined|undefined|undefined|undefined|undefined|undefined|笔记|Hexo|vscode|MinGW|Python|关键词: U盘写Hexo博客 | U盘编译C/C++ | U盘编译Python支持 node.jsHexoGitPythonMinGW 在 Hexo + C++ 便携套装 里,介绍了将 VS Code portable 化的基础思路经过改进,将该功能改的更加完美 Github]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[给 Hexo 加上 bootstrap 的一些特效 &amp;&amp; jquery 实现隐藏功能]]></title>
      <url>%2Fpost%2FNote%2FNew_function.html</url>
      <content type="text"><![CDATA[笔记|Hexo|javascript|jquery|css|bootstrap|查东西的时候看到了 Bootstrap 的特效,觉得非常好看,就像把里面的一些功能加到 Hexo 的 Next 主题里(有别的主题是自带 Bootstrap 的,不过 Next 已经被修改了好多,不想在折腾了【虽然有折腾了一晚上】) 加了一些好看的标签,同时修改了 Next 自带的 code 标签]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5943.Kingdom of Obsession(2016 CCPC 杭州 K)]]></title>
      <url>%2Fpost%2FHDU%2F5943.html</url>
      <content type="text"><![CDATA[题解|HDU|质数|二分图匹配|匈牙利算法|CCPC|题目 点击显/隐题目 There is a kindom of obsession, so people in this kingdom do things very strictly. They name themselves in integer, and there are n people with their id continuous (s+1,s+2, ,s+n) standing in a line in arbitrary order, be more obsessively, people with id x wants to stand at yth position which satisfy x mod y=0 Is there any way to satisfy everyone’s requirement First line contains an integer T, which indicates the number of test cases. Every test case contains one line with two integers n, s. Limits 1≤T≤100.1≤n≤109.0≤s≤109. For every test case, you should output ‘Case #x: y’, where x indicates the case number and counts from 1 and y is the result string. If there is any way to satisfy everyone’s requirement, y equals ‘Yes’, otherwise y equals ‘No’. 25 144 11 Case #1: NoCase #2: Yes]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2063.过山车]]></title>
      <url>%2Fpost%2FHDU%2F2063.html</url>
      <content type="text"><![CDATA[题解|HDU|二分图匹配|匈牙利算法|题目 Description RPG girls今天和大家一起去游乐场玩，终于可以坐上梦寐以求的过山车了。可是，过山车的每一排只有两个座位，而且还有条不成文的规矩，就是每个女生必须找个个男生做partner和她同坐。但是，每个女孩都有各自的想法，举个例子把，Rabbit只愿意和XHD或PQK做partner，Grass只愿意和linle或LL做partner，PrincessSnow愿意和水域浪子或伪酷儿做partner。考虑到经费问题，boss刘决定只让找到partner的人去坐过山车，其他的人，嘿嘿，就站在下面看着吧。聪明的Acmer，你可以帮忙算算最多有多少对组合可以坐上过山车吗？]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Hexo 黑色主题]]></title>
      <url>%2Fpost%2FNote%2FBlackTheme.html</url>
      <content type="text"><![CDATA[笔记|Hexo|想搭下黑色主题的 Next然而都说不好看哭记录下改动: black.css]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5937.Equation(2016 CCPC 杭州 E)]]></title>
      <url>%2Fpost%2FHDU%2F5937.html</url>
      <content type="text"><![CDATA[题解|HDU|DFS|暴力|CCPC|搜索|剪枝|题目 Description Little Ruins is a studious boy, recently he learned addition operation! He was rewarded some number bricks of 1 to 9 and infinity bricks of addition mark ‘+’ and equal mark ‘=’. Now little Ruins is puzzled by those bricks because he wants to put those bricks into as many different addition equations form x+y=z as possible. Each brick can be used at most once and x, y, z are one digit integer. As Ruins is a beginer of addition operation, x, y and z will be single digit number. Two addition equations are different if any number of x, y and z is different. Please help little Ruins to calculate the maximum number of different addition equations.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5936.Difference(2016 CCPC 杭州 D)]]></title>
      <url>%2Fpost%2FHDU%2F5936.html</url>
      <content type="text"><![CDATA[题解|HDU|记忆化搜索|暴力|CCPC|中途相遇法|题目 Description Little Ruins is playing a number game, first he chooses two positive integers y and K and calculates f(y,K), here f(y,K) = ∑in every digits of y zK (f(233,2) = 22+32+32=22) then he gets the result x=f(y,K)-y As Ruins is forgetful, a few seconds later, he only remembers K, x and forgets y. please help him find how many y satisfy x=f(y,K)-y.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Hexo + C++ 便携套装]]></title>
      <url>%2Fpost%2FNote%2FPortable.html</url>
      <content type="text"><![CDATA[笔记|Hexo|portable|git|nodejs|vscode|Hexo 相比于其他博客系统,最大的问题就是发布博客需要大量的前置工作:安装 Nodejs,安装 Git,安装一个靠谱的 Markdown 编辑器……因此,将 环境装到U盘 里是一个非常好的解决方案]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1269.迷宫城堡]]></title>
      <url>%2Fpost%2FHDU%2F1269.html</url>
      <content type="text"><![CDATA[题解|HDU|图论|强连通分量|kosaraju|tarjan|gabow|题目 Description 为了训练小希的方向感，Gardon建立了一座大城堡，里面有N个房间(N&lt;=10000)和M条通道(M&lt;=100000)，每个通道都是单向的，就是说若称某通道连通了A房间和B房间，只说明可以通过这个通道由A房间到达B房间，但并不说明通过它可以由B房间到达A房间。Gardon需要请你写个程序确认一下是否任意两个房间都是相互连通的，即：对于任意的i和j，至少存在一条路径可以从房间i到房间j，也存在一条路径可以从房间j到房间i。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[强连通分量缩点 — Kosaraju | Tarjan | Gabow]]></title>
      <url>%2Fpost%2FAlgorithm%2FStrongly_connected_components.html</url>
      <content type="text"><![CDATA[算法|图论|强连通分量|kosaraju|tarjan|gabow|强连通分量如果两个点能够互相到达,那么说明两个点在一个 强连通分量 (成 环 )里其概念与 并查集 相似 不同点在于并查集为无向图,直接遍历,只要能访问到就在一个并查集里而强连通分量操作的是无向图,需要考虑边的方向 如图,最左侧的分支不是一个强连通分量,而右两个是 在许多图的题目里,需要对节点进行 强连通分量缩点 从而简化后续操作的复杂度缩点后,新的图是一个 有向无环图(DAG) ,因此可以使用其他算法进行其他的操作 强连通分量的算法有 kosaraju tarjan gabow 找了模板题 HDU 1269.迷宫城堡 测试写的模板有没有问题]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5934.Bomb(2016 CCPC 杭州 B)]]></title>
      <url>%2Fpost%2FHDU%2F5934.html</url>
      <content type="text"><![CDATA[题解|HDU|图论|强连通分量|tarjan|CCPC|题目 Description There are N bombs needing exploding. Each bomb has three attributes: exploding radius ri, position (xi,yi) and lighting-cost ci which means you need to pay ci cost making it explode. If a un-lighting bomb is in or on the border the exploding area of another exploding one, the un-lighting bomb also will explode. Now you know the attributes of all bombs, please use the minimum cost to explode all bombs.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5938.Four Operations(2016 CCPC 杭州 F)]]></title>
      <url>%2Fpost%2FHDU%2F5938.html</url>
      <content type="text"><![CDATA[题解|HDU|数学|模拟|CCPC|题目 Description Little Ruins is a studious boy, recently he learned the four operations! Now he want to use four operations to generate a number, he takes a string which only contains digits ‘1’ - ‘9’, and split it into 5 intervals and add the four operations ‘+’, ‘-‘, ‘*’ and ‘/‘ in order, then calculate the result(/ used as integer division). Now please help him to get the largest result.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5935.Car(2016 CCPC 杭州 C)]]></title>
      <url>%2Fpost%2FHDU%2F5935.html</url>
      <content type="text"><![CDATA[题解|HDU|贪心算法|CCPC|题目 Description Ruins is driving a car to participating in a programming contest. As on a very tight schedule, he will drive the car without any slow down, so the speed of the car is non-decrease real number. Of course, his speeding caught the attention of the traffic police. Police record N positions of Ruins without time mark, the only thing they know is every position is recorded at an integer time point and Ruins started at 0. Now they want to know the minimum time that Ruins used to pass the last position.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5933.ArcSoft's Office Rearrangement(2016 CCPC 杭州 A)]]></title>
      <url>%2Fpost%2FHDU%2F5933.html</url>
      <content type="text"><![CDATA[题解|HDU|模拟|CCPC|题目 Description ArcSoft, Inc. is a leading global professional computer photography and computer vision technology company. There are N working blocks in ArcSoft company, which form a straight line. The CEO of ArcSoft thinks that every block should have equal number of employees, so he wants to re-arrange the current blocks into K new blocks by the following two operations: merge two neighbor blocks into a new block, and the new block’s size is the sum of two old blocks’. split one block into two new blocks, and you can assign the size of each block, but the sum should be equal to the old block. Now the CEO wants to know the minimum operations to re-arrange current blocks into K block with equal size, please help him.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[第一个 Qt 程序]]></title>
      <url>%2Fpost%2FNote%2FFirst_qt.html</url>
      <content type="text"><![CDATA[笔记|Qt|帮忙写数据结构的课程设计,要用到界面,就顺便入门了下 Qt (算不上入门,只是能跑起来而已)]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[ACM 2016级新生赛题解(2)]]></title>
      <url>%2Fpost%2FProject%2FACM2016-10-22.html</url>
      <content type="text"><![CDATA[专题| 题号 题目 Problem A A + B Problem Problem B 求绝对值 Problem C 成绩转换 Problem D 水仙花数 Problem E 数据的交换输出 Problem F 字符串统计 Problem G 多项式求和 Problem H 求数列的和 Problem I 折线分割平面 Problem J Choosing Teams 本题解采用 C++ ,大概思路与 C 一样cin 对应 scanfcout 对应 printf 如果还有问题群里问即可,有余力的同学可以看群公告里上一次比赛那一套题更难,群文件有上次的题解]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[hihocoder 1385.A Simple Job(ACM-ICPC国际大学生程序设计竞赛北京赛区(2016)网络赛)]]></title>
      <url>%2Fpost%2Fhihocoder%2F1385.html</url>
      <content type="text"><![CDATA[题解|模拟|映射(map)|hihocoder|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[hihocoder 1383.The Book List(ACM-ICPC国际大学生程序设计竞赛北京赛区(2016)网络赛)]]></title>
      <url>%2Fpost%2Fhihocoder%2F1383.html</url>
      <content type="text"><![CDATA[题解|模拟|链表(list)|hihocoder|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1532.Drainage Ditches]]></title>
      <url>%2Fpost%2FHDU%2F1273.html</url>
      <content type="text"><![CDATA[题解|HDU|网络流|最大流最小割|Dinic|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1273.Drainage Ditches]]></title>
      <url>%2Fpost%2FPOJ%2F1273.html</url>
      <content type="text"><![CDATA[题解|网络流|最大流最小割|Dinic|POJ|题目 Description Every time it rains on Farmer John’s fields, a pond forms over Bessie’s favorite clover patch. This means that the clover is covered by water for awhile and takes quite a long time to regrow. Thus, Farmer John has built a set of drainage ditches so that Bessie’s clover patch is never covered in water. Instead, the water is drained to a nearby stream. Being an ace engineer, Farmer John has also installed regulators at the beginning of each ditch, so he can control at what rate water flows into that ditch.Farmer John knows not only how many gallons of water each ditch can transport per minute but also the exact layout of the ditches, which feed out of the pond and into each other and stream in a potentially complex network.Given all this information, determine the maximum rate at which water can be transported out of the pond and into the stream. For any given ditch, water flows in only one direction, but there might be a way that water can flow in a circle.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5889.Barricade(2016 ACM/ICPC Asia Regional Qingdao Online)]]></title>
      <url>%2Fpost%2FHDU%2F5889.html</url>
      <content type="text"><![CDATA[题解|HDU|网络流|最短路|BFS|DFS|最大流最小割|Dinic|题目 Description The empire is under attack again. The general of empire is planning to defend his castle. The land can be seen as N towns and M roads, and each road has the same length and connects two towns. The town numbered 1 is where general’s castle is located, and the town numbered N is where the enemies are staying. The general supposes that the enemies would choose a shortest path. He knows his army is not ready to fight and he needs more time. Consequently he decides to put some barricades on some roads to slow down his enemies. Now, he asks you to find a way to set these barricades to make sure the enemies would meet at least one of them. Moreover, the barricade on the i-th road requires wi units of wood. Because of lacking resources, you need to use as less wood as possible.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5882.Balanced Game(2016 ACM/ICPC Asia Regional Qingdao Online)]]></title>
      <url>%2Fpost%2FHDU%2F5882.html</url>
      <content type="text"><![CDATA[题解|HDU|数学|贪心算法|题目 DescriptionRock-paper-scissors is a zero-sum hand game usually played between two people, in which each player simultaneously forms one of three shapes with an outstretched hand. These shapes are “rock”, “paper”, and “scissors”. The game has only three possible outcomes other than a tie: a player who decides to play rock will beat another player who has chosen scissors (“rock crushes scissors”) but will lose to one who has played paper (“paper covers rock”); a play of paper will lose to a play of scissors (“scissors cut paper”). If both players choose the same shape, the game is tied and is usually immediately replayed to break the tie. Recently, there is a upgraded edition of this game: rock-paper-scissors-Spock-lizard, in which there are totally five shapes. The rule is simple: scissors cuts paper; paper covers rock; rock crushes lizard; lizard poisons Spock; Spock smashes scissors; scissors decapitates lizard; lizard eats paper; paper disproves Spock; Spock vaporizes rock; and as it always has, rock crushes scissors. Both rock-paper-scissors and rock-paper-scissors-Spock-lizard are balanced games. Because there does not exist a strategy which is better than another. In other words, if one chooses shapes randomly, the possibility he or she wins is exactly 50% no matter how the other one plays (if there is a tie, repeat this game until someone wins). Given an integer N, representing the count of shapes in a game. You need to find out if there exist a rule to make this game balanced.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5879.Cure(2016 ACM/ICPC Asia Regional Qingdao Online)]]></title>
      <url>%2Fpost%2FHDU%2F5879.html</url>
      <content type="text"><![CDATA[题解|HDU|数学|高精度算法|题目 DescriptionGiven an integer n, we only want to know the sum of 1/k2 where k from 1 to n.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1754.I Hate It]]></title>
      <url>%2Fpost%2FHDU%2F1754.html</url>
      <content type="text"><![CDATA[题解|HDU|线段树|题目 Description 很多学校流行一种比较的习惯。老师们很喜欢询问，从某某到某某当中，分数最高的是多少。这让很多学生很反感。 不管你喜不喜欢，现在需要你做的是，就是按照老师的要求，写一个程序，模拟老师的询问。当然，老师有时候需要更新某位同学的成绩。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1216.敌兵布阵]]></title>
      <url>%2Fpost%2FHDU%2F1216.html</url>
      <content type="text"><![CDATA[题解|HDU|线段树|题目 Description C国的死对头A国这段时间正在进行军事演习，所以C国间谍头子Derek和他手下Tidy又开始忙乎了。A国在海岸线沿直线布置了N个工兵营地,Derek和Tidy的任务就是要监视这些工兵营地的活动情况。由于采取了某种先进的监测手段，所以每个工兵营地的人数C国都掌握的一清二楚,每个工兵营地的人数都有可能发生变动，可能增加或减少若干人手,但这些都逃不过C国的监视。中央情报局要研究敌人究竟演习什么战术,所以Tidy要随时向Derek汇报某一段连续的工兵营地一共有多少人,例如Derek问:“Tidy,马上汇报第3个营地到第10个营地共有多少人!”Tidy就要马上开始计算这一段的总人数并汇报。但敌兵营地的人数经常变动，而Derek每次询问的段都不一样，所以Tidy不得不每次都一个一个营地的去数，很快就精疲力尽了，Derek对Tidy的计算速度越来越不满:”你个死肥仔，算得这么慢，我炒你鱿鱼!”Tidy想：“你自己来算算看，这可真是一项累人的工作!我恨不得你炒我鱿鱼呢!”无奈之下，Tidy只好打电话向计算机专家Windbreaker求救,Windbreaker说：“死肥仔，叫你平时做多点acm题和看多点算法书，现在尝到苦果了吧!”Tidy说：”我知错了。。。”但Windbreaker已经挂掉电话了。Tidy很苦恼，这么算他真的会崩溃的，聪明的读者，你能写个程序帮他完成这项工作吗？不过如果你的程序效率不够高的话，Tidy还是会受到Derek的责骂的.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 11624.Fire!]]></title>
      <url>%2Fpost%2FUva%2F11624.html</url>
      <content type="text"><![CDATA[题解|BFS|Uva|题目 Joe works in a maze.Unfortunately, portions of the maze have caught on fire, and the owner of the maze neglected to create a fire escape plan.Help Joe escape the maze.Given Joe’s location in the maze and which squares of the maze are on fire, you must determine whether Joe can exit the maze before the fire reaches him, and how fast he can do it.Joe and the fire each move one square per minute, vertically or horizontally (not diagonally).The fire spreads all four directions from each square that is on fire.Joe may exit the maze from any square that borders the edge of the maze.Neither Joe nor the fire may enter a square that is occupied by a wall.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1995.Raising Modulo Numbers]]></title>
      <url>%2Fpost%2FPOJ%2F1995.html</url>
      <content type="text"><![CDATA[题解|快速幂取模|POJ|题目 Description People are different. Some secretly read magazines full of interesting girls’ pictures, others create an A-bomb in their cellar, others like using Windows, and some like difficult mathematical games. Latest marketing research shows, that this market segment was so far underestimated and that there is lack of such games. This kind of game was thus included into the KOKODáKH. The rules follow: Each player chooses two numbers Ai and Bi and writes them on a slip of paper. Others cannot see the numbers. In a given moment all players show their numbers to the others. The goal is to determine the sum of all expressions Ai Bi from all players including oneself and determine the remainder after division by a given number M. The winner is the one who first determines the correct result. According to the players’ experience it is possible to increase the difficulty by choosing higher numbers. You should write a program that calculates the result and is able to find out who won the game.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 2184.Cow Exhibition]]></title>
      <url>%2Fpost%2FPOJ%2F2184.html</url>
      <content type="text"><![CDATA[题解|动态规划|背包问题|POJ|题目 Description “Fat and docile, big and dumb, they look so stupid, they aren’t muchfun…” Cows with Guns by Dana Lyons The cows want to prove to the public that they are both smart and fun. In order to do this, Bessie has organized an exhibition that will be put on by the cows. She has given each of the N (1 &lt;= N &lt;= 100) cows a thorough interview and determined two values for each cow: the smartness Si (-1000 &lt;= Si &lt;= 1000) of the cow and the funness Fi (-1000 &lt;= Fi &lt;= 1000) of the cow. Bessie must choose which cows she wants to bring to her exhibition. She believes that the total smartness TS of the group is the sum of the Si’s and, likewise, the total funness TF of the group is the sum of the Fi’s. Bessie wants to maximize the sum of TS and TF, but she also wants both of these values to be non-negative (since she must also show that the cows are well-rounded; a negative TS or TF would ruin this). Help Bessie maximize the sum of TS and TF without letting either of these values become negative.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 2739.Sum of Consecutive Prime Numbers]]></title>
      <url>%2Fpost%2FPOJ%2F2739.html</url>
      <content type="text"><![CDATA[题解|质数|打表|模拟|POJ|题目 Description Some positive integers can be represented by a sum of one or more consecutive prime numbers. How many such representations does a given positive integer have For example, the integer 53 has two representations 5 + 7 + 11 + 13 + 17 and 53. The integer 41 has three representations 2+3+5+7+11+13, 11+13+17, and 41. The integer 3 has only one representation, which is 3. The integer 20 has no such representations. Note that summands must be consecutive primenumbers, so neither 7 + 13 nor 3 + 5 + 5 + 7 is a valid representation for the integer 20.Your mission is to write a program that reports the number of representations for the given positive integer.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HYSBZ 1303.中位数图]]></title>
      <url>%2Fpost%2FHYSBZ%2F1303.html</url>
      <content type="text"><![CDATA[题解|HYSBZ|映射(map)|题目 Description 给出1~n的一个排列，统计该排列有多少个长度为奇数的连续子序列的中位数是b。中位数是指把所有元素从小到大排列后，位于中间的数。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HYSBZ 1002.轮状病毒]]></title>
      <url>%2Fpost%2FHYSBZ%2F1002.html</url>
      <content type="text"><![CDATA[题解|数学|高精度算法|HYSBZ|题目 Description 轮状病毒有很多变种，所有轮状病毒的变种都是从一个轮状基产生的。一个N轮状基由圆环上N个不同的基原子和圆心处一个核原子构成的，2个原子之间的边表示这2个原子之间的信息通道。如下图所示 N轮状病毒的产生规律是在一个N轮状基中删去若干条边，使得各原子之间有唯一的信息通道，例如共有16个不同的3轮状病毒，如下图所示 现给定n(N&lt;=100)，编程计算有多少个不同的n轮状病毒]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-08-28 ~ 2016-08-30 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_08_28-2016_08_30.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： Uva 11210.Chinese Mahjong Uva 11384.Help is needed for Dexter Codeforces 711A.Bus to Udayland Codeforces 711B.Chris and Magic Square Codeforces 711C.Coloring Trees]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[ACM 2016级新生赛题解]]></title>
      <url>%2Fpost%2FProject%2FACM2016_08_31.html</url>
      <content type="text"><![CDATA[专题|本次比赛共 9 题主要目的是为了明确大家的实力,可以找到大家的短板,同时熟悉各种题型主要对象是自学过C\C++的同学,开学后会有正式的比赛选拔 题解比较详细,前几题应该零基础的同学也能看懂 序号 题目名称 OJ编号 考察点 A A+B Problem POJ 1000 基本的输入输出 B 素数判定 HDU 2012 素数判定、循环、函数 C As Easy As A+B HDU 1040 给定组数的输入、排序算法 D Launch of Collider Codeforces 699A 思维 E King Moves Codeforces 710A 判断、循环 F 最小公倍数 HDU 1108 EOF结束的输入、欧几里得算法 G Catch That Cow HDU 2717 BFS H 命运 HDU 2571 动态规划 I 狼抓兔子 BZOJ 1001 网络流]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 711C.Coloring Trees]]></title>
      <url>%2Fpost%2FCodeforces%2F711C.html</url>
      <content type="text"><![CDATA[题解|动态规划|Codeforces|题目 ZS the Coder and Chris the Baboon has arrived at Udayland! They walked in the park where n trees grow. They decided to be naughty and color the trees in the park. The trees are numbered with integers from 1 to n from left to right. Initially, tree i has color ci. ZS the Coder and Chris the Baboon recognizes only m different colors, so 0 ≤ ci ≤ m, where ci = 0 means that tree i is uncolored. ZS the Coder and Chris the Baboon decides to color only the uncolored trees, i.e. the trees with ci = 0. They can color each of them them in any of the m colors from 1 to m. Coloring the i-th tree with color j requires exactly pi, j litres of paint. The two friends define the beauty of a coloring of the trees as the minimum number of contiguous groups (each group contains some subsegment of trees) you can split all the n trees into so that each group contains trees of the same color. For example, if the colors of the trees from left to right are 2, 1, 1, 1, 3, 2, 2, 3, 1, 3, the beauty of the coloring is 7, since we can partition the trees into 7 contiguous groups of the same color : {2}, {1, 1, 1}, {3}, {2, 2}, {3}, {1}, {3}. ZS the Coder and Chris the Baboon wants to color all uncolored trees so that the beauty of the coloring is exactly k. They need your help to determine the minimum amount of paint (in litres) needed to finish the job. Please note that the friends can’t color the trees that are already colored.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 711B.Chris and Magic Square]]></title>
      <url>%2Fpost%2FCodeforces%2F711B.html</url>
      <content type="text"><![CDATA[题解|模拟|Codeforces|题目 ZS the Coder and Chris the Baboon arrived at the entrance of Udayland. There is a n × n magic grid on the entrance which is filled with integers. Chris noticed that exactly one of the cells in the grid is empty, and to enter Udayland, they need to fill a positive integer into the empty cell. Chris tried filling in random numbers but it didn’t work. ZS the Coder realizes that they need to fill in a positive integer such that the numbers in the grid form a magic square. This means that he has to fill in a positive integer so that the sum of the numbers in each row of the grid (), each column of the grid (), and the two long diagonals of the grid (the main diagonal — and the secondary diagonal — ) are equal. Chris doesn’t know what number to fill in. Can you help Chris find the correct positive integer to fill in or determine that it is impossible]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 711A.Bus to Udayland]]></title>
      <url>%2Fpost%2FCodeforces%2F711A.html</url>
      <content type="text"><![CDATA[题解|模拟|Codeforces|题目 ZS the Coder and Chris the Baboon are travelling to Udayland! To get there, they have to get on the special IOI bus. The IOI bus has n rows of seats. There are 4 seats in each row, and the seats are separated into pairs by a walkway. When ZS and Chris came, some places in the bus was already occupied. ZS and Chris are good friends. They insist to get a pair of neighbouring empty seats. Two seats are considered neighbouring if they are in the same row and in the same pair. Given the configuration of the bus, can you help ZS and Chris determine where they should sit]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[麦克风清灰]]></title>
      <url>%2Fpost%2FWriting%2FMicrophone_cleaning.html</url>
      <content type="text"><![CDATA[随笔|Android|三星(SAMSUNG)|C5|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 11384.Help is needed for Dexter]]></title>
      <url>%2Fpost%2FUva%2F11384.html</url>
      <content type="text"><![CDATA[题解|二分|Uva|算法竞赛入门经典|题目 Dexter is tired of Dee Dee. So he decided to keep Dee Dee busy in a game.The game he planned for her is quite easy to play but not easy to win at least not for Dee Dee.But Dexter does not have time to spend on this silly task, so he wants your help. There will be a button, when it will be pushed a random number N will be chosen by computer. Then on screen there will be numbers from 1 to N.Dee Dee can choose any number of numbers from the numbers on the screen, and then she will command computer to subtract a positive number chosen by her (not necessarily on screen) from the selected numbers.Her objective will be to make all the numbers 0. For example if N = 3, then on screen there will be 3 numbers on screen: 1, 2, 3.Say she now selects 1 and 2.Commands to subtract 1, then the numbers on the screen will be: 0, 1, 3.Then she selects 1 and 3 and commands to subtract 1.Now the numbers are 0, 0, 2.Now she subtracts 2 from 2 and all the numbers become 0. Dexter is not so dumb to understand that this can be done very easily, so to make a twist he will give a limit L for each N and surely L will be as minimum as possible so that it is still possible to win within L moves.But Dexter does not have time to think how to determine L for each N, so he asks you to write a code which will take N as]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 11210.Chinese Mahjong]]></title>
      <url>%2Fpost%2FUva%2F11210.html</url>
      <content type="text"><![CDATA[题解|模拟|暴力|Uva|算法竞赛入门经典|题目 Mahjong ( ) is a game of Chinese origin usually played by four persons with tiles resembling dominoesand bearing various designs, which are drawn and discarded until one player wins with a hand of fourcombinations of three tiles each and a pair of matching tiles.A set of Mahjong tiles will usually differ from place to place. It usually has at least 136 tiles, mostcommonly 144, although sets originating from America or Japan will have more. The 136-tile Mahjongincludes:Dots: named as each tile consists of a number of circles. Each circle is said to represent copper(tong) coins with a square hole in the middle. In this problem, they’re represented by 1T, 2T, 3T, 4T,5T, 6T, 7T, 8T and 9T.Bams: named as each tile (except the 1 Bamboo) consists of a number of bamboo sticks. Eachstick is said to represent a string (suo) that holds a hundred coins. In this problem, they’re representedby 1S, 2S, 3S, 4S, 5S, 6S, 7S, 8S and 9S.Craks: named as each tile represents ten thousand (wan) coins, or one hundred strings of onehundred coins. In this problem, they’re represented by 1W, 2W, 3W, 4W, 5W, 6W, 7W, 8W and 9W.Wind tiles: East, South, West, and North. In this problem, they’re represented by DONG, NAN,XI, BEI.Dragon tiles: red, green, and white. The term dragon tile is a western convention introduced byJoseph Park Babcock in his 1920 book introducing Mahjong to America. Originally, these tiles aresaid to have something to do with the Chinese Imperial Examination. The red tile means you pass theexamination and thus will be appointed a government official. The green tile means, consequently youwill become financially well off. The white tile (a clean board) means since you are now doing well youshould act like a good, incorrupt official. In this problem, they’re represented by ZHONG, FA, BAI.There are 9 3 + 4 + 3 = 34 kinds, with exactly 4 tiles of each kind, so there are 136 tiles in total.To who may be interested, the 144-tile Mahjong also includes:Flower tiles: typically optional components to a set of mahjong tiles, often contain artwork ontheir tiles. There are exactly one tile of each kind, so 136+8=144 tiles in total. In this problem, wedon t consider these tiles.Chinese Mahjong is very complicated. However, we only need to know very few of the rules in orderto solve this problem. A meld is a certain set of tiles in one’s hand. There are three kinds of meldsyou need to know (to who knows Mahjong already, kong is not considered):Pong: A set of three identical titles. Example: , .Chow: A set of three suited tiles in sequence. All three tiles must be of the same suites. Sequencesof higher length are not permissible (unless it forms more than one meld). Obviously, wind tiles anddragon tiles can never be involved in chows. Example: , .Eye: The pair, while not a meld, is the final component to the standard hand. It consists of anytwo identical tiles.A player wins the round by creating a standard mahjong hand. That means, the hand consists ofan eye and several (possible zero) pongs and chows. Note that each title can be involved in exactly oneeye/pong/chow.When a hand is one tile short of wining, the hand is said to be a ready hand, or more figuratively,’on the pot’. The player holding a ready hand is said to be waiting for certain tiles. For exampleis waiting for , and .To who knows more about Mahjong: don’t consider special winning hands such as ‘ ’.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-08-25 ~ 2016-08-27 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_08_25-2016_08_27.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： Uva 1030.Image Is Everything Uva 11464.Even Parity Uva 1352.Colored Cubes HDU 5078.Osu(2014 鞍山赛区现场赛 I) HDU 5074.Hatsune Miku(2014 鞍山赛区现场赛 E) HDU 5073.Galaxy(2014 鞍山赛区现场赛 D)]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5073.Galaxy(2014 鞍山赛区现场赛 D)]]></title>
      <url>%2Fpost%2FHDU%2F5073.html</url>
      <content type="text"><![CDATA[题解|HDU|数学|题目 Description Good news for us: to release the financial pressure, the government started selling galaxies and we can buy them from now on! The first one who bought a galaxy was Tianming Yun and he gave it to Xin Cheng as a present. To be fashionable, DRD also bought himself a galaxy. He named it Rho Galaxy. There are n stars in Rho Galaxy, and they have the same weight, namely one unit weight, and a negligible volume. They initially lie in a line rotating around their center of mass. Everything runs well except one thing. DRD thinks that the galaxy rotates too slow. As we know, to increase the angular speed with the same angular momentum, we have to decrease the moment of inertia. The moment of inertia I of a set of n stars can be calculated with the formula where w i is the weight of star i, d i is the distance form star i to the mass of center. As DRD’s friend, ATM, who bought M78 Galaxy, wants to help him. ATM creates some black holes and white holes so that he can transport stars in a negligible time. After transportation, the n stars will also rotate around their new center of mass. Due to financial pressure, ATM can only transport at most k stars. Since volumes of the stars are negligible, two or more stars can be transported to the same position. Now, you are supposed to calculate the minimum moment of inertia after transportation.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5074.Hatsune Miku(2014 鞍山赛区现场赛 E)]]></title>
      <url>%2Fpost%2FHDU%2F5074.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description Hatsune Miku is a popular virtual singer. It is very popular in both Japan and China. Basically it is a computer software that allows you to compose a song on your own using the vocal package. Today you want to compose a song, which is just a sequence of notes. There are only m different notes provided in the package. And you want to make a song with n notes. Also, you know that there is a system to evaluate the beautifulness of a song. For each two consecutive notes a and b, if b comes after a, then the beautifulness for these two notes is evaluated as score(a, b). So the total beautifulness for a song consisting of notes a 1, a 2, . . . , a n, is simply the sum of score(a i, a i+1) for 1 ≤ i ≤ n - 1. Now, you find that at some positions, the notes have to be some specific ones, but at other positions you can decide what notes to use. You want to maximize your song’s beautifulness. What is the maximum beautifulness you can achieve]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5078.Osu(2014 鞍山赛区现场赛 I)]]></title>
      <url>%2Fpost%2FHDU%2F5078.html</url>
      <content type="text"><![CDATA[题解|HDU|模拟|题目 Description Osu! is a very popular music game. Basically, it is a game about clicking. Some points will appear on the screen at some time, and you have to click them at a correct time. Now, you want to write an algorithm to estimate how diffecult a game is. To simplify the things, in a game consisting of N points, point i will occur at time t i at place (x i, y i), and you should click it exactly at t i at (x i, y i). That means you should move your cursor from point i to point i+1. This movement is called a jump, and the difficulty of a jump is just the distance between point i and point i+1 divided by the time between t i and t i+1. And the difficulty of a game is simply the difficulty of the most difficult jump in the game. Now, given a description of a game, please calculate its difficulty.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 1352.Colored Cubes]]></title>
      <url>%2Fpost%2FUva%2F1352.html</url>
      <content type="text"><![CDATA[题解|模拟|映射(map)|Uva|算法竞赛入门经典|题目图比较多,看原题吧 There are several colored cubes.All of them are of the same size but they may be colored differently. Each face of these cubes has a single color.Colors of distinct faces of a cube may or may not be the same. Two cubes are said to be identically colored if some suitable rotations of one of the cubes give identical looks to both of the cubes.For example, two cubes shown in Figure 2 are identically colored. A set of cubes is said to be identically colored if every pair of them are identically colored. A cube and its mirror image are not necessarily identically colored.For example, two cubes shown in Figure 3 are not identically colored. You can make a given set of cubes identically colored by repainting some of the faces, whatever colors the faces may have.In Figure 4, repainting four faces makes the three cubes identically colored and repainting fewer faces will never do. Your task is to write a program to calculate the minimum number of faces that needs to be repainted for a given set of cubes to become identically colored.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 11464.Even Parity]]></title>
      <url>%2Fpost%2FUva%2F11464.html</url>
      <content type="text"><![CDATA[题解|模拟|位运算|Uva|算法竞赛入门经典|题目 We have a grid of size N × N.Each cell of the grid initially contains a zero(0) or a one(1).The parity of a cell is the number of 1s surrounding that cell.A cell is surrounded by at most 4 cells (top, bottom, left, right). Suppose we have a grid of size 4 × 4:For this problem, you have to change some of the 0s to 1s so that the parity of every cell becomes even.We are interested in the minimum number of transformations of 0 to 1 that is needed to achieve the desired requirement.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-08-22 ~ 2016-08-24 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_08_22-2016_08_24.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： Uva 1388.Graveyard Uva 10881.Piotr’s Ants]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 1030.Image Is Everything]]></title>
      <url>%2Fpost%2FUva%2F1030.html</url>
      <content type="text"><![CDATA[题解|模拟|Uva|算法竞赛入门经典|题目 Your new company is building a robot that can hold small lightweight objects.The robot will have the intelligence to determine if an object is light enough to hold.It does this by taking pictures of the object from the 6 cardinal directions, and then inferring an upper limit on the object’s weight based on those images.You must write a program to do that for the robot.You can assume that each object is formed from an N × N × N lattice of cubes, some of which may be missing.Each 1 × 1 × 1 cube weighs 1 gram, and each cube is painted a single solid color.The object is not necessarily connected.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 10881.Piotr's Ants]]></title>
      <url>%2Fpost%2FUva%2F10881.html</url>
      <content type="text"><![CDATA[题解|模拟|Uva|算法竞赛入门经典|题目 Piotr likes playing with ants.He has n of them on a horizontal pole L cm long. Each ant is facing either left or right and walks at a constant speed of 1 cm/s.When two ants bump into each other, they both turn around (instantaneously) and start walking in opposite directions.Piotr knows where each of the ants starts and which direction it is facing and wants to calculate where the ants will end up T seconds from now.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 1388.Graveyard]]></title>
      <url>%2Fpost%2FUva%2F1388.html</url>
      <content type="text"><![CDATA[题解|数学|贪心算法|Uva|算法竞赛入门经典|题目 Programming contests became so popular in the year 2397 that the governor of New Earck — the largest human-inhabited planet of the galaxy — opened a special Alley of Contestant Memories (ACM) at the local graveyard.The ACM encircles a green park, and holds the holographic statues of famous contestants placed equidistantly along the park perimeter.The alley has to be renewed from time to time when a new group of memorials arrives.When new memorials are added, the exact place for each can be selected arbitrarily along the ACM, but the equidistant disposition must be maintained by moving some of the old statues along the alley.Surprisingly, humans are still quite superstitious in 24th century:the graveyard keepers believe the holograms are holding dead people souls, and thus always try to renew the ACM with minimal possible movements of existing statues (besides, the holographic equipment is very heavy). Statues aremoved along the park perimeter. Your work is to find a renewal plan which minimizes the sum of travel distances of all statues. Installation of a new hologram adds no distance penalty, so choose the places for newcomers wisely!]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-08-19 ~ 2016-08-21 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_08_19-2016_08_21.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： Uva 10125.SumsetsPOJ 2549.Sumsets Uva 11584.Partitioning by Palindromes POJ 2342.Anniversary party Uva 11292.Dragon of Loowater Codeforces 707A.Brain’s Photos Codeforces 707B.Bakery Codeforces 707C.Pythagorean Triples Uva 11729.Commando War Uva 11300.Spreading the Wealth]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 11300.Spreading the Wealth]]></title>
      <url>%2Fpost%2FUva%2F11300.html</url>
      <content type="text"><![CDATA[题解|数学|Uva|算法竞赛入门经典|题目 Description A Communist regime is trying to redistribute wealth in a village.They have have decided to sit everyone around a circular table.First, everyone has converted all of their properties to coins of equal value, such that the total number of coins is divisible by the number of people in the village.Finally, each person gives a number of coins to the person on his right and a number coins to the person on his left, such that in the end, everyone has the same number of coins.Given the number of coins of each person, compute the minimum number of coins that must be transferred using this method so that everyone has the same number of coins.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 11729.Commando War]]></title>
      <url>%2Fpost%2FUva%2F11729.html</url>
      <content type="text"><![CDATA[题解|贪心算法|Uva|算法竞赛入门经典|题目 Description There is a war and it doesn’t look very promising for your country. Now it’s time to act.You have a commando squad at your disposal and planning an ambush on an important enemy camp located nearby.You have N soldiers in your squad.In your master-plan, every single soldier has a unique responsibility and you don’t want any of your soldier to know the plan for other soldiers so that everyone can focus on his task only.In order to enforce this, you brief every individual soldier about his tasks separately and just before sending him to the battlefield.You know that every single soldier needs a certain amount of time to execute his job.You also know very clearly how much time you need to brief every single soldier.Being anxious to finish the total operation as soon as possible, you need to find an order of briefing your soldiers that will minimize the time necessary for all the soldiers to complete their tasks.You may assume that, no soldier has a plan that depends on the tasks of his fellows.In other words, once a soldier begins a task, he can finish it without the necessity of pausing in between.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 707C.Pythagorean Triples]]></title>
      <url>%2Fpost%2FCodeforces%2F707C.html</url>
      <content type="text"><![CDATA[题解|数学|Codeforces|题目 Description Katya studies in a fifth grade. Recently her class studied right triangles and the Pythagorean theorem. It appeared, that there are triples of positive integers such that you can construct a right triangle with segments of lengths corresponding to triple. Such triples are called Pythagorean triples. For example, triples (3, 4, 5), (5, 12, 13) and (6, 8, 10) are Pythagorean triples. Here Katya wondered if she can specify the length of some side of right triangle and find any Pythagorean triple corresponding to such length Note that the side which length is specified can be a cathetus as well as hypotenuse. Katya had no problems with completing this task. Will you do the same]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 707B.Bakery]]></title>
      <url>%2Fpost%2FCodeforces%2F707B.html</url>
      <content type="text"><![CDATA[题解|模拟|Codeforces|题目 Description Masha wants to open her own bakery and bake muffins in one of the n cities numbered from 1 to n. There are m bidirectional roads, each of whose connects some pair of cities. To bake muffins in her bakery, Masha needs to establish flour supply from some storage. There are only k storages, located in different cities numbered a1, a2, …, ak. Unforunately the law of the country Masha lives in prohibits opening bakery in any of the cities which has storage located in it. She can open it only in one of another n - k cities, and, of course, flour delivery should be paid — for every kilometer of path between storage and bakery Masha should pay 1 ruble. Formally, Masha will pay x roubles, if she will open the bakery in some city b (ai ≠ b for every 1 ≤ i ≤ k) and choose a storage in some city s (s = aj for some 1 ≤ j ≤ k) and b and s are connected by some path of roads of summary length x (if there are more than one path, Masha is able to choose which of them should be used). Masha is very thrifty and rational. She is interested in a city, where she can open her bakery (and choose one of k storages and one of the paths between city with bakery and city with storage) and pay minimum possible amount of rubles for flour delivery. Please help Masha find this amount.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 707A.Brain's Photos]]></title>
      <url>%2Fpost%2FCodeforces%2F707A.html</url>
      <content type="text"><![CDATA[题解|模拟|Codeforces|题目 Description Small, but very brave, mouse Brain was not accepted to summer school of young villains. He was upset and decided to postpone his plans of taking over the world, but to become a photographer instead. As you may know, the coolest photos are on the film (because you can specify the hashtag #film for such). Brain took a lot of colourful pictures on colored and black-and-white film. Then he developed and translated it into a digital form. But now, color and black-and-white photos are in one folder, and to sort them, one needs to spend more than one hour! As soon as Brain is a photographer not programmer now, he asks you to help him determine for a single photo whether it is colored or black-and-white. Photo can be represented as a matrix sized n × m, and each element of the matrix stores a symbol indicating corresponding pixel color. There are only 6 colors: ‘C’ (cyan)‘M’ (magenta)‘Y’ (yellow)‘W’ (white)‘G’ (grey)‘B’ (black)The photo is considered black-and-white if it has only white, black and grey pixels in it. If there are any of cyan, magenta or yellow pixels in the photo then it is considered colored.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 11292.Dragon of Loowater]]></title>
      <url>%2Fpost%2FUva%2F11292.html</url>
      <content type="text"><![CDATA[题解|二分|贪心算法|Uva|算法竞赛入门经典|题目 Description Once upon a time, in the Kingdom of Loowater, a minor nuisance turned into a major problem.The shores of Rellau Creek in central Loowater had always been a prime breeding ground for geese.Due to the lack of predators, the geese population was out of control.The people of Loowater mostly kept clear of the geese.Occasionally, a goose would attack one of the people, and perhaps bite off a finger or two, but in general, the people tolerated the geese as a minor nuisance.One day, a freak mutation occurred, and one of the geese spawned a multi-headed fire-breathing dragon. When the dragon grew up, he threatened to burn the Kingdom of Loowater to a crisp.Loowater had a major problem. The king was alarmed, and called on his knights to slay the dragon and save the kingdom.The knights explained: “To slay the dragon, we must chop off all its heads.Each knight can chop off one of the dragon’s heads. The heads of the dragon are of different sizes. In order to chop off a head, a knight must be at least as tall as the diameter of the head.The knights’ union demands that for chopping off a head, a knight must be paid a wage equal to one gold coin for each centimetre of the knight’s height.”Would there be enough knights to defeat the dragon The king called on his advisors to help him decide how many and which knights to hire. After having lost a lot of money building Mir Park, theking wanted to minimize the expense of slaying the dragon. As one of the advisors, your job was to help the king. You took it very seriously: if you failed, you and the whole kingdom would be burnt to a crisp!]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 2342.Anniversary party]]></title>
      <url>%2Fpost%2FPOJ%2F2342.html</url>
      <content type="text"><![CDATA[题解|动态规划|DFS|树形dp|POJ|题目 Description There is going to be a party to celebrate the 80-th Anniversary of the Ural State University. The University has a hierarchical structure of employees. It means that the supervisor relation forms a tree rooted at the rector V. E. Tretyakov. In order to make the party funny for every one, the rector does not want both an employee and his or her immediate supervisor to be present. The personnel office has evaluated conviviality of each employee, so everyone has some number (rating) attached to him or her. Your task is to make a list of guests with the maximal possible sum of guests’ conviviality ratings.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 11584.Partitioning by Palindromes]]></title>
      <url>%2Fpost%2FUva%2F11584.html</url>
      <content type="text"><![CDATA[题解|动态规划|字符串(string)|Uva|题目 Description We say a sequence of characters is a palindrome if it is the same written forwards and backwards.For example, ‘racecar’ is a palindrome, but ‘fastcar’ is not.A partition of a sequence of characters is a list of one or more disjoint non-empty groups of consecutive characters whose concatenation yields the initial sequence.For example, (‘race’, ‘car’) is a partition of ‘racecar’ into two groups.Given a sequence of characters,we can always create a partition of these characters such that each group in the partition is a palindrome! Given this observation it is natural to ask:what is the minimum number of groups needed for a given string such that every group is a palindromeFor example: ‘racecar’ is already a palindrome, therefore it can be partitioned into one group. ‘fastcar’ does not contain any non-trivial palindromes, so it must be partitioned as (‘f’, ‘a’, ‘s’, ‘t’, ‘c’, ‘a’, ‘r’). ‘aaadbccb’ can be partitioned as (‘aaa’, ‘d’, ‘bccb’).]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 10125.Sumsets]]></title>
      <url>%2Fpost%2FUva%2F10125.html</url>
      <content type="text"><![CDATA[题解|Uva|题目 Describe Given S, a set of integers, find the largest d such that a + b + c = dwhere a, b, c, and d are distinct elements of S.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 2549.Sumsets]]></title>
      <url>%2Fpost%2FPOJ%2F2549.html</url>
      <content type="text"><![CDATA[题解|POJ|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-08-16 ~ 2016-08-18 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_08_16-2016_08_18.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： POJ 1258.Agri-Net POJ 1659.Frogs’ Neighborhood HDU 1165.Eddy’s research II HDU 5366.The mook jong POJ 3273.Monthly Expense Uva 11137.Ingenuous Cubrency POJ 3061.Subsequence POJ 3517.And Then There Was One]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 3517.And Then There Was One]]></title>
      <url>%2Fpost%2FPOJ%2F3517.html</url>
      <content type="text"><![CDATA[题解|POJ|约瑟夫环问题|题目 Description Let’s play a stone removing game. Initially, n stones are arranged on a circle and numbered 1, …, n clockwise (Figure 1). You are also given two numbers k and m. From this state, remove stones one by one following the rules explained below, until only one remains. In step 1, remove stone m. In step 2, locate the k-th next stone clockwise from m and remove it. In subsequent steps, start from the slot of the stone removed in the last step, make k hops clockwise on the remaining stones and remove the one you reach. In other words, skip (k 1) remaining stones clockwise and remove the next one. Repeat this until only one stone is left and answer its number. For example, the answer for the case n = 8, k = 5, m = 3 is 1, as shown in Figure 1. Initial stateStep 1Step 2Step 3Step 4 Step 5Step 6Step 7Final stateFigure 1: An example gameInitial state: Eight stones are arranged on a circle. Step 1: Stone 3 is removed since m = 3. Step 2: You start from the slot that was occupied by stone 3. You skip four stones 4, 5, 6 and 7 (since k = 5), and remove the next one, which is 8. Step 3: You skip stones 1, 2, 4 and 5, and thus remove 6. Note that you only count stones that are still on the circle and ignore those already removed. Stone 3 is ignored in this case. Steps 4–7: You continue until only one stone is left. Notice that in later steps when only a few stones remain, the same stone may be skipped multiple times. For example, stones 1 and 4 are skipped twice in step 7. Final State: Finally, only one stone, 1, is on the circle. This is the final state, so the answer is 1.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 3061.Subsequence]]></title>
      <url>%2Fpost%2FPOJ%2F3061.html</url>
      <content type="text"><![CDATA[题解|二分|POJ|题目 A sequence of N positive integers (10 &lt; N &lt; 100 000), each of them less than or equal 10000, anda positive integer S (S &lt; 100 000 000) are given. Write a program to find the minimal length of thesubsequence of consecutive elements of the sequence, the sum of which is greater than or equal to S.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 11137.Ingenuous Cubrency]]></title>
      <url>%2Fpost%2FUva%2F11137.html</url>
      <content type="text"><![CDATA[题解|动态规划|背包问题|Uva|题目 Description People in Cubeland use cubic coins. Not only the unit of currency iscalled a cube but also the coins are shaped like cubes and their valuesare cubes. Coins with values of all cubic numbers up to 9261(= 213),i.e., coins with the denominations of 1, 8, 27, . . ., up to 9261 cubes,are available in Cubeland.Your task is to count the number of ways to pay a given amountusing cubic coins of Cubeland. For example, there are 3 ways to pay21 cubes: twenty one 1 cube coins, or one 8 cube coin and thirteen 1cube coins, or two 8 cube coin and five 1 cube coins.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 3273.Monthly Expense]]></title>
      <url>%2Fpost%2FPOJ%2F3273.html</url>
      <content type="text"><![CDATA[题解|二分|POJ|题目 Description Farmer John is an astounding accounting wizard and has realized he might run out of money to run the farm. He has already calculated and recorded the exact amount of money (1 ≤ moneyi ≤ 10,000) that he will need to spend each day over the next N (1 ≤ N ≤ 100,000) days. FJ wants to create a budget for a sequential set of exactly M (1 ≤ M ≤ N) fiscal periods called “fajomonths”. Each of these fajomonths contains a set of 1 or more consecutive days. Every day is contained in exactly one fajomonth. FJ’s goal is to arrange the fajomonths so as to minimize the expenses of the fajomonth with the highest spending and thus determine his monthly spending limit.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5366.The mook jong]]></title>
      <url>%2Fpost%2FHDU%2F5366.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|打表|题目 Description ZJiaQ want to become a strong man, so he decided to play the mook jong。ZJiaQ want to put some mook jongs in his backyard. His backyard consist of n bricks that is 11,so it is 1n。ZJiaQ want to put a mook jong in a brick. because of the hands of the mook jong， the distance of two mook jongs should be equal or more than 2 bricks. Now ZJiaQ want to know how many ways can ZJiaQ put mook jongs legally(at least one mook jong).]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1165.Eddy's research II]]></title>
      <url>%2Fpost%2FHDU%2F1165.html</url>
      <content type="text"><![CDATA[题解|HDU|数学|DFS|记忆化搜索|题目 Description As is known, Ackermann function plays an important role in the sphere of theoretical computer science. However, in the other hand, the dramatic fast increasing pace of the function caused the value of Ackermann function hard to calcuate. Ackermann function can be defined recursively as follows: Now Eddy Gives you two numbers: m and n, your task is to compute the value of A(m,n) .This is so easy problem,If you slove this problem,you will receive a prize(Eddy will invite you to hdu restaurant to have supper).]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1659.Frogs' Neighborhood]]></title>
      <url>%2Fpost%2FPOJ%2F1659.html</url>
      <content type="text"><![CDATA[题解|队列(queue)|POJ|Havel-Hakimi定理|题目 Description 未名湖附近共有N个大小湖泊L1, L2, …, Ln(其中包括未名湖),每个湖泊Li里住着一只青蛙Fi(1 ≤ i ≤ N)如果湖泊Li和Lj之间有水路相连,则青蛙Fi和Fj互称为邻居现在已知每只青蛙的邻居数目x1, x2, …, xn,请你给出每两个湖泊之间的相连关系]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1258.Agri-Net]]></title>
      <url>%2Fpost%2FPOJ%2F1258.html</url>
      <content type="text"><![CDATA[题解|最小生成树|POJ|题目 Description Farmer John has been elected mayor of his town! One of his campaign promises was to bring internet connectivity to all farms in the area. He needs your help, of course.Farmer John ordered a high speed connection for his farm and is going to share his connectivity with the other farmers. To minimize cost, he wants to lay the minimum amount of optical fiber to connect his farm to all the other farms.Given a list of how much fiber it takes to connect each pair of farms, you must find the minimum amount of fiber needed to connect them all together. Each farm must connect to some other farm such that a packet can flow from any one farm to any other farm.The distance between any two farms will not exceed 100,000.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-08-13 ~ 2016-08-15 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_08_13-2016_08_15.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： Codeforces 371A.K-Periodic Array Codeforces 371B.Fox Dividing Cheese Codeforces 371C.Hamburgers HDU 5832.A water problem HDU 5835.Danganronpa HDU 5842.Lweb and String Codeforces 705A.Hulk]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 705A.Hulk]]></title>
      <url>%2Fpost%2FCodeforces%2F705A.html</url>
      <content type="text"><![CDATA[题解|模拟|Codeforces|题目 Description Dr. Bruce Banner hates his enemies (like others don’t). As we all know, he can barely talk when he turns into the incredible Hulk. That’s why he asked you to help him to express his feelings. Hulk likes the Inception so much, and like that his feelings are complicated. They have n layers. The first layer is hate, second one is love, third one is hate and so on… For example if n = 1, then his feeling is “I hate it” or if n = 2 it’s “I hate that I love it”, and if n = 3 it’s “I hate that I love that I hate it” and so on. Please help Dr. Banner.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5842.Lweb and String]]></title>
      <url>%2Fpost%2FHDU%2F5842.html</url>
      <content type="text"><![CDATA[题解|HDU|CCPC|题目 Description Lweb has a string S. Oneday, he decided to transform this string to a new sequence. You need help him determine this transformation to get a sequence which has the longest LIS(Strictly Increasing). You need transform every letter in this string to a new number. A is the set of letters of S, B is the set of natural numbers. Every injection f:A→B can be treat as an legal transformation. For example, a String “aabc”, A={a,b,c}, and you can transform it to “1 1 2 3”, and the LIS of the new sequence is 3. Now help Lweb, find the longest LIS which you can obtain from S. LIS: Longest Increasing Subsequence. (https://en.wikipedia.org/wiki/Longest_increasing_subsequence)]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5835.Danganronpa]]></title>
      <url>%2Fpost%2FHDU%2F5835.html</url>
      <content type="text"><![CDATA[题解|HDU|数学|贪心算法|CCPC|题目 Description Chisa Yukizome works as a teacher in the school. She prepares many gifts, which consist of n kinds with a[i] quantities of each kind, for her students and wants to hold a class meeting. Because of the busy work, she gives her gifts to the monitor, Chiaki Nanami. Due to the strange design of the school, the students’ desks are in a row. Chiaki Nanami wants to arrange gifts like this: Each table will be prepared for a mysterious gift and an ordinary gift. In order to reflect the Chisa Yukizome’s generosity, the kinds of the ordinary gift on the adjacent table must be different. There are no limits for the mysterious gift. The gift must be placed continuously. She wants to know how many students can get gifts in accordance with her idea at most (Suppose the number of students are infinite). As the most important people of her, you are easy to solve it, aren’t you]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5832.A water problem]]></title>
      <url>%2Fpost%2FHDU%2F5832.html</url>
      <content type="text"><![CDATA[题解|HDU|高精度算法|CCPC|题目 Description Two planets named Haha and Xixi in the universe and they were created with the universe beginning. There is 73 days in Xixi a year and 137 days in Haha a year. Now you know the days N after Big Bang, you need to answer whether it is the first day in a year about the two planets.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 371C.Hamburgers]]></title>
      <url>%2Fpost%2FCodeforces%2F371C.html</url>
      <content type="text"><![CDATA[题解|二分|Codeforces|题目 Description Polycarpus loves hamburgers very much. He especially adores the hamburgers he makes with his own hands. Polycarpus thinks that there are only three decent ingredients to make hamburgers from: a bread, sausage and cheese. He writes down the recipe of his favorite “Le Hamburger de Polycarpus” as a string of letters ‘B’ (bread), ‘S’ (sausage) и ‘C’ (cheese). The ingredients in the recipe go from bottom to top, for example, recipe “ВSCBS” represents the hamburger where the ingredients go from bottom to top as bread, sausage, cheese, bread and sausage again. Polycarpus has nb pieces of bread, ns pieces of sausage and nc pieces of cheese in the kitchen. Besides, the shop nearby has all three ingredients, the prices are pb rubles for a piece of bread, ps for a piece of sausage and pc for a piece of cheese. Polycarpus has r rubles and he is ready to shop on them. What maximum number of hamburgers can he cook You can assume that Polycarpus cannot break or slice any of the pieces of bread, sausage or cheese. Besides, the shop has an unlimited number of pieces of each ingredient.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 371B.Fox Dividing Cheese]]></title>
      <url>%2Fpost%2FCodeforces%2F371B.html</url>
      <content type="text"><![CDATA[题解|欧几里得算法|Codeforces|题目 Description Two little greedy bears have found two pieces of cheese in the forest of weight a and b grams, correspondingly. The bears are so greedy that they are ready to fight for the larger piece. That’s where the fox comes in and starts the dialog: “Little bears, wait a little, I want to make your pieces equal” “Come off it fox, how are you going to do that “, the curious bears asked. “It’s easy”, said the fox. “If the mass of a certain piece is divisible by two, then I can eat exactly a half of the piece. If the mass of a certain piece is divisible by three, then I can eat exactly two-thirds, and if the mass is divisible by five, then I can eat four-fifths. I’ll eat a little here and there and make the pieces equal”. The little bears realize that the fox’s proposal contains a catch. But at the same time they realize that they can not make the two pieces equal themselves. So they agreed to her proposal, but on one condition: the fox should make the pieces equal as quickly as possible. Find the minimum number of operations the fox needs to make pieces equal.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 371A.K-Periodic Array]]></title>
      <url>%2Fpost%2FCodeforces%2F371A.html</url>
      <content type="text"><![CDATA[题解|Codeforces|题目 Description This task will exclusively concentrate only on the arrays where all elements equal 1 and/or 2. Array a is k-period if its length is divisible by k and there is such array b of length k, that a is represented by array b written exactly times consecutively. In other words, array a is k-periodic, if it has period of length k. For example, any array is n-periodic, where n is the array length. Array [2, 1, 2, 1, 2, 1] is at the same time 2-periodic and 6-periodic and array [1, 2, 1, 1, 2, 1, 1, 2, 1] is at the same time 3-periodic and 9-periodic. For the given array a, consisting only of numbers one and two, find the minimum number of elements to change to make the array k-periodic. If the array already is k-periodic, then the required value equals 0.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 706C.Hard problem]]></title>
      <url>%2Fpost%2FCodeforces%2F706C.html</url>
      <content type="text"><![CDATA[题解|动态规划|Codeforces|字符串(string)|题目 Description Vasiliy is fond of solving different tasks. Today he found one he wasn’t able to solve himself, so he asks you to help. Vasiliy is given n strings consisting of lowercase English letters. He wants them to be sorted in lexicographical order (as in the dictionary), but he is not allowed to swap any of them. The only operation he is allowed to do is to reverse any of them (first character becomes last, second becomes one before last and so on). To reverse the i-th string Vasiliy has to spent ci units of energy. He is interested in the minimum amount of energy he has to spent in order to have strings sorted in lexicographical order. String A is lexicographically smaller than string B if it is shorter than B (|A| &lt; |B|) and is its prefix, or if none of them is a prefix of the other and at the first position where they differ character in A is smaller than the character in B. For the purpose of this problem, two equal strings nearby do not break the condition of sequence being sorted lexicographically.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 706B.Interesting drink]]></title>
      <url>%2Fpost%2FCodeforces%2F706B.html</url>
      <content type="text"><![CDATA[题解|二分|Codeforces|题目 Description Vasiliy likes to rest after a hard work, so you may often meet him in some bar nearby. As all programmers do, he loves the famous drink “Beecola”, which can be bought in n different shops in the city. It’s known that the price of one bottle in the shop i is equal to xi coins. Vasiliy plans to buy his favorite drink for q consecutive days. He knows, that on the i-th day he will be able to spent mi coins. Now, for each of the days he want to know in how many different shops he can buy a bottle of “Beecola”.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 706A.Beru-taxi]]></title>
      <url>%2Fpost%2FCodeforces%2F706A.html</url>
      <content type="text"><![CDATA[题解|数学|Codeforces|题目 Description Vasiliy lives at point (a, b) of the coordinate plane. He is hurrying up to work so he wants to get out of his house as soon as possible. New app suggested n available Beru-taxi nearby. The i-th taxi is located at point (xi, yi) and moves with a speed vi. Consider that each of n drivers will move directly to Vasiliy and with a maximum possible speed. Compute the minimum time when Vasiliy will get in any of Beru-taxi cars.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-08-10 ~ 2016-08-12 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_08_10-2016_08_12.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： AOJ 400.Subset Sums AOJ 363.取数字问题 Codeforces 706A.Beru-taxi Codeforces 706B.Interesting drink Codeforces 706C.Hard problem 算法 ST算法 线段树 RMQ问题]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[线段树]]></title>
      <url>%2Fpost%2FAlgorithm%2FSegment_tree.html</url>
      <content type="text"><![CDATA[算法|树|线段树|递归与分治|线段树是一种二叉搜索树，与区间树相似，它将一个区间划分成一些单元区间，每个单元区间对应线段树中的一个叶结点。使用线段树可以快速的查找某一个节点在若干条线段中出现的次数，时间复杂度为O(logN）。而未优化的空间复杂度为2N，因此有时需要离散化让空间压缩。 百度百科线段树]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[RMQ问题]]></title>
      <url>%2Fpost%2FAlgorithm%2FRMQ.html</url>
      <content type="text"><![CDATA[算法|二分|RMQ问题|ST算法|线段树|RMQ ( Range Minimum / Maximum Query )问题是指： 对于长度为 n 的数列 A ，回答若干询问 RMQ(A,i,j) ( i,j&lt;=n )，返回数列 A 中下标在 i , j 里的最小(大)值也就是说，RMQ 问题是指求区间最值的问题 百度百科RMQ 问题]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 351.求最值之差]]></title>
      <url>%2Fpost%2FAOJ%2F351.html</url>
      <content type="text"><![CDATA[题解|AOJ|RMQ问题|ST算法|线段树|题目 Description 给出N个数，求第a个数到第b个数之间最大的数减去最小的数的结果]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[ST算法]]></title>
      <url>%2Fpost%2FAlgorithm%2FST.html</url>
      <content type="text"><![CDATA[算法|二分|RMQ问题|ST算法|ST 算法是一种高效求解 &gt;RMQ 问题&lt; 的算法 其预处理时间复杂度为 O(nlogn) 查询时间复杂度为 O(1) 在进行大量数据的查询时,是一种非常好的算法 其思路是类似采用 二分 的思路对各个区间进行预处理在查询时(查询 (a,d) )通过查询 [a,c) 和 [b,d) (a&lt;=b&lt;=c&lt;=d) 来获取结果]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 363.取数字问题]]></title>
      <url>%2Fpost%2FAOJ%2F363.html</url>
      <content type="text"><![CDATA[题解|AOJ|DFS|题目 Description 定的M*N的矩阵，其中的每个元素都是-10到10之间的整数，你的任务是从左上角（1，1），走到右下角（M,N），每一步只能向下或者向右，你所经过的方格里面的数字都必须被选取，请找出一条最合适的路，使得在路上被选取的数字之和是尽可能小的正整数。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 400.Subset Sums]]></title>
      <url>%2Fpost%2FAOJ%2F400.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|背包问题|题目 Description For many sets of consecutive integers from 1 through N (1 &lt;= N &lt;= 39), one can partition the set into two sets whose sums are identical. For example, if N=3, one can partition the set {1, 2, 3} in one way so that the sums of both subsets are identical: {3} and {1,2}This counts as a single partitioning (i.e., reversing the order counts as the same partitioning and thus does not increase the count of partitions). If N=7, there are four ways to partition the set {1, 2, 3, … 7} so that each partition has the same sum: {1,6,7} and {2,3,4,5}{2,5,7} and {1,3,4,6}{3,4,7} and {1,2,5,6}{1,2,4,7} and {3,5,6}Given N, your program should print the number of ways a set containing the integers from 1 through N can be partitioned into two sets whose sums are identical. Print 0 if there are no such ways. Your program must calculate the answer, not look it up from a table.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-08-07 ~ 2016-08-09 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_08_07-2016_08_09.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： HDU 5112.A Curious Matt HDU 5119.Happy Matt Friends HDU 5120.Intersection HDU 5122.K.Bro Sorting HDU 1502.Regular Words HDU 1025.Constructing Roads In JGShining’s Kingdom HDU 3008.Warcraft HDU 1074.Doing Homework HDU 1224.Free DIY Tour HDU 1227.Fast Food]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[DP46]]></title>
      <url>%2Fpost%2FProject%2Fdp46.html</url>
      <content type="text"><![CDATA[专题|动态规划|46道动态规划题 VJudge专题 DP46(上) DP46(下)]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1227.Fast Food]]></title>
      <url>%2Fpost%2FHDU%2F1227.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description The fastfood chain McBurger owns several restaurants along a highway. Recently, they have decided to build several depots along the highway, each one located at a restaurant and supplying several of the restaurants with the needed ingredients. Naturally, these depots should be placed so that the average distance between a restaurant and its assigned depot is minimized. You are to write a program that computes the optimal positions and assignments of the depots. To make this more precise, the management of McBurger has issued the following specification: You will be given the positions of n restaurants along the highway as n integers d1 &lt; d2 &lt; … &lt; dn (these are the distances measured from the company’s headquarter, which happens to be at the same highway). Furthermore, a number k (k &lt;= n) will be given, the number of depots to be built. The k depots will be built at the locations of k different restaurants. Each restaurant will be assigned to the closest depot, from which it will then receive its supplies. To minimize shipping costs, the total distance sum, defined as must be as small as possible. Write a program that computes the positions of the k depots, such that the total distance sum is minimized.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1224.Free DIY Tour]]></title>
      <url>%2Fpost%2FHDU%2F1224.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description Weiwei is a software engineer of ShiningSoft. He has just excellently fulfilled a software project with his fellow workers. His boss is so satisfied with their job that he decide to provide them a free tour around the world. It’s a good chance to relax themselves. To most of them, it’s the first time to go abroad so they decide to make a collective tour. The tour company shows them a new kind of tour circuit - DIY circuit. Each circuit contains some cities which can be selected by tourists themselves. According to the company’s statistic, each city has its own interesting point. For instance, Paris has its interesting point of 90, New York has its interesting point of 70, ect. Not any two cities in the world have straight flight so the tour company provide a map to tell its tourists whether they can got a straight flight between any two cities on the map. In order to fly back, the company has made it impossible to make a circle-flight on the half way, using the cities on the map. That is, they marked each city on the map with one number, a city with higher number has no straight flight to a city with lower number. Note: Weiwei always starts from Hangzhou(in this problem, we assume Hangzhou is always the first city and also the last city, so we mark Hangzhou both 1 and N+1), and its interesting point is always 0. Now as the leader of the team, Weiwei wants to make a tour as interesting as possible. If you were Weiwei, how did you DIY it]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1074.Doing Homework]]></title>
      <url>%2Fpost%2FHDU%2F1074.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|栈(stack)|状态压缩|题目 Description Ignatius has just come back school from the 30th ACM/ICPC. Now he has a lot of homework to do. Every teacher gives him a deadline of handing in the homework. If Ignatius hands in the homework after the deadline, the teacher will reduce his score of the final test, 1 day for 1 point. And as you know, doing homework always takes a long time. So Ignatius wants you to help him to arrange the order of doing homework to minimize the reduced score.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 3008.Warcraft]]></title>
      <url>%2Fpost%2FHDU%2F3008.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description Have you ever played the Warcraft It doesn’t matter whether you have played it !We will give you such an experience.There are so many Heroes in it,but you could only choose one of them.Each Hero has his own skills.When such a Skill is used ,it costs some MagicValue,but hurts the Boss at the same time.Using the skills needs intellegence,one should hurt the enemy to the most when using certain MagicValue. Now we send you to complete such a duty to kill the Boss(So cool~~).To simplify the problem:you can assume the LifeValue of the monster is 100, your LifeValue is 100,but you have also a 100 MagicValue!You can choose to use the ordinary Attack(which doesn’t cost MagicValue),or a certain skill(in condition that you own this skill and the MagicValue you have at that time is no less than the skill costs),there is no free lunch so that you should pay certain MagicValue after you use one skill!But we are good enough to offer you a “ResumingCirclet”(with which you can resume the MagicValue each seconds),But you can’t own more than 100 MagicValue and resuming MagicValue is always after you attack.The Boss is cruel , be careful!]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1025.Constructing Roads In JGShining's Kingdom]]></title>
      <url>%2Fpost%2FHDU%2F1025.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|最长上升子序列|二分|题目 Description JGShining’s kingdom consists of 2n(n is no more than 500,000) small cities which are located in two parallel lines. Half of these cities are rich in resource (we call them rich cities) while the others are short of resource (we call them poor cities). Each poor city is short of exactly one kind of resource and also each rich city is rich in exactly one kind of resource. You may assume no two poor cities are short of one same kind of resource and no two rich cities are rich in one same kind of resource. With the development of industry, poor cities wanna import resource from rich ones. The roads existed are so small that they’re unable to ensure the heavy trucks, so new roads should be built. The poor cities strongly BS each other, so are the rich ones. Poor cities don’t wanna build a road with other poor ones, and rich ones also can’t abide sharing an end of road with other rich ones. Because of economic benefit, any rich city will be willing to export resource to any poor one. Rich citis marked from 1 to n are located in Line I and poor ones marked from 1 to n are located in Line II. The location of Rich City 1 is on the left of all other cities, Rich City 2 is on the left of all other cities excluding Rich City 1, Rich City 3 is on the right of Rich City 1 and Rich City 2 but on the left of all other cities … And so as the poor ones. But as you know, two crossed roads may cause a lot of traffic accident so JGShining has established a law to forbid constructing crossed roads. For example, the roads in Figure I are forbidden. In order to build as many roads as possible, the young and handsome king of the kingdom - JGShining needs your help, please help him. ^_^]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1502.Regular Words]]></title>
      <url>%2Fpost%2FHDU%2F1502.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|高精度算法|打表|题目 Description Consider words of length 3n over alphabet {A, B, C} . Denote the number of occurences of A in a word a as A(a) , analogously let the number of occurences of B be denoted as B(a), and the number of occurenced of C as C(a) . Let us call the word w regular if the following conditions are satisfied: A(w)=B(w)=C(w) ;if c is a prefix of w , then A(c)&gt;= B(c) &gt;= C(c) .For example, if n = 2 there are 5 regular words: AABBCC , AABCBC , ABABCC , ABACBC and ABCABC . Regular words in some sense generalize regular brackets sequences (if we consider two-letter alphabet and put similar conditions on regular words, they represent regular brackets sequences). Given n , find the number of regular words.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5122.K.Bro Sorting]]></title>
      <url>%2Fpost%2FHDU%2F5122.html</url>
      <content type="text"><![CDATA[题解|HDU|题目 Description Matt’s friend K.Bro is an ACMer. Yesterday, K.Bro learnt an algorithm: Bubble sort. Bubble sort will compare each pair of adjacent items and swap them if they are in the wrong order. The process repeats until no swap is needed. Today, K.Bro comes up with a new algorithm and names it K.Bro Sorting. There are many rounds in K.Bro Sorting. For each round, K.Bro chooses a number, and keeps swapping it with its next number while the next number is less than it. For example, if the sequence is “1 4 3 2 5”, and K.Bro chooses “4”, he will get “1 3 2 4 5” after this round. K.Bro Sorting is similar to Bubble sort, but it’s a randomized algorithm because K.Bro will choose a random number at the beginning of each round. K.Bro wants to know that, for a given sequence, how many rounds are needed to sort this sequence in the best situation. In other words, you should answer the minimal number of rounds needed to sort the sequence into ascending order. To simplify the problem, K.Bro promises that the sequence is a permutation of 1, 2, . . . , N .]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5120.Intersection]]></title>
      <url>%2Fpost%2FHDU%2F5120.html</url>
      <content type="text"><![CDATA[题解|HDU|数学|题目 Description Matt is a big fan of logo design. Recently he falls in love with logo made up by rings. The following figures are some famous examples you may know. A ring is a 2-D figure bounded by two circles sharing the common center. The radius for these circles are denoted by r and R (r &lt; R). For more details, refer to the gray part in the illustration below.Matt just designed a new logo consisting of two rings with the same size in the 2-D plane. For his interests, Matt would like to know the area of the intersection of these two rings.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5119.Happy Matt Friends]]></title>
      <url>%2Fpost%2FHDU%2F5119.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description Matt has N friends. They are playing a game together. Each of Matt’s friends has a magic number. In the game, Matt selects some (could be zero) of his friends. If the xor (exclusive-or) sum of the selected friends’magic numbers is no less than M , Matt wins. Matt wants to know the number of ways to win.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5112.A Curious Matt]]></title>
      <url>%2Fpost%2FHDU%2F5112.html</url>
      <content type="text"><![CDATA[题解|HDU|题目 Description There is a curious man called Matt. One day, Matt’s best friend Ted is wandering on the non-negative half of the number line. Matt finds it interesting to know the maximal speed Ted may reach. In order to do so, Matt takes records of Ted’s position. Now Matt has a great deal of records. Please help him to find out the maximal speed Ted may reach, assuming Ted moves with a constant speed between two consecutive records.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-08-04 ~ 2016-08-06 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_08_04-2016_08_06.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： HDU 1078.FatMouse and Cheese HDU 1081.To The Max HDU 1422.重温世界杯 HDU 2059.龟兔赛跑 HDU 1158.Employment Planning HDU 1501.Zipper HDU 1503.Advanced Fruits]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1503.Advanced Fruits]]></title>
      <url>%2Fpost%2FHDU%2F1503.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|最长公共子序列|题目 Description The company “21st Century Fruits” has specialized in creating new sorts of fruits by transferring genes from one fruit into the genome of another one. Most times this method doesn’t work, but sometimes, in very rare cases, a new fruit emerges that tastes like a mixture between both of them.A big topic of discussion inside the company is “How should the new creations be called “ A mixture between an apple and a pear could be called an apple-pear, of course, but this doesn’t sound very interesting. The boss finally decides to use the shortest string that contains both names of the original fruits as sub-strings as the new name. For instance, “applear” contains “apple” and “pear” (APPLEar and apPlEAR), and there is no shorter string that has the same property. A combination of a cranberry and a boysenberry would therefore be called a “boysecranberry” or a “craboysenberry”, for example. Your job is to write a program that computes such a shortest name for a combination of two given fruits. Your algorithm should be efficient, otherwise it is unlikely that it will execute in the alloted time for long fruit names.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1501.Zipper]]></title>
      <url>%2Fpost%2FHDU%2F1501.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description Given three strings, you are to determine whether the third string can be formed by combining the characters in the first two strings. The first two strings can be mixed arbitrarily, but each must stay in its original order. For example, consider forming “tcraete” from “cat” and “tree”: String A: catString B: treeString C: tcraete As you can see, we can form the third string by alternating characters from the two strings. As a second example, consider forming “catrtee” from “cat” and “tree”: String A: catString B: treeString C: catrtee Finally, notice that it is impossible to form “cttaree” from “cat” and “tree”.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1158.Employment Planning]]></title>
      <url>%2Fpost%2FHDU%2F1158.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description A project manager wants to determine the number of the workers needed in every month. He does know the minimal number of the workers needed in each month. When he hires or fires a worker, there will be some extra cost. Once a worker is hired, he will get the salary even if he is not working. The manager knows the costs of hiring a worker, firing a worker, and the salary of a worker. Then the manager will confront such a problem: how many workers he will hire or fire each month in order to keep the lowest total cost of the project.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2059.龟兔赛跑]]></title>
      <url>%2Fpost%2FHDU%2F2059.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description 据说在很久很久以前，可怜的兔子经历了人生中最大的打击——赛跑输给乌龟后，心中郁闷，发誓要报仇雪恨，于是躲进了杭州下沙某农业园卧薪尝胆潜心修炼，终于练成了绝技，能够毫不休息得以恒定的速度(VR m/s)一直跑。兔子一直想找机会好好得教训一下乌龟，以雪前耻。最近正值HDU举办50周年校庆，社会各大名流齐聚下沙，兔子也趁此机会向乌龟发起挑战。虽然乌龟深知获胜希望不大，不过迫于舆论压力，只能接受挑战。比赛是设在一条笔直的道路上，长度为L米，规则很简单，谁先到达终点谁就算获胜。无奈乌龟自从上次获胜以后，成了名龟，被一些八卦杂志称为“动物界的刘翔”，广告不断，手头也有了不少积蓄。为了能够再赢兔子，乌龟不惜花下血本买了最先进的武器——“”小飞鸽”牌电动车。这辆车在有电的情况下能够以VT1 m/s的速度“飞驰”，可惜电池容量有限，每次充满电最多只能行驶C米的距离，以后就只能用脚来蹬了，乌龟用脚蹬时的速度为VT2 m/s。更过分的是，乌龟竟然在跑道上修建了很多很多（N个)的供电站，供自己给电动车充电。其中，每次充电需要花费T秒钟的时间。当然，乌龟经过一个充电站的时候可以选择去或不去充电。比赛马上开始了，兔子和带着充满电的电动车的乌龟并列站在起跑线上。你的任务就是写个程序，判断乌龟用最佳的方案进军时，能不能赢了一直以恒定速度奔跑的兔子。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1081.To The Max]]></title>
      <url>%2Fpost%2FHDU%2F1081.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description Given a two-dimensional array of positive and negative integers, a sub-rectangle is any contiguous sub-array of size 1 x 1 or greater located within the whole array. The sum of a rectangle is the sum of all the elements in that rectangle. In this problem the sub-rectangle with the largest sum is referred to as the maximal sub-rectangle. As an example, the maximal sub-rectangle of the array: 0 -2 -7 09 2 -6 2-4 1 -4 1-1 8 0 -2 is in the lower left corner: 9 2-4 1-1 8 and has a sum of 15.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1078.FatMouse and Cheese]]></title>
      <url>%2Fpost%2FHDU%2F1078.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|DFS|记忆化搜索|题目 Description FatMouse has stored some cheese in a city. The city can be considered as a square grid of dimension n: each grid location is labelled (p,q) where 0 &lt;= p &lt; n and 0 &lt;= q &lt; n. At each grid location Fatmouse has hid between 0 and 100 blocks of cheese in a hole. Now he’s going to enjoy his favorite food. FatMouse begins by standing at location (0,0). He eats up the cheese where he stands and then runs either horizontally or vertically to another location. The problem is that there is a super Cat named Top Killer sitting near his hole, so each time he can run at most k locations to get into the hole before being caught by Top Killer. What is worse – after eating up the cheese at one location, FatMouse gets fatter. So in order to gain enough energy for his next run, he has to run to a location which have more blocks of cheese than those that were at the current hole. Given n, k, and the number of blocks of cheese at each grid location, compute the maximum amount of cheese FatMouse can eat before being unable to move.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1422.重温世界杯]]></title>
      <url>%2Fpost%2FHDU%2F1422.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|模拟|题目 Description 世界杯结束了,意大利人连本带利的收回了法国人6年前欠他们的债,捧起了大力神杯,成就了4星意大利.世界杯虽然结束了,但是这界世界杯给我们还是留下许多值得回忆的东西.比如我们听到了黄名嘴的3分钟激情解说,我们懂得了原来可以向同一个人出示3张黄牌，我们还看到了齐达内的头不仅能顶球还能顶人…………介于有这么多的精彩,xhd决定重温德国世界杯,当然只是去各个承办世界杯比赛的城市走走看看.但是这需要一大比钱,幸运的是xhd对世界杯的热爱之情打动了德国世界杯组委会,他们将提供xhd在中国杭州和德国任意世界杯承办城市的往返机票,并说服了这些城市在xhd到达这座城市时为他提供一笔生活费以便他在那里参观时用,当参观完时剩余的钱也将留给xhd,但当生活费不够时他们将强行结束xhd的这次德国之行,除了这个,他们还有一个条件,xhd只能根据他们所给的路线参观.比如有3座城市a,b,c,他们给定了a-b-c-a的路线,那么xhd只有3种参观顺序abc,bca,cab.由于各个城市所提供的生活费和在那里的花费都不同,这使xhd很头痛,还好我们事先知道了这笔生活费和花费.请问xhd最多能顺利参观几座城市]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-08-01 ~ 2016-08-03 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_08_01-2016_08_03.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： AOJ 225.Human Gene FunctionsPOJ 1080.Human Gene FunctionsHDU 1080.Human Gene Functions HDU 1978.How many ways HDU 1059.Dividing HDU 1300.Pearls HDU 2191.悼念512汶川大地震遇难同胞——珍惜现在，感恩生活 HDU 1114.Piggy-Bank HDU 1024.Max Sum Plus Plus HDU 1106.FatMouse’s Speed AOJ 309.The Tower of Babylon AOJ 315.Humble Numbers AOJ 224.Treats for the CowsPOJ 3186.Treats for the Cows AOJ 261.货币兑换]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 261.货币兑换]]></title>
      <url>%2Fpost%2FAOJ%2F261.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|贪心算法|模拟|题目 Description 招商银行遇到一位很奇怪的顾客。这位顾客起初用一些人民兑换了另一种货币，然后不断地用一种货币兑换另一种货币，最后又换回人民币。令人惊奇的是，最后换回的人民币居然比他最初带来的多了一些。例如这样一个兑换过程：假设1单位人民币兑换6.89单位火星币，1单位火星币兑换0.18单位水星币，1单位水星币兑换0.81单位人民币。我们用1.20单位人民兑换得8.27单位火星币，然后用这8.27单位火星币兑换得1.49单位水星币，最后用1.49单位水星币兑换到1.21单位人民币。奇迹就这样发生了。聪明的你一定已经发现了，这都是四舍五入的功劳。当然这种事情在现实中是不可能的，但我们还是来研究一下这个问题。假设共有n种货币，编号从1到n。我们最初持有m单位的货币1。已知各种货币之间兑换比率，每次兑换后都四舍五入到小数点后两位。请问兑换k次且换回到货币1后，最多能让我们持有的货币增加多少单位？]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 3186.Treats for the Cows]]></title>
      <url>%2Fpost%2FPOJ%2F3186.html</url>
      <content type="text"><![CDATA[题解|动态规划|POJ|原题,具体看&gt;AOJ 224.Treats for the Cows&lt;]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 224.Treats for the Cows]]></title>
      <url>%2Fpost%2FAOJ%2F224.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|题目 Description FJ has purchased N (1 &lt;= N &lt;= 2000) yummy treats for the cows who get money for giving vast amounts of milk. FJ sells one treat per day and wants to maximize the money he receives over a given period time. The treats are interesting for many reasons:The treats are numbered 1..N and stored sequentially in single file in a long box that is open at both ends. On any day, FJ can retrieve one treat from either end of his stash of treats.Like fine wines and delicious cheeses, the treats improve with age and command greater prices.The treats are not uniform: some are better and have higher intrinsic value. Treat i has value v(i) (1 &lt;= v(i) &lt;= 1000).Cows pay more for treats that have aged longer: a cow will pay v(i)*a for a treat of age a.Given the values v(i) of each of the treats lined up in order of the index i in their box, what is the greatest value FJ can receive for them if he orders their sale optimally The first treat is sold on day 1 and has age a=1. Each subsequent day increases the age by 1.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 315.Humble Numbers]]></title>
      <url>%2Fpost%2FAOJ%2F315.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|丑数|原题,具体看&gt;HDU 1058.Humble Numbers&lt;]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 309.The Tower of Babylon]]></title>
      <url>%2Fpost%2FAOJ%2F309.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|最长上升子序列|题目 Description A number whose only prime factors are 2,3,5 or 7 is called a humble number. The sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 25, 27, … shows the first 20 humble numbers.Write a program to find and print the nth element in this sequence.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1106.FatMouse's Speed]]></title>
      <url>%2Fpost%2FHDU%2F1106.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|最长上升子序列|栈(stack)|题目 Description FatMouse believes that the fatter a mouse is, the faster it runs. To disprove this, you want to take the data on a collection of mice and put as large a subset of this data as possible into a sequence so that the weights are increasing, but the speeds are decreasing.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1024.Max Sum Plus Plus]]></title>
      <url>%2Fpost%2FHDU%2F1024.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description Now I think you have got an AC in Ignatius.L’s “Max Sum” problem. To be a brave ACMer, we always challenge ourselves to more difficult problems. Now you are faced with a more difficult problem. Given a consecutive number sequence S 1, S 2, S 3, S 4 … S x, … S n (1 ≤ x ≤ n ≤ 1,000,000, -32768 ≤ S x ≤ 32767). We define a function sum(i, j) = S i + … + S j (1 ≤ i ≤ j ≤ n). Now given an integer m (m &gt; 0), your task is to find m pairs of i and j which make sum(i 1, j 1) + sum(i 2, j 2) + sum(i 3, j 3) + … + sum(i m, j m) maximal (i x ≤ i y ≤ j x or i x ≤ j y ≤ j x is not allowed). But I`m lazy, I don’t want to write a special-judge module, so you don’t have to ## Output m pairs of i and j, just output the maximal summation of sum(i x, j x)(1 ≤ x ≤ m) instead. ^_^]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1114.Piggy-Bank]]></title>
      <url>%2Fpost%2FHDU%2F1114.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|背包问题|题目 Description Before ACM can do anything, a budget must be prepared and the necessary financial support obtained. The main income for this action comes from Irreversibly Bound Money (IBM). The idea behind is simple. Whenever some ACM member has any small money, he takes all the coins and throws them into a piggy-bank. You know that this process is irreversible, the coins cannot be removed without breaking the pig. After a sufficiently long time, there should be enough cash in the piggy-bank to pay everything that needs to be paid. But there is a big problem with piggy-banks. It is not possible to determine how much money is inside. So we might break the pig into pieces only to find out that there is not enough money. Clearly, we want to avoid this unpleasant situation. The only possibility is to weigh the piggy-bank and try to guess how many coins are inside. Assume that we are able to determine the weight of the pig exactly and that we know the weights of all coins of a given currency. Then there is some minimum amount of money in the piggy-bank that we can guarantee. Your task is to find out this worst case and determine the minimum amount of cash inside the piggy-bank. We need your help. No more prematurely broken pigs!]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2191.悼念512汶川大地震遇难同胞——珍惜现在，感恩生活]]></title>
      <url>%2Fpost%2FHDU%2F2191.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|背包问题|题目 Description 急！灾区的食物依然短缺！为了挽救灾区同胞的生命，心系灾区同胞的你准备自己采购一些粮食支援灾区，现在假设你一共有资金n元，而市场有m种大米，每种大米都是袋装产品，其价格不等，并且只能整袋购买。请问：你用有限的资金最多能采购多少公斤粮食呢？ 后记：人生是一个充满了变数的生命过程，天灾、人祸、病痛是我们生命历程中不可预知的威胁。月有阴晴圆缺，人有旦夕祸福，未来对于我们而言是一个未知数。那么，我们要做的就应该是珍惜现在，感恩生活——感谢父母，他们给予我们生命，抚养我们成人；感谢老师，他们授给我们知识，教我们做人感谢朋友，他们让我们感受到世界的温暖；感谢对手，他们令我们不断进取、努力。同样，我们也要感谢痛苦与艰辛带给我们的财富～]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1300.Pearls]]></title>
      <url>%2Fpost%2FHDU%2F1300.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|贪心算法|原题,具体看&gt;POJ 1260.Pearls&lt;]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1059.Dividing]]></title>
      <url>%2Fpost%2FHDU%2F1059.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|背包问题|原题,具体看&gt;AOJ 182.Dividing&lt;]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1978.How many ways]]></title>
      <url>%2Fpost%2FHDU%2F1978.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|记忆化搜索|题目 Description 这是一个简单的生存游戏，你控制一个机器人从一个棋盘的起始点(1,1)走到棋盘的终点(n,m)。游戏的规则描述如下：1.机器人一开始在棋盘的起始点并有起始点所标有的能量。2.机器人只能向右或者向下走，并且每走一步消耗一单位能量。3.机器人不能在原地停留。4.当机器人选择了一条可行路径后，当他走到这条路径的终点时，他将只有终点所标记的能量。 如上图，机器人一开始在(1,1)点，并拥有4单位能量，蓝色方块表示他所能到达的点，如果他在这次路径选择中选择的终点是(2,4) 点，当他到达(2,4)点时将拥有1单位的能量，并开始下一次路径选择，直到到达(6,6)点。我们的问题是机器人有多少种方式从起点走到终点。这可能是一个很大的数，输出的结果对10000取模。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1080.Human Gene Functions]]></title>
      <url>%2Fpost%2FPOJ%2F1080.html</url>
      <content type="text"><![CDATA[题解|动态规划|POJ|原题,具体看&gt;AOJ 225.Human Gene Functions&lt;]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1080.Human Gene Functions]]></title>
      <url>%2Fpost%2FHDU%2F1080.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|原题,具体看&gt;AOJ 225.Human Gene Functions&lt;]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 225.Human Gene Functions]]></title>
      <url>%2Fpost%2FAOJ%2F225.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|题目 Description It is well known that a human gene can be considered as a sequence, consisting of four nucleotides, which are simply denoted by four letters, A, C, G, and T. Biologists have been interested in identifying human genes and determining their functions, because these can be used to diagnose human diseases and to design new drugs for them. A human gene can be identified through a series of time-consuming biological experiments, often with the help of computer programs. Once a sequence of a gene is obtained, the next job is to determine its function.One of the methods for biologists to use in determining the function of a new gene sequence that they have just identified is to search a database with the new gene as a query. The database to be searched stores many gene sequences and their functions – many researchers have been submitting their genes and functions to the database and the database is freely accessible through the Internet. A database search will return a list of gene sequences from the database that are similar to the query gene.Biologists assume that sequence similarity often implies functional similarity. So, the function of the new gene might be one of the functions that the genes from the list have. To exactly determine which one is the right one another series of biological experiments will be needed. Your job is to make a program that compares two genes and determines their similarity as explained below. Your program may be used as a part of the database search if you can provide an efficient one.Given two genes AGTGATG and GTTAG, how similar are they One of the methods to measure the similarityof two genes is called alignment. In an alignment, spaces are inserted, if necessary, in appropriate positions ofthe genes to make them equally long and score the resulting genes according to a scoring matrix. For example, one space is inserted into AGTGATG to result in AGTGAT-G, and three spaces are inserted into GTTAG to result in –GT–TAG. A space is denoted by a minus sign (-). The two genes are now of equallength. These two strings are aligned: AGTGAT-G-GT–TAG In this alignment, there are four matches, namely, G in the second position, T in the third, T in the sixth, and G in the eighth. Each pair of aligned characters is assigned a score according to the following scoring matrix. denotes that a space-space match is not allowed. The score of the alignment above is (-3)+5+5+(-2)+(-3)+5+(-3)+5=9. Of course, many other alignments are possible. One is shown below (a different number of spaces are inserted into different positions): AGTGATG-GTTA-G This alignment gives a score of (-3)+5+5+(-2)+5+(-1) +5=14. So, this one is better than the previous one. As a matter of fact, this one is optimal since no other alignment can have a higher score. So, it is said that thesimilarity of the two genes is 14.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-07-29 ~ 2016-07-31 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_07_29-2016_07_31.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： AOJ 36.Alphacode AOJ 103.BUY LOW, BUY LOWER AOJ 173.编辑距离 AOJ 182.Dividing AOJ 189.最长递增子序列]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-07-26 ~ 2016-07-28 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_07_26-2016_07_28.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： AOJ 36.Alphacode AOJ 49.Investment AOJ 64.数字三角形问题 AOJ 153.Redraiment的走法 AOJ 169.找零钱]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 182.Dividing]]></title>
      <url>%2Fpost%2FAOJ%2F182.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|背包问题|题目 Description Marsha and Bill own a collection of marbles. They want to split the collection among themselves so that both receive an equal share of the marbles. This would be easy if all the marbles had the same value, because then they could just split the collection in half. But unfortunately, some of the marbles are larger, or more beautiful than others. So, Marsha and Bill start by assigning a value, a natural number between one and six, to each marble. Now they want to divide the marbles so that each of them gets the same total value. Unfortunately, they realize that it might be impossible to divide the marbles in this way (even if the total value of all marbles is even). For example, if there are one marble of value 1, one of value 3 and two of value 4, then they cannot be split into sets of equal value. So, they ask you to write a program that checks whether there is a fair partition of the marbles.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 189.最长递增子序列]]></title>
      <url>%2Fpost%2FAOJ%2F189.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|最长上升子序列|题目 Description 有n个互不相同的整数an若存在一个数列bm其中对于任何1 &lt; i &lt; m满足bi &lt; bi+1 且 abi &lt; abi+1则称abn为an的一个递增子序列试求出给定序列的最长递增子序列长度]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 173.编辑距离]]></title>
      <url>%2Fpost%2FAOJ%2F173.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|题目 Description 假设字符串的基本操作仅为：删除一个字符、插入一个字符和将一个字符修改成另一个字符这三种操作。我们把进行了一次上述三种操作的任意一种操作称为进行了一步字符基本操作。下面我们定义两个字符串的编辑距离：对于两个字符串a和b，通过上述的基本操作，我们可以把a变成b或b变成a，那么字符串a变成字符串b需要的最少基本字符操作步数称为字符串a和字符串b的编辑距离。例如：a=”ABC”,b=”CBCD”,则a与b的编辑距离为2。你的任务就是：编一个快速的程序来计算任意两个字符串的编辑距离。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 103.BUY LOW, BUY LOWER]]></title>
      <url>%2Fpost%2FAOJ%2F103.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|最长上升子序列|题目 Description The advice to “buy low” is half the formula to success in the bovine stock market.To be considered a great investor you must also follow this problems’ advice: “Buy low; buy lower” Each time you buy a stock, you must purchase it at a lower price than the previous time you bought it. The more times you buy at a lower price than before, the better! Your goal is to see how many times you can continue purchasing at ever lower prices. You will be given the daily selling prices of a stock (positive 16-bit integers) over a period of time. You can choose to buy stock on any of the days. Each time you choose to buy, the price must be strictly lower than the previous time you bought stock. Write a program which identifies which days you should buy stock in order to maximize the number of times you buy. Here is a list of stock prices: Day 1 2 3 4 5 6 7 8 9 10 11 12Price 68 69 54 64 68 64 70 67 78 62 98 87 The best investor (by this problem, anyway) can buy at most four times if each purchase is lower then the previous purchase. One four day sequence (there might be others) of acceptable buys is: Day 2 5 6 10Price 69 68 64 62]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 36.Alphacode]]></title>
      <url>%2Fpost%2FAOJ%2F36.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|题目 Description Alice and Bob need to send secret messages to each other and are discussing ways to encode their messages: Alice: “Let’s just use a very simple code: We’ll assign ‘A’ the code word 1, ‘B’ will be 2, and so on down to ‘Z’ being assigned 26.”Bob: “That’s a stupid code, Alice. Suppose I send you the word ‘BEAN’ encoded as 25114. You could decode that in many different ways!”Alice: “Sure you could, but what words would you get Other than ‘BEAN’, you’d get ‘BEAAD’, ‘YAAD’, ‘YAN’, ‘YKD’ and ‘BEKD’. I think you would be able to figure out the correct decoding. And why would you send me the word ‘BEAN’ anyway ”Bob: “OK, maybe that’s a bad example, but I bet you that if you got a string of length 500 there would be tons of different decodings and with that many you would find at least two different ones that would make sense.”Alice: “How many different decodings “Bob: “Jillions!” For some reason, Alice is still unconvinced by Bob’s argument, so she requires a program that will determine how many decodings there can be for a given string using her code.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 169.找零钱]]></title>
      <url>%2Fpost%2FAOJ%2F169.html</url>
      <content type="text"><![CDATA[题解|AOJ|DFS|打表|题目 Description 我们知道人民币有1、2、5、10、20、50、100这几种面值。现在给你n(1≤n≤250)元，让你计算换成用上面这些面额表示且总数不超过100张，共有几种。比如4元，能用4张1元、2张1元和1张2元、2张2元，三种表示方法。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 153.Redraiment的走法]]></title>
      <url>%2Fpost%2FAOJ%2F153.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|最长上升子序列|题目 Description Redraiment是个聪明人，总是以奇怪的思考方法思考问题，但不知道为什么，他的解答总是最最巧妙，我们隆重地称他为诡异人！有一天Jesse不经意中发现，诡异人的走路方法很特别，于是特别关注了他的走路规则。他发现诡异人总是往高处走，但走的步数总是最多，不知道为什么？你能替Jesse研究研究他最多走的步数吗？发现了你也会是个聪明人!^_^]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 64.数字三角形问题]]></title>
      <url>%2Fpost%2FAOJ%2F64.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|题目 Description 73 88 1 02 7 4 44 5 2 6 5(Figure 1) Figure 1 shows a number triangle. Write a program that calculates the highest sum of numbers passed on a route that starts at the top and ends somewhere on the base. Each step can go either diagonally down to the left or diagonally down to the right.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 49.Investment]]></title>
      <url>%2Fpost%2FAOJ%2F49.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|背包问题|题目 Description John never knew he had a grand-uncle, until he received the notary’s letter. He learned that his late grand-uncle had gathered a lot of money, somewhere in South-America, and that John was the only inheritor.John did not need that much money for the moment. But he realized that it would be a good idea to store this capital in a safe place, and have it grow until he decided to retire. The bank convinced him that a certain kind of bond was interesting for him.This kind of bond has a fixed value, and gives a fixed amount of yearly interest, payed to the owner at the end of each year. The bond has no fixed term. Bonds are available in different sizes. The larger ones usually give a better interest. Soon John realized that the optimal set of bonds to buy was not trivial to figure out. Moreover, after a few years his capital would have grown, and the schedule had to be re-evaluated.Assume the following bonds are available: Value Annualinterest4000 4003000 250 With a capital of e10 000 one could buy two bonds of $4 000, giving a yearly interest of $800. Buying two bonds of $3 000, and one of $4 000 is a better idea, as it gives a yearly interest of $900. After two years the capital has grown to $11 800, and it makes sense to sell a $3 000 one and buy a $4 000 one, so the annual interest grows to $1 050. This is where this story grows unlikely: the bank does not charge for buying and selling bonds. Next year the total sum is $12 850, which allows for three times $4 000, giving a yearly interest of $1 200.Here is your problem: given an amount to begin with, a number of years, and a set of bonds with their values and interests, find out how big the amount may grow in the given period, using the best schedule for buying and selling bonds.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-07-23 ~ 2016-07-25 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_07_23-2016_07_25.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： HDU 2845.Beans AOJ 275.Charm Bracelet AOJ 524.桂园食堂 HDU 2870.Largest Submatrix HDU 2830.Matrix Swapping II HDU 1257.最少拦截系统 HDU 1159.Common Subsequence HDU 1421.搬寝室 HDU 1058.Humble Numbers HDU 1789.Doing Homework again]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1789.Doing Homework again]]></title>
      <url>%2Fpost%2FHDU%2F1789.html</url>
      <content type="text"><![CDATA[题解|HDU|贪心算法|题目 Description Ignatius has just come back school from the 30th ACM/ICPC. Now he has a lot of homework to do. Every teacher gives him a deadline of handing in the homework. If Ignatius hands in the homework after the deadline, the teacher will reduce his score of the final test. And now we assume that doing everyone homework always takes one day. So Ignatius wants you to help him to arrange the order of doing homework to minimize the reduced score.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[丑数]]></title>
      <url>%2Fpost%2FAlgorithm%2FUgly_number.html</url>
      <content type="text"><![CDATA[算法|丑数|所谓丑数，就是不能被2，3，5，7以外的其他素数整除的数。1，2，3，4，5，6，7，8，9，10，12，14，15，16，18是最前面的15个丑数。 百度百科丑数]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1058.Humble Numbers]]></title>
      <url>%2Fpost%2FHDU%2F1058.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|丑数|题目 Description A number whose only prime factors are 2,3,5 or 7 is called a humble number. The sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 25, 27, … shows the first 20 humble numbers. Write a program to find and print the nth element in this sequence]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1421.搬寝室]]></title>
      <url>%2Fpost%2FHDU%2F1421.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description 搬寝室是很累的,xhd深有体会.时间追述2006年7月9号,那天xhd迫于无奈要从27号楼搬到3号楼,因为10号要封楼了.看着寝室里的n件物品,xhd开始发呆,因为n是一个小于2000的整数,实在是太多了,于是xhd决定随便搬2*k件过去就行了.但还是会很累,因为2*k也不小是一个不大于n的整数.幸运的是xhd根据多年的搬东西的经验发现每搬一次的疲劳度是和左右手的物品的重量差的平方成正比(这里补充一句,xhd每次搬两件东西,左手一件右手一件).例如xhd左手拿重量为3的物品,右手拿重量为6的物品,则他搬完这次的疲劳度为(6-3)^2 = 9.现在可怜的xhd希望知道搬完这2*k件物品后的最佳状态是怎样的(也就是最低的疲劳度),请告诉他吧.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1159.Common Subsequence]]></title>
      <url>%2Fpost%2FHDU%2F1159.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|最长公共子序列|题目 Description A subsequence of a given sequence is the given sequence with some elements (possible none) left out. Given a sequence X = another sequence Z = is a subsequence of X if there exists a strictly increasing sequence of indices of X such that for all j = 1,2,…,k, xij = zj. For example, Z = is a subsequence of X = with index sequence . Given two sequences X and Y the problem is to find the length of the maximum-length common subsequence of X and Y.The program]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1257.最少拦截系统]]></title>
      <url>%2Fpost%2FHDU%2F1257.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|最长上升子序列|题目 Description 某国为了防御敌国的导弹袭击,发展出一种导弹拦截系统.但是这种导弹拦截系统有一个缺陷:虽然它的第一发炮弹能够到达任意的高度,但是以后每一发炮弹都不能超过前一发的高度.某天,雷达捕捉到敌国的导弹来袭.由于该系统还在试用阶段,所以只有一套系统,因此有可能不能拦截所有的导弹.怎么办呢 多搞几套系统呗!你说说倒蛮容易,成本呢 成本是个大问题啊.所以俺就到这里来求救了,请帮助计算一下最少需要多少套拦截系统.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2830.Matrix Swapping II]]></title>
      <url>%2Fpost%2FHDU%2F2830.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|最大矩形|题目 Description Given an N * M matrix with each entry equal to 0 or 1. We can find some rectangles in the matrix whose entries are all 1, and we define the maximum area of such rectangle as this matrix’s goodness. We can swap any two columns any times, and we are to make the goodness of the matrix as large as possible.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[最大矩形]]></title>
      <url>%2Fpost%2FAlgorithm%2FMax_Rectangle.html</url>
      <content type="text"><![CDATA[算法|动态规划|最大矩形|最大矩形是动态规划问题的一部分 对于一个二维的图,可以将其看成由许多宽度为 1 的小矩形组成的每次可以以一行为基底,求出最低到这一行的矩形的最大面积先求出从这一行开始的矩形的往上能达到的最远距离(高),将其称为一个小矩形再分别对每个小矩形求取其左侧和右侧没有高于它的最远距离(宽)根据宽和高即可求出这个小矩形往外拓展能达到的最大矩形,最后求出所有小矩形中最大的那个值即可 &gt;参考&lt;]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2870.Largest Submatrix]]></title>
      <url>%2Fpost%2FHDU%2F2870.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|最大矩形|题目 Description Now here is a matrix with letter ‘a’,’b’,’c’,’w’,’x’,’y’,’z’ and you can change ‘w’ to ‘a’ or ‘b’, change ‘x’ to ‘b’ or ‘c’, change ‘y’ to ‘a’ or ‘c’, and change ‘z’ to ‘a’, ‘b’ or ‘c’. After you changed it, what’s the largest submatrix with the same letters you can make]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 524.桂园食堂]]></title>
      <url>%2Fpost%2FAOJ%2F524.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|背包问题| Description 食堂对大家来说一点都不陌生,每次打菜的时候我们几乎看重两样:价钱和味道.现在你来到了桂园二楼打菜,假设你的卡里的钱为m,现在食堂里有n种菜,每种菜的价格分别为Pi,用Li来衡量你心中的每种菜的味道,我们称之为满意值.那你本次打菜最满意的值是多少呢 假设你的饭量足够大,并且你不会打两份一样的菜.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 275.Charm Bracelet]]></title>
      <url>%2Fpost%2FAOJ%2F275.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|背包问题|# 题目 Description Bessie has gone to the mall’s jewelry store and spies a charm bracelet. Of course, she’d like to fill it with the best charms possible from the N (1 ≤ N ≤ 3,402) available charms. Each charm i in the supplied list has a weight Wi (1 ≤ Wi ≤ 400), a ‘desirability’ factor Di (1 ≤ Di ≤ 100), and can be used at most once. Bessie can only support a charm bracelet whose weight is no more than M (1 ≤ M ≤ 12,880). Given that weight limit as a constraint and a list of the charms with their weights and desirability rating, deduce the maximum possible sum of ratings.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[最大不连续子序列]]></title>
      <url>%2Fpost%2FAlgorithm%2FMUS.html</url>
      <content type="text"><![CDATA[算法|动态规划|最大不连续子序列|按照 最大连续子序列 的命名,来命名 最大不连续子序列 ( Maximum Uncontinuous Subsequence ) 其意思是,在一串数中,在所有数都不相邻的子序列里,找出和最大的子序列]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2845.Beans]]></title>
      <url>%2Fpost%2FHDU%2F2845.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|最大不连续子序列|题目 Description Bean-eating is an interesting game, everyone owns an M*N matrix, which is filled with different qualities beans. Meantime, there is only one bean in any 1*1 grid. Now you want to eat the beans and collect the qualities, but everyone must obey by the following rules: if you eat the bean at the coordinate(x, y), you can’t eat the beans anyway at the coordinates listed (if exiting): (x, y-1), (x, y+1), and the both rows whose abscissas are x-1 and x+1. Now, how much qualities can you eat and then get]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-07-20 ~ 2016-07-22 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_07_21-2016_07_22.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： HDU 2577.How to Type HDU 2844.Coins]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2844.Coins]]></title>
      <url>%2Fpost%2FHDU%2F2844.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description Whuacmers use coins.They have coins of value A1,A2,A3…An Silverland dollar. One day Hibix opened purse and found there were some coins. He decided to buy a very nice watch in a nearby shop. He wanted to pay the exact price(without change) and he known the price would not more than m.But he didn’t know the exact price of the watch. You are to write a program which reads n,m,A1,A2,A3…An and C1,C2,C3…Cn corresponding to the number of Tony’s coins of value A1,A2,A3…An then calculate how many prices(form 1 to m) Tony can pay use these coins.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2577.How to Type]]></title>
      <url>%2Fpost%2FHDU%2F2577.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|模拟|题目 Description Pirates have finished developing the typing software. He called Cathy to test his typing software. She is good at thinking. After testing for several days, she finds that if she types a string by some ways, she will type the key at least. But she has a bad habit that if the caps lock is on, she must turn off it, after she finishes typing. Now she wants to know the smallest times of typing the key to finish typing a string.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-07-17 ~ 2016-07-19 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_07_17-2016_07_19.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： HDU 1176.免费馅饼 HDU 1203.I NEED A OFFER! HDU 2159.FATE]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2159.FATE]]></title>
      <url>%2Fpost%2FHDU%2F2159.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|背包问题|题目 Description 最近xhd正在玩一款叫做FATE的游戏，为了得到极品装备，xhd在不停的杀怪做任务。久而久之xhd开始对杀怪产生的厌恶感，但又不得不通过杀怪来升完这最后一级。现在的问题是，xhd升掉最后一级还需n的经验值，xhd还留有m的忍耐度，每杀一个怪xhd会得到相应的经验，并减掉相应的忍耐度。当忍耐度降到0或者0以下时，xhd就不会玩这游戏。xhd还说了他最多只杀s只怪。请问他能升掉这最后一级吗？]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1203.I NEED A OFFER!]]></title>
      <url>%2Fpost%2FHDU%2F1203.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|背包问题|题目 Description Speakless很早就想出国，现在他已经考完了所有需要的考试，准备了所有要准备的材料，于是，便需要去申请学校了。要申请国外的任何大学，你都要交纳一定的申请费用，这可是很惊人的。Speakless没有多少钱，总共只攒了n万美元。他将在m个学校中选择若干的（当然要在他的经济承受范围内）。每个学校都有不同的申请费用a（万美元），并且Speakless估计了他得到这个学校offer的可能性b。不同学校之间是否得到offer不会互相影响。“I NEED A OFFER”，他大叫一声。帮帮这个可怜的人吧，帮助他计算一下，他可以收到至少一份offer的最大概率。（如果Speakless选择了多个学校，得到任意一个学校的offer都可以）。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[删除手机 My Knox]]></title>
      <url>%2Fpost%2FWriting%2Fmyknox.html</url>
      <content type="text"><![CDATA[随笔|Android|三星(SAMSUNG)|C5|三星有个软件远近闻名,它就是让无数三星用户 root 后失去保修的“恶棍” —— Knox]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1176.免费馅饼]]></title>
      <url>%2Fpost%2FHDU%2F1176.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description 都说天上不会掉馅饼，但有一天gameboy正走在回家的小径上，忽然天上掉下大把大把的馅饼。说来gameboy的人品实在是太好了，这馅饼别处都不掉，就掉落在他身旁的10米范围内。馅饼如果掉在了地上当然就不能吃了，所以gameboy马上卸下身上的背包去接。但由于小径两侧都不能站人，所以他只能在小径上接。由于gameboy平时老呆在房间里玩游戏，虽然在游戏中是个身手敏捷的高手，但在现实中运动神经特别迟钝，每秒种只有在移动不超过一米的范围内接住坠落的馅饼。现在给这条小径如图标上坐标： 为了使问题简化，假设在接下来的一段时间里，馅饼都掉落在0-10这11个位置。开始时gameboy站在5这个位置，因此在第一秒，他只能接到4,5,6这三个位置中其中一个位置上的馅饼。问gameboy最多可能接到多少个馅饼？（假设他的背包可以容纳无穷多个馅饼）]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-07-14 ~ 2016-07-16 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_07_14-2016_07_16.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： HDU 1069.Monkey and Banana Codeforces 697A.Pineapple Incident Codeforces 697B.Barnicle HDU 1171.Big Event in HDU HDU 2084.数塔 AOJ 785.棋盘完美覆盖 AOJ 786.数字序列 AOJ 787.阶乘中找数]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 787.阶乘中找数]]></title>
      <url>%2Fpost%2FAOJ%2F787.html</url>
      <content type="text"><![CDATA[题解|AOJ|高精度算法|题目 Description 问题描述：统计n阶乘中数字p的个数]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 786.数字序列]]></title>
      <url>%2Fpost%2FAOJ%2F786.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|题目 Description f(1) =1；f(2)=1；f(n)=(A*f(n-1)+B*f(n-2)) mod 7给定A,B和n时，计算f(n)]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 785.棋盘完美覆盖]]></title>
      <url>%2Fpost%2FAOJ%2F785.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|打表|题目 Description 问题描述:有2×n的一个长方形棋盘,用一些1×2的骨牌铺满方格.例如:n=3时,在2×3的棋盘上用1×2的骨牌覆盖,共有3种铺法。问题求解:编写一个程序,试对给出的任意一个n(n&gt;0),输出铺法总数.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2084.数塔]]></title>
      <url>%2Fpost%2FHDU%2F2084.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description 在讲述DP算法的时候，一个经典的例子就是数塔问题，它是这样描述的： 有如下所示的数塔，要求从顶层走到底层，若每一步只能走到相邻的结点，则经过的结点的数字之和最大是多少？已经告诉你了，这是个DP的题目，你能AC吗]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1171.Big Event in HDU]]></title>
      <url>%2Fpost%2FHDU%2F1171.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|背包问题|题目 Description Nowadays, we all know that Computer College is the biggest department in HDU. But, maybe you don’t know that Computer College had ever been split into Computer College and Software College in 2002.The splitting is absolutely a big event in HDU! At the same time, it is a trouble thing too. All facilities must go halves. First, all facilities are assessed, and two facilities are thought to be same if they have the same value. It is assumed that there is N (0&lt;N&lt;1000) kinds of facilities (different value, different kinds).]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 697B.Barnicle]]></title>
      <url>%2Fpost%2FCodeforces%2F697B.html</url>
      <content type="text"><![CDATA[题解|模拟|Codeforces|题目 Description Barney is standing in a bar and starring at a pretty girl. He wants to shoot her with his heart arrow but he needs to know the distance between him and the girl to make his shot accurate. Barney asked the bar tender Carl about this distance value, but Carl was so busy talking to the customers so he wrote the distance value (it’s a real number) on a napkin. The problem is that he wrote it in scientific notation. The scientific notation of some real number x is the notation of form AeB, where A is a real number and B is an integer and x = A × 10B is true. In our case A is between 0 and 9 and B is non-negative. Barney doesn’t know anything about scientific notation (as well as anything scientific at all). So he asked you to tell him the distance value in usual decimal representation with minimal number of digits after the decimal point (and no decimal point if it is an integer). See the ## Output format for better understanding.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 697A.Pineapple Incident]]></title>
      <url>%2Fpost%2FCodeforces%2F697A.html</url>
      <content type="text"><![CDATA[题解|模拟|Codeforces|题目 Description Ted has a pineapple. This pineapple is able to bark like a bulldog! At time t (in seconds) it barks for the first time. Then every s seconds after it, it barks twice with 1 second interval. Thus it barks at times t, t + s, t + s + 1, t + 2s, t + 2s + 1, etc. Barney woke up in the morning and wants to eat the pineapple, but he can’t eat it when it’s barking. Barney plans to eat it at time x (in seconds), so he asked you to tell him if it’s gonna bark at that time.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-07-11 ~ 2016-07-13 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_07_11-2016_07_13.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： HDU 1087.Super Jumping! Jumping! Jumping! HDU 2571.命运]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1069.Monkey and Banana]]></title>
      <url>%2Fpost%2FHDU%2F1069.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|最长上升子序列|题目 Description A group of researchers are designing an experiment to test the IQ of a monkey. They will hang a banana at the roof of a building, and at the mean time, provide the monkey with some blocks. If the monkey is clever enough, it shall be able to reach the banana by placing one block on the top another to build a tower and climb up to get its favorite food. The researchers have n types of blocks, and an unlimited supply of blocks of each type. Each type-i block was a rectangular solid with linear dimensions (xi, yi, zi). A block could be reoriented so that any two of its three dimensions determined the dimensions of the base and the other dimension was the height. They want to make sure that the tallest tower possible by stacking blocks can reach the roof. The problem is that, in building a tower, one block could only be placed on top of another block as long as the two base dimensions of the upper block were both strictly smaller than the corresponding base dimensions of the lower block because there has to be some space for the monkey to step on. This meant, for example, that blocks oriented to have equal-sized bases couldn’t be stacked. Your job is to write a program that determines the height of the tallest tower the monkey can build with a given set of blocks.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2571.命运]]></title>
      <url>%2Fpost%2FHDU%2F2571.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description 穿过幽谷意味着离大魔王lemon已经无限接近了！可谁能想到，yifenfei在斩杀了一些虾兵蟹将后，却再次面临命运大迷宫的考验，这是魔王lemon设下的又一个机关。要知道，不论何人，若在迷宫中被困1小时以上，则必死无疑！可怜的yifenfei为了去救MM，义无返顾地跳进了迷宫。让我们一起帮帮执着的他吧！命运大迷宫可以看成是一个两维的方格阵列，如下图所示： yifenfei一开始在左上角，目的当然是到达右下角的大魔王所在地。迷宫的每一个格子都受到幸运女神眷恋或者痛苦魔王的诅咒，所以每个格子都对应一个值，走到那里便自动得到了对应的值。现在规定yifenfei只能向右或者向下走，向下一次只能走一格。但是如果向右走，则每次可以走一格或者走到该行的列数是当前所在列数倍数的格子，即：如果当前格子是（x,y），下一步可以是（x+1,y），(x,y+1)或者(x,y*k) 其中k&gt;1。为了能够最大把握的消灭魔王lemon，yifenfei希望能够在这个命运大迷宫中得到最大的幸运值。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Minecraft 服务器联机]]></title>
      <url>%2Fpost%2FWriting%2FMC.html</url>
      <content type="text"><![CDATA[随笔|Minecraft| 联机真的是挺麻烦的~记录下过程,同时也作为服务器的进服指南~]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[最大上升子序列(最大递增子段和)]]></title>
      <url>%2Fpost%2FAlgorithm%2FMIS.html</url>
      <content type="text"><![CDATA[算法|动态规划|最大上升子序列|没有找到相似的叫法,网上能搜到的有: 最大递增子段和 最大上升子段和 不过我更倾向于最大递增子段和]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1087.Super Jumping! Jumping! Jumping!]]></title>
      <url>%2Fpost%2FHDU%2F1087.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|最大上升子序列|题目 Description Nowadays, a kind of chess game called “Super Jumping! Jumping! Jumping!” is very popular in HDU. Maybe you are a good boy, and know little about this game, so I introduce it to you now. The game can be played by two or more than two players. It consists of a chessboard（棋盘）and some chessmen（棋子）, and all chessmen are marked by a positive integer or “start” or “end”. The player starts from start-point and must jumps into end-point finally. In the course of jumping, the player will visit the chessmen in the path, but everyone must jumps from one chessman to another absolutely bigger (you can assume start-point is a minimum and end-point is a maximum.). And all players cannot go backwards. One jumping can go from a chessman to next, also can go across many chessmen, and even you can straightly get to end-point from start-point. Of course you get zero point in this situation. A player is a winner if and only if he can get a bigger score according to his jumping solution. Note that your score comes from the sum of value on the chessmen in you jumping path.Your task is to output the maximum value according to the given chessmen list.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-07-08 ~ 2016-07-10 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_07_08-2016_07_10.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： AOJ 774.石油探测 AOJ 775.迷宫问题 AOJ 776.马的走法 AOJ 777.平方个数 AOJ 778.乘积为n个1的数字游戏 AOJ 780.分解质因数 AOJ 784.平面分隔问题]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 784.平面分隔问题]]></title>
      <url>%2Fpost%2FAOJ%2F784.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|数学|记忆化搜索|题目 Description 在平面上画n条封闭的曲线，各曲线之间两两相交于两点，并且三条封闭的曲线都不相交于一点，求这样的n条曲线将平面分为多少个区域。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 780.分解质因数]]></title>
      <url>%2Fpost%2FAOJ%2F780.html</url>
      <content type="text"><![CDATA[题解|AOJ|质数|题目 Description 给出一个正整数m, 将其分解成质数相乘的形式，即 m=m1m2m3….mk. 其中mi为质数，并且满足m1&lt;=m2&lt;=m3&lt;=….&lt;=mk。若m本身就是质数，则直接输出m=m即可。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[778.乘积为n个1的数字游戏]]></title>
      <url>%2Fpost%2FAOJ%2F778.html</url>
      <content type="text"><![CDATA[题目 Description 两位计算机爱好者在进行“积为n个1的数字游戏”，其中一位给定一个正整数p(约定整数p为个位数字不是5的奇数)，另一位寻求正整数q，使得p与q之积全是1组成的整数。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 777.平方个数]]></title>
      <url>%2Fpost%2FAOJ%2F777.html</url>
      <content type="text"><![CDATA[题目 Description 对给定的整数X, 统计出小于等于X的整数中满足这样条件的正整数的个数，其平方数为一个9位数，并且其各位数字各不同。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 776.马的走法]]></title>
      <url>%2Fpost%2FAOJ%2F776.html</url>
      <content type="text"><![CDATA[题解|AOJ|DFS|题目 Description 在一个4×5的棋盘上，输入马的起始位置坐标(纵，横)位置，求马能返回初始位置的所有不同走法的总数(马走过的位置不能重复，马走“日”字)。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 775.迷宫问题]]></title>
      <url>%2Fpost%2FAOJ%2F775.html</url>
      <content type="text"><![CDATA[题解|AOJ|最短路|BFS|队列(queue)|题目 Description 由M行N列的方格构成一个迷宫，相邻方格之间可能是相通的，也可能有隔墙，各方格位置由对应坐标确定。在（1,1）处由入口，在（M,N）处有一个出口，在入口和出口之间有路相通，求从入口到出口的最短路径，若无法到达，输出“-1”]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 774.石油探测]]></title>
      <url>%2Fpost%2FAOJ%2F774.html</url>
      <content type="text"><![CDATA[题解|AOJ|DFS|题目 Description 地质探测公司负责探测地下石油资源，每次在一块矩形的区域上查找。探测人员用把这块矩形区域分成 了N X M个正方形小块，然后对每个正方形小块分别进行分析，经过分析之后，为每个小块都做了一个标记，如果一个小块地下发现有石油，则用“@”标记,否则用”.标记”。如果两个含有石油的小块是相邻的，那么它们属于同一块石油地，这里的相邻包括水平，垂直，或者对角相邻。给定一块已经标记过的矩形区域，你的任务是找出这块区域上的石油地的个数]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-07-05 ~ 2016-07-07 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_07_05-2016_07_07.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： HDU 1505.City Game HDU 2602.Bone Collector]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2602.Bone Collector]]></title>
      <url>%2Fpost%2FHDU%2F2602.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description Many years ago , in Teddy’s hometown there was a man who was called “Bone Collector”. This man like to collect varies of bones , such as dog’s , cow’s , also he went to the grave …The bone collector had a big bag with a volume of V ,and along his trip of collecting there are a lot of bones , obviously , different bone has different value and different volume, now given the each bone’s value along his trip , can you calculate out the maximum of the total value the bone collector can get]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1505.City Game]]></title>
      <url>%2Fpost%2FHDU%2F1505.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|最大矩形|题目 Description Bob is a strategy game programming specialist. In his new city building game the gaming environment is as follows: a city is built up by areas, in which there are streets, trees,factories and buildings. There is still some space in the area that is unoccupied. The strategic task of his game is to win as much rent money from these free spaces. To win rent money you must erect buildings, that can only be rectangular, as long and wide as you can. Bob is trying to find a way to build the biggest possible building in each area. But he comes across some problems – he is not allowed to destroy already existing buildings, trees, factories and streets in the area he is building in. Each area has its width and length. The area is divided into a grid of equal square units.The rent paid for each unit on which you’re building stands is 3$. Your task is to help Bob solve this problem. The whole city is divided into K areas. Each one of the areas is rectangular and has a different grid size with its own length M and width N.The existing occupied units are marked with the symbol R. The unoccupied units are marked with the symbol F.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-07-02 ~ 2016-07-04 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_07_02-2016_07_04.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： AOJ 767.统计字符数 AOJ 768.密码问题 AOJ 769.大数加法 AOJ 770.大整数乘法 AOJ 771.大整数除法 AOJ 772.完美立方 AOJ 773.数字三角形 HDU 1506.Largest Rectangle in a Histogram Codeforces 639A.Bear and Displayed Friends Codeforces 639B.Bear and Forgotten Tree 3]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 639B.Bear and Forgotten Tree 3]]></title>
      <url>%2Fpost%2FCodeforces%2F639B.html</url>
      <content type="text"><![CDATA[题解|模拟|Codeforces|题目 Description A tree is a connected undirected graph consisting of n vertices and n - 1 edges. Vertices are numbered 1 through n. Limak is a little polar bear and Radewoosh is his evil enemy. Limak once had a tree but Radewoosh stolen it. Bear is very sad now because he doesn’t remember much about the tree — he can tell you only three values n, d and h: The tree had exactly n vertices.The tree had diameter d. In other words, d was the biggest distance between two vertices.Limak also remembers that he once rooted the tree in vertex 1 and after that its height was h. In other words, h was the biggest distance between vertex 1 and some other vertex.The distance between two vertices of the tree is the number of edges on the simple path between them. Help Limak to restore his tree. Check whether there exists a tree satisfying the given conditions. Find any such tree and print its edges in any order. It’s also possible that Limak made a mistake and there is no suitable tree – in this case print “-1”.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 639A.Bear and Displayed Friends]]></title>
      <url>%2Fpost%2FCodeforces%2F639A.html</url>
      <content type="text"><![CDATA[题解|模拟|队列(queue)|Codeforces|题目 Description Limak is a little polar bear. He loves connecting with other bears via social networks. He has n friends and his relation with the i-th of them is described by a unique integer ti. The bigger this value is, the better the friendship is. No two friends have the same value ti. Spring is starting and the Winter sleep is over for bears. Limak has just woken up and logged in. All his friends still sleep and thus none of them is online. Some (maybe all) of them will appear online in the next hours, one at a time. The system displays friends who are online. On the screen there is space to display at most k friends. If there are more than k friends online then the system displays only k best of them — those with biggest ti. Your task is to handle queries of two types: “1 id” — Friend id becomes online. It’s guaranteed that he wasn’t online before.“2 id” — Check whether friend id is displayed by the system. Print “YES” or “NO” in a separate line.Are you able to help Limak and answer all queries of the second type?]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1506.Largest Rectangle in a Histogram]]></title>
      <url>%2Fpost%2FHDU%2F1506.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|题目 Description A histogram is a polygon composed of a sequence of rectangles aligned at a common base line. The rectangles have equal widths but may have different heights. For example, the figure on the left shows the histogram that consists of rectangles with the heights 2, 1, 4, 5, 1, 3, 3, measured in units where 1 is the width of the rectangles: Usually, histograms are used to represent discrete distributions, e.g., the frequencies of characters in texts. Note that the order of the rectangles, i.e., their heights, is important. Calculate the area of the largest rectangle in a histogram that is aligned at the common base line, too. The figure on the right shows the largest aligned rectangle for the depicted histogram.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[LOVELIVE! SUNSHINE 动画播出]]></title>
      <url>%2Fpost%2FWriting%2Fllssanime.html</url>
      <content type="text"><![CDATA[随笔|LOVELIVE|昨天LOVELIVE! SUNSHINE动画播出]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 768.密码问题]]></title>
      <url>%2Fpost%2FAOJ%2F768.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 Description 有一种密码的工作原理是：首先选择一个单词作为密钥， 如TRAILBLAZERS，如果单词中有重复字母，则只保留第1个，其余几个丢弃。现在修改过的那个单词列于字母表下面，如下所示：A B C D E F G H I J K L M N O P Q R S T U V W X Y ZT R A I L B Z E S然后，用字母表中没出现的字母将密钥填充完整，得到：A B C D E F G H I J K L M N O P Q R S T U V W X Y ZT R A I L B Z E S C D F G H J K M N O P Q U V W X Y对信息加密时，将原文中的所有字母，按以上对应关系一一用密钥字母取代，因此使用这个密钥就可以对原文信息 进行加密。同样，也可以使用这个密钥进行解密。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 767.统计字符数]]></title>
      <url>%2Fpost%2FAOJ%2F767.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 Description 判断一个由a-z和A-Z字符组成的字符串中哪个字符出现的次数最多]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 773.数字三角形]]></title>
      <url>%2Fpost%2FAOJ%2F773.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 Description 将a，b,c,d,e,f,这6个变量排成如图所示的三角形，这6个变量分别去[1,6]中的不同整数，且使三角形三条边上的变量之和相等。 ab fc d e]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 772.完美立方]]></title>
      <url>%2Fpost%2FAOJ%2F772.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟| Description a³ = b³ + c³ + d³为完美立方等式。例如 12³ = 6³ + 8³ + 10³。对任意给出的正整数N(N≤100),寻找所有的四元组（a, b, c, d）,使得 a³ = b³ + c³ + d³, 其中 1 &lt; a, b, c, d ≤ N。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 771.大整数除法]]></title>
      <url>%2Fpost%2FAOJ%2F771.html</url>
      <content type="text"><![CDATA[题解|AOJ|高精度算法|题目 Description 求两个大的正整数相除的商。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 770.大整数乘法]]></title>
      <url>%2Fpost%2FAOJ%2F770.html</url>
      <content type="text"><![CDATA[题解|AOJ|高精度算法|题目 Description 求两个不超过50位的非负数的积。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 769.大数加法]]></title>
      <url>%2Fpost%2FAOJ%2F769.html</url>
      <content type="text"><![CDATA[题解|AOJ|高精度算法|题目 Description 求两个不超过200 位的非负整数的和。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-06-29 ~ 2016-07-01 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_06_29-2016_07_01.html</url>
      <content type="text"><![CDATA[笔记|学习报告|题目： HDU 1864.最大报销额 HDU 1231.最大连续子序列 HDU 1003.Max Sum]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1231.最大连续子序列]]></title>
      <url>%2Fpost%2FHDU%2F1231.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|递归与分治|最大连续子序列|题目 Description 给定K个整数的序列{ N1, N2, …, NK }，其任意连续子序列可表示为{ Ni, Ni+1, …,Nj }，其中 1 &lt;= i &lt;= j &lt;= K。最大连续子序列是所有连续子序列中元素和最大的一个，例如给定序列{ -2, 11, -4, 13, -5, -2 }，其最大连续子序列为{ 11, -4, 13 }，最大和为20。在今年的数据结构考卷中，要求编写程序得到最大和，现在增加一个要求，即还需要输出该子序列的第一个和最后一个元素。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[百度站长主动推动工具]]></title>
      <url>%2Fpost%2FNote%2FBaiduPush.html</url>
      <content type="text"><![CDATA[笔记|SEO|工具|Hexo|易语言|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1864.最大报销额]]></title>
      <url>%2Fpost%2FHDU%2F1864.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|背包问题|动态内存|题目 Description 现有一笔经费可以报销一定额度的发票。允许报销的发票类型包括买图书（A类）、文具（B类）、差旅（C类），要求每张发票的总额不得超过1000元，每张发票上，单项物品的价值不得超过600元。现请你编写程序，在给出的一堆发票中找出可以报销的、不超过给定额度的最大报销额。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-06-26 ~ 2016-06-28 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_06_26-2016_06_28.html</url>
      <content type="text"><![CDATA[笔记|学习报告|DP46专题 题目： HDU 2955.Robberies Codeforces 681A.A_Good_Contest Codeforces 681B.Economy Game HDU 1846.Brave Game 算法： 博弈]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[电阻色环练习工具]]></title>
      <url>%2Fpost%2FNote%2FResistance_exercise.html</url>
      <content type="text"><![CDATA[笔记|javascript|突发奇想就像做一个电阻色环练习工具(不务正业系列) 使用HTML(Div+Css)+Javascript实现 采用Jquery的功能实现修改颜色的部分 没脸传Github ╮(╯-╰)╭ 遵守GPL协议]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[电工电子基础技能(一)]]></title>
      <url>%2Fpost%2FNote%2FEl.html</url>
      <content type="text"><![CDATA[笔记|电工电子基础技能|金工实习开始,也顺便记录下学习的内容吧~内附javascript的电阻色环练习程序]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1846.Brave Game]]></title>
      <url>%2Fpost%2FHDU%2F1846.html</url>
      <content type="text"><![CDATA[题解|博弈|巴什博奕|题目 Description 十年前读大学的时候，中国每年都要从国外引进一些电影大片，其中有一部电影就叫《勇敢者的游戏》（英文名称：Zathura），一直到现在，我依然对于电影中的部分电脑特技印象深刻。今天，大家选择上机考试，就是一种勇敢（brave）的选择；这个短学期，我们讲的是博弈（game）专题；所以，大家现在玩的也是“勇敢者的游戏”，这也是我命名这个题目的原因。当然，除了“勇敢”，我还希望看到“诚信”，无论考试成绩如何，希望看到的都是一个真实的结果，我也相信大家一定能做到的~]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[博弈]]></title>
      <url>%2Fpost%2FAlgorithm%2FGame.html</url>
      <content type="text"><![CDATA[算法|博弈|巴什博奕|威佐夫博奕|尼姆博弈|Nim Staircase博奕|巴什博奕只有一堆n个物品,两个人轮流从这堆物品中取物,规定每次至少取一个,最多取m个.最后取光者得胜.若(m+1)%n，则先手必败，否则先手必胜 显然,如果n=m+1,那么由于一次最多只能取m个,所以,无论先取者拿走多少个,后取者都能够一次拿走剩余的物品,后者取胜.因此有取胜的法则：如果n=(m+1)r+s,(r为任意自然数,s≤m),那么先取者要拿走s个物品,如果后取者拿走k(≤m)个,那么先取者再拿走m+1-k个,结果剩下(m+1)(r-1)个,以后保持这样的取法,那么先取者肯定获胜.总之,要保持给对手留下(m+1)的倍数,就能最后获胜.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[域名跳转]]></title>
      <url>%2Fpost%2FNote%2FUrlJump.html</url>
      <content type="text"><![CDATA[笔记|javascript|博客是搭建在Github和Coding上的Github的默认域名是ohyee.github.io,CNAME后会将强制跳转到绑定的域名上而Coding的默认域名是ohyee.coding.me,这个域名和绑定的域名都可以独立访问 也即：网站有两套独立的域名显然,这样会很“别扭”,搜索引擎会对两个域名分别收录一遍网站因此萌生了将ohyee.coding.me强制跳转到www.oyohyee.com的想法 由于在Git Pages和Coding Pages不能设置301重定向,因此使用javascript来实现跳转]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[VPS搭建Git服务器及git pages]]></title>
      <url>%2Fpost%2FNote%2FVPS_hexo.html</url>
      <content type="text"><![CDATA[undefined|undefined|undefined|undefined|undefined|笔记|Hexo|VPS|Linux|Git|对比了以下腾讯云和阿里云,觉得个人更喜欢腾讯云一点腾讯云每天中午12点能够在官网上抢学生优惠一个月1元钱拿到 VPS 服务器练手专用]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 681B.Economy Game]]></title>
      <url>%2Fpost%2FCodeforces%2F681B.html</url>
      <content type="text"><![CDATA[题解|动态规划|数学|Codeforces|题目 Description Kolya is developing an economy simulator game. His most favourite part of the development process is in-game testing. Once he was entertained by the testing so much, that he found out his game-coin score become equal to 0. Kolya remembers that at the beginning of the game his game-coin score was equal to n and that he have bought only some houses (for 1 234 567 game-coins each), cars (for 123 456 game-coins each) and computers (for 1 234 game-coins each). Kolya is now interested, whether he could have spent all of his initial n game-coins buying only houses, cars and computers or there is a bug in the game. Formally, is there a triple of non-negative integers a, b and c such that a × 1 234 567 + b × 123 456 + c × 1 234 = n? Please help Kolya answer this question.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Codeforces 681A.A_Good_Contest]]></title>
      <url>%2Fpost%2FCodeforces%2F681A.html</url>
      <content type="text"><![CDATA[题解|Codeforces|题目 Description Codeforces user’ handle color depends on his rating — it is red if his rating is greater or equal to 2400; it is orange if his rating is less than 2400 but greater or equal to 2200, etc. Each time participant takes part in a rated contest, his rating is changed depending on his performance. Anton wants the color of his handle to become red. He considers his performance in the rated contest to be good if he outscored some participant, whose handle was colored red before the contest and his rating has increased after it. Anton has written a program that analyses contest results and determines whether he performed good or not. Are you able to do the same?]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2955.Robberies]]></title>
      <url>%2Fpost%2FHDU%2F2955.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|背包问题|题目 Description The aspiring Roy the Robber has seen a lot of American movies, and knows that the bad guys usually gets caught in the end, often because they become too greedy. He has decided to work in the lucrative business of bank robbery only for a short while, before retiring to a comfortable job at a university. For a few months now, Roy has been assessing the security of various banks and the amount of cash they hold. He wants to make a calculated risk, and grab as much money as possible. His mother, Ola, has decided upon a tolerable probability of getting caught. She feels that he is safe enough if the banks he robs together give a probability less than this.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[2016-06-23 ~ 2016-06-25 学习报告]]></title>
      <url>%2Fpost%2FStudy%2F2016_06_23-2016_06_25.html</url>
      <content type="text"><![CDATA[笔记|学习报告|这三天主要是尽可能AC之前没有AC的题目。 京胜杯的木条染色还是没AC 题目： HDU 1003.Max Sum POJ 3349.Snowflake Snow Snowflakes]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 3349.Snowflake Snow Snowflakes]]></title>
      <url>%2Fpost%2FPOJ%2F3349.html</url>
      <content type="text"><![CDATA[题解|POJ|哈希(hash)|题目 Description You may have heard that no two snowflakes are alike. Your task is to write a program to determine whether this is really true. Your program will read information about a collection of snowflakes, and search for a pair that may be identical. Each snowflake has six arms. For each snowflake, your program will be provided with a measurement of the length of each of the six arms. Any pair of snowflakes which have the same lengths of corresponding arms should be flagged by your program as possibly identical.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1003.Max Sum]]></title>
      <url>%2Fpost%2FHDU%2F1003.html</url>
      <content type="text"><![CDATA[题解|HDU|递归与分治|最大连续子序列|题目 Description Given a sequence a[1],a[2],a[3]……a[n], your job is to calculate the max sum of a sub-sequence. For example, given (6,-1,5,4,-7), the max sum in this sequence is 6 + (-1) + 5 + 4 = 14.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[KMP算法]]></title>
      <url>%2Fpost%2FAlgorithm%2FKMP.html</url>
      <content type="text"><![CDATA[算法|KMP|有这么一个神奇的算法KMP算法是一种改进的字符串匹配算法，由D.E.Knuth，J.H.Morris和V.R.Pratt同时发现，因此人们称它为克努特——莫里斯——普拉特操作（简称KMP算法）。KMP算法的关键是利用匹配失败后的信息，尽量减少模式串与主串的匹配次数以达到快速匹配的目的。具体实现就是实现一个next()函数，函数本身包含了模式串的局部匹配信息。 百度百科KMP算法]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[算法期末考试]]></title>
      <url>%2Fpost%2FProject%2FAlgorithmFinalTest.html</url>
      <content type="text"><![CDATA[专题|动态规划|AOJ|递归与分治|算法设计及其高效实现期末考试 全部是本学期算法课学到的内容：递归与分治、动态规划 全部是原题，不过当时写完也不知道对不对~ 这么一交题目，总在意想不到的小地方有问题~]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 808.算法期末考试D(整数拆分)]]></title>
      <url>%2Fpost%2FAOJ%2F808.html</url>
      <content type="text"><![CDATA[题解|AOJ|递归与分治|题目 Description 将正整数n表示成一系列正整数之和：n=n1+n2+…+nk，其中n1≥n2≥…≥nk≥1，k≥1。正整数n的这种表示称为正整数n的划分。求正整数n的不同划分个数。例如正整数6有如下11种不同的划分：6；5+1；4+2，4+1+1；3+3，3+2+1，3+1+1+1；2+2+2，2+2+1+1，2+1+1+1+1；1+1+1+1+1+1。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 807.算法期末考试C(最大子序列和)]]></title>
      <url>%2Fpost%2FAOJ%2F807.html</url>
      <content type="text"><![CDATA[题解|AOJ|递归与分治|最大连续子序列|题目 Description 给一串整数a[1..n]，求出其和最大的子序列，即找出1&lt;=i&lt;=j&lt;=n（1&lt;=n&lt;=50000），使a[i]+a[i+1]+…+a[j]最大。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 806.算法期末考试B(动态规划)]]></title>
      <url>%2Fpost%2FAOJ%2F806.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|题目 Description 给定一个数塔，其存储形式为如下所示的下三角矩阵。在此数塔中，从顶部出发，在每一节点可以选择向下走还是向右下走，一直走到底层。请找出一条路径，使路径上的数值和最大。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 805.算法期末考试A(全排列问题)]]></title>
      <url>%2Fpost%2FAOJ%2F805.html</url>
      <content type="text"><![CDATA[题解|AOJ|递归与分治|全排列|题目 Description 设计算法生成n个元素{r1,r2,…,rn}的全排列。n&lt;=10]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[排序算法]]></title>
      <url>%2Fpost%2FAlgorithm%2FSort.html</url>
      <content type="text"><![CDATA[算法|排序|排序算法是非常基础的算法这篇文章里记录了 插入排序 直接插入排序 选择排序 简单选择排序 堆排序 交换排序 冒泡排序 快速排序 归并排序 基数排序 计数排序 STL qsort sort 其他排序算法 睡眠排序]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Sublime编译c++]]></title>
      <url>%2Fpost%2FNote%2Fsublime_Run_cpp.html</url>
      <content type="text"><![CDATA[笔记|Sublime|C++|Sublime Text 2/3 是一款非常优秀的编辑器(虽然我推VS Code) 作为一款可以自由搭配的编辑器，我们可以用它一键编译cpp文件在网络上，我们可以找到许多的配置项，来帮助我们实现我们的目的。 针对编译后会生成难看的exe文件(如果目录都是cpp多么美妙)我们有一下解决方案： 根据观察，我们可以看出编译配置文件]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[791.水果篮子]]></title>
      <url>%2Fpost%2FAOJ%2F791.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|背包问题|题目 Description 西瓜的表弟小西瓜生病住院了，西瓜想去买一个水果篮子探望他。水果店里面有很多种类的水果篮子，价格相同，但是水果的搭配各不相同。西瓜突然想到了一个问题，现在水果店里面有这么N种水果，第i个水果单价是Pi元，西瓜手上有M元钱（钱不一定要花完，但也不能什么水果都没有），一共有几种搭配水果篮子的方法呢。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HFUT 1362.恶魔a+b(安徽省2016“京胜杯”程序设计大赛 I)]]></title>
      <url>%2Fpost%2FHFUT%2F1362.html</url>
      <content type="text"><![CDATA[题解|模拟|HFUT|京胜杯|题目 Description 相信大家都做过A+B问题，这个问题简直太简单了，以至于所有的程序员都会做这个题目。有一天，萌萌哒YZK学姐写了很久很久的代码，以至于在半睡半醒状态看到了恶魔。恶魔说：愚蠢的程序员啊，不要再做无谓的挣扎了，你再怎么写代码，也改变不了这个世界终将被我统治的结局。YZK学姐顿时觉得自己被侵犯了，为了程序员的尊严，她要求与恶魔进行决斗，决斗的形式就是写代码。恶魔给出了一个非常复杂的A+B问题，对于两个长度小于1000的26进制数，它们相加的结果是什么呢？两人谁先解决这个问题谁就获胜，你能帮助YZK学姐战胜恶魔吗？]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HFUT 1360.单身晚会(安徽省2016“京胜杯”程序设计大赛 H)]]></title>
      <url>%2Fpost%2FHFUT%2F1360.html</url>
      <content type="text"><![CDATA[题解|最短路|Floyd|HFUT|题目 Description ​ZJ和ZCX在一起很久s了，两个人都互生爱意，最终决定喜结良缘，从此踏入浪漫的婚姻殿堂。但是，ZJ的好基友们想到以后ZJ就不能经常跟他们一起愉快的玩耍了，都觉得非常伤心难过，于是他们决定在最后一晚为ZJ开一场单身晚会，玩整晚紧张刺激的飞行棋。ZJ的好基友居住在城市的各个地方（每个地方不一定只有一个基友），他们需要从各个地方赶到其中一个朋友的家里来参加这最后的单身PARTY，ZJ被基友们的热情深深感动了，决定对基友们来时的路费进行报销。报销规则按照距离来计算。基友们为了帮ZJ省钱，决定在所有人走最短路径的情况下，总距离最小的人的家里开PARTY。ZJ想知道基友们走过的总距离是多少，然后他把总共需要报销的钱拿出来，就可以让基友们自己来分配了。但是他算了半天也没算出来总距离是多少，单身PARTY马上就开始了，你能帮帮他吗？]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[安徽省2016“京胜杯”程序设计大赛(ACM安徽省省赛)]]></title>
      <url>%2Fpost%2FProject%2FJingShengBei.html</url>
      <content type="text"><![CDATA[undefined|undefined|undefined|专题|京胜杯|作为旅游队，跟着去体验了下比赛环境~现场没做出来几道，有点可惜~ 题目可在&gt;合肥工业大学OJ提交&lt;]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[《魔兽》影评]]></title>
      <url>%2Fpost%2FWriting%2FWOW_Movie.html</url>
      <content type="text"><![CDATA[随笔|魔兽|影评|For the Horde!For the Azeroth! 学校一大群人组团去看魔兽，简直激动的不要不要的~之前寒假大家说6月会出魔兽电影(当时还没有出时间)，群里好多人都挺向往魔兽的宏大的，不过好多都没玩过或者好久都没玩了。于是就组了一波魔兽。相聚在了艾泽拉斯星球(格瑞姆巴托服务器) 从种族职业都分不清的小白就开始了魔兽世界的探险~]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[拓扑排序]]></title>
      <url>%2Fpost%2FAlgorithm%2FTopoSort.html</url>
      <content type="text"><![CDATA[算法|排序|拓扑排序|对一个有向无环图(Directed Acyclic Graph简称DAG)G进行拓扑排序，是将G中所有顶点排成一个线性序列，使得图中任意一对顶点u和v，若边(u,v)∈E(G)，则u在线性序列中出现在v之前。通常，这样的线性序列称为满足拓扑次序(Topological Order)的序列，简称拓扑序列。简单的说，由某个集合上的一个偏序得到该集合上的一个全序，这个操作称之为拓扑排序。 百度百科拓扑排序]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HFUT 1359.吃在工大(安徽省2016“京胜杯”程序设计大赛 F)]]></title>
      <url>%2Fpost%2FHFUT%2F1359.html</url>
      <content type="text"><![CDATA[题解|排序|拓扑排序|HFUT|京胜杯|题目 Description JH和他的好朋友YZ两名程序员回访母校合工大，准备在这住一段日子，都说“玩在安大，吃在工大”，JH又是一名典型吃货，于是决定在工大食堂好好吃一段日子，但是，面对美食诱惑：黄焖鸡、风暴干锅、麻辣香锅、奥尔良烤翅…由于时间有限，JH不知道哪顿饭吃哪个菜好。于是YZ为了帮助他解决这个问题，也顺便考考他，给他出了一个问题：“黄焖鸡必须在干锅花菜前面吃，干锅牛肉必须在干锅鱿鱼前面吃….你按这个要求下，就知道吃的顺序啦”。JH抓抓头，分分钟写了个程序搞定，现在，让你来写写看？输出一组JH符合条件下吃的食物的序列。假设JH每顿只吃一种食物，且每顿吃的都不同，食物编号1到N。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HFUT 1358.箭无虚发(安徽省2016“京胜杯”程序设计大赛 C)]]></title>
      <url>%2Fpost%2FHFUT%2F1358.html</url>
      <content type="text"><![CDATA[题解|贪心算法|HFUT|京胜杯|题目 Description JH苦练10年，终于成为了一个神箭手，在下山之前，大师兄YZ不放心，想考验他，只给他一定时间t，同时给他n支箭，最终根据他的表现，考虑他是否能下山。 对于每发一次箭，YZ给他4种成绩（优、良、中、差），JH有三种拉弓以及瞄准时间a ,b，c（a&gt;=b&gt;=c）分别能拿优，良，中等级，如果不拉弓不瞄（直接射），只能拿差（不能中靶）了。 现在JH想知道，在保证自己弹无虚发（不获得差）的情况下，最多能拿多少个优。 如果JH不能做到弹无虚发，输出Oh，my god!]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Hexo博客搭建及迁移完成]]></title>
      <url>%2Fpost%2FNote%2FHexoBuild.html</url>
      <content type="text"><![CDATA[笔记|Hexo|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[double的读入与输出]]></title>
      <url>%2Fpost%2FNote%2Fdouble.html</url>
      <content type="text"><![CDATA[笔记|读入输出|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Test]]></title>
      <url>%2Fpost%2FTest.html</url>
      <content type="text"><![CDATA[Test Hexo post]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Hello World]]></title>
      <url>%2Fpost%2Fhello_world.html</url>
      <content type="text"></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HFUT 1357.梯田AGAIN(安徽省2016“京胜杯”程序设计大赛 D)]]></title>
      <url>%2Fpost%2FHFUT%2F1357.html</url>
      <content type="text"><![CDATA[题解|记忆化搜索|HFUT|京胜杯|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HFUT 1355.阵前第一功(安徽省2016“京胜杯”程序设计大赛 B)]]></title>
      <url>%2Fpost%2FHFUT%2F1355.html</url>
      <content type="text"><![CDATA[题解|模拟|HFUT|京胜杯|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HFUT 1356.转啊转(安徽省2016“京胜杯”程序设计大赛 E)]]></title>
      <url>%2Fpost%2FHFUT%2F1356.html</url>
      <content type="text"><![CDATA[题解|数学|HFUT|京胜杯|题目 Description 在二维平面上，有一个固定的圆和一个固定的点（保证该点不在圆上），还有一个动点在圆上以角速度w绕圆心一直转。在t时刻，连接该动点与定点成一条直线k，求直线k被圆所截线段的长度（即直线k在圆内部分长度）。动点初始时刻在圆的三点钟方向（即与x轴正方向平行），并以逆时针方向绕圆转。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HFUT 1354.砝码称重(安徽省2016“京胜杯”程序设计大赛 A)]]></title>
      <url>%2Fpost%2FHFUT%2F1354.html</url>
      <content type="text"><![CDATA[题解|HFUT|京胜杯|题目 Description 小明非常喜爱物理，有一天，他对物理实验室中常用的弹簧拉力计产生了兴趣。实验室中有两种质量不同的砝码，小明分别用a个第一种砝码放在弹簧拉力计上和b个第二种砝码放在弹簧拉力计上，假设每增加单位重量的砝码，弹簧拉力计的长度增加1，那么两次称量弹簧拉力计的长度差是多少呢？（假设拉力计不发生非弹性形变）]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 331.汉诺塔]]></title>
      <url>%2Fpost%2FAOJ%2F331.html</url>
      <content type="text"><![CDATA[题解|AOJ|快速幂取模|题目 Description 大家都听说过汉诺塔吧？有n个圆盘由小到大排列，套在a柱上，每次只能移动一个圆盘，而且只能大的在下，小的在上，让你把a柱上的圆盘移到b柱，给你一个多余的c柱，问你最少移动多少次才能完成任务。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 763.过河卒]]></title>
      <url>%2Fpost%2FAOJ%2F763.html</url>
      <content type="text"><![CDATA[题解|动态规划|题目 Description 在一个n*m的矩阵上，A点有一个过河卒，需要走到目标B点。卒行走的规则：只能向下或者向右。每一步能水平或者垂直移动一个点（纵横线的交叉点）的距离。计算从A 点能够到达B点的路径的条数。设行、列数为m和n, 2&lt;=m,n&lt;=20]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 762.分数数列]]></title>
      <url>%2Fpost%2FAOJ%2F762.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|题目 Description 一个数列的前6项为：1/2，3/5，4/7，6/10，8/13，9/15等，试求数列的第n项(n&lt;2000)]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 761.Fibonacci序列]]></title>
      <url>%2Fpost%2FAOJ%2F761.html</url>
      <content type="text"><![CDATA[题解|AOJ|递推|记忆化搜索|题目 Description Fibonacci 数列的另一种形式F(0)=7, F(1)=11 F(n)=F(n-1)+F(n-2) (n&gt;=2)]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 760.尾数相等的数]]></title>
      <url>%2Fpost%2FAOJ%2F760.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 Description 从键盘输入一个自然数K(1 &lt; K &lt; 99999999)，一定存在自然数M和N（M &lt; N），使得K的M次方和K的N次方均大于或等于1000，且它们的未尾三位数相等，则称M和N是一对“K尾相等数”。请编程序，输出K尾相等数中M+N最小值。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1035.Spell checker]]></title>
      <url>%2Fpost%2FPOJ%2F1035.html</url>
      <content type="text"><![CDATA[题解|暴力|POJ|Trie树|题目 Description You, as a member of a development team for a new spell checking program, are to write a module that will check the correctness of given words using a known dictionary of all correct words in all their forms.If the word is absent in the dictionary then it can be replaced by correct words (from the dictionary) that can be obtained by one of the following operations: deleting of one letter from the word; replacing of one letter in the word with an arbitrary letter; inserting of one arbitrary letter into the word. Your task is to write the program that will find all possible replacements from the dictionary for every given word.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 2299.Ultra-QuickSort]]></title>
      <url>%2Fpost%2FPOJ%2F2299.html</url>
      <content type="text"><![CDATA[题解|POJ|逆序数|题目 Description In this problem, you have to analyze a particular sorting algorithm. The algorithm processes a sequence of n distinct integers by swapping two adjacent sequence elements until the sequence is sorted in ascending order. For the input sequence9 1 0 5 4 , Ultra-QuickSort produces the output0 1 4 5 9 . Your task is to determine how many swap operations Ultra-QuickSort needs to perform in order to sort a given input sequence.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 2503.Babelfish]]></title>
      <url>%2Fpost%2FPOJ%2F2503.html</url>
      <content type="text"><![CDATA[题解|字符串(string)|映射(map)|POJ|Trie树|题目 Description You have just moved from Waterloo to a big city. The people here speak an incomprehensible dialect of a foreign language. Fortunately, you have a dictionary to help you understand them.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1840.Eqs]]></title>
      <url>%2Fpost%2FPOJ%2F1840.html</url>
      <content type="text"><![CDATA[题解|数学|POJ|题目 Description Consider equations having the following form:a1x1 3+ a2x2 3+ a3x3 3+ a4x4 3+ a5x5 3=0The coefficients are given integers from the interval [-50,50].It is consider a solution a system (x1, x2, x3, x4, x5) that verifies the equation, xi∈[-50,50], xi != 0, any i∈{1,2,3,4,5}. Determine how many solutions satisfy the given equation.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 759.会绕圈的数]]></title>
      <url>%2Fpost%2FAOJ%2F759.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 Description 任意一个正整数，把它的每一位数字都平方后相加得到一个数；将这个数的每一位数字再平方相加；依次进行就会产生循环现象。例如：1234。1ˆ2+2ˆ2+3ˆ2+4ˆ2=1+4+9+16=303ˆ2+0ˆ2=99ˆ2=818ˆ2+1ˆ2=64+1=656ˆ2+5ˆ2=36+25=616ˆ2+1ˆ2=36+1=373ˆ2+7ˆ2=9+49=585ˆ2+8ˆ2=25+64=898ˆ2+9ˆ2=64+81=1451ˆ2+4ˆ2+5ˆ2=1+16+25=424ˆ2+2ˆ2=16+4=202ˆ2+0ˆ2=4+0=44ˆ2=161ˆ2+6ˆ2=1+36=37由于前面已出现过37，这时就产生了循环。设计一个程序，对给定的一个数，打印出到出现循环为止的所有数。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 758.大数的位数]]></title>
      <url>%2Fpost%2FAOJ%2F758.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|题目 Description 给出一个整数，确定这个数的阶乘的位数。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 757.路边的树]]></title>
      <url>%2Fpost%2FAOJ%2F757.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 Description 长度为L的路边有一排树，相邻树间隔为1米，树种在整数点，0，1，2，….，L.现在马路上有一些区域修地铁，区域用起点和终止点表示。已知有M个区域要修地铁，区间之间可能重合的部分。现要把这些区域（包括端点处的两棵数）移走，计算些树移走后，马路上还有多少棵树。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 756.电梯]]></title>
      <url>%2Fpost%2FAOJ%2F756.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[并查集]]></title>
      <url>%2Fpost%2FAlgorithm%2FUnion_Find.html</url>
      <content type="text"><![CDATA[算法|并查集|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1611.The Suspects]]></title>
      <url>%2Fpost%2FPOJ%2F1611.html</url>
      <content type="text"><![CDATA[题解|并查集|POJ|题目 Description 严重急性呼吸系统综合症( SARS), 一种原因不明的非典型性肺炎,从2003年3月中旬开始被认为是全球威胁。为了减少传播给别人的机会, 最好的策略是隔离可能的患者。在Not-Spreading-Your-Sickness大学( NSYSU), 有许多学生团体。同一组的学生经常彼此相通,一个学生可以同时加入几个小组。为了防止非典的传播,NSYSU收集了所有学生团体的成员名单。他们的标准操作程序(SOP)如下：一旦一组中有一个可能的患者, 组内的所有成员就都是可能的患者。然而,他们发现当一个学生被确认为可能的患者后不容易识别所有可能的患者。你的工作是编写一个程序, 发现所有可能的患者。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 2388.Who's in the Middle]]></title>
      <url>%2Fpost%2FPOJ%2F2388.html</url>
      <content type="text"><![CDATA[题解|POJ|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1936.All in All]]></title>
      <url>%2Fpost%2FPOJ%2F1936.html</url>
      <content type="text"><![CDATA[题解|POJ|题目 Description You have devised a new encryption technique which encodes a message by inserting between its characters randomly generated strings in a clever way. Because of pending patent issues we will not discuss in detail how the strings are generated and inserted into the original message. To validate your method, however, it is necessary to write a program that checks if the message is really encoded in the final string. Given two strings s and t, you have to decide whether s is a subsequence of t, i.e. if you can remove characters from t such that the concatenation of the remaining characters is s.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[最长公共子序列]]></title>
      <url>%2Fpost%2FAlgorithm%2FLCS.html</url>
      <content type="text"><![CDATA[算法|动态规划|最长公共子序列|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[动态规划专题]]></title>
      <url>%2Fpost%2FProject%2FDP.html</url>
      <content type="text"><![CDATA[专题|动态规划|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 3176.Cow Bowling]]></title>
      <url>%2Fpost%2FPOJ%2F3176.html</url>
      <content type="text"><![CDATA[题解|动态规划|贪心算法|POJ|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 2533.Longest Ordered Subsequence]]></title>
      <url>%2Fpost%2FPOJ%2F2533.html</url>
      <content type="text"><![CDATA[题解|动态规划|最长上升子序列|POJ|题目 Description A numeric sequence of ai is ordered if a1 &lt; a2 &lt; … &lt; aN. Let the subsequence of the given numeric sequence ( a1, a2, …, aN) be any sequence ( ai1, ai2, …, aiK), where 1 &lt;= i1 &lt; i2 &lt; … &lt; iK &lt;= N. For example, sequence (1, 7, 3, 5, 9, 4, 8) has ordered subsequences, e. g., (1, 7), (3, 4, 8) and many others. All longest ordered subsequences are of length 4, e. g., (1, 3, 5, 8). Your program, when given the numeric sequence, must find the length of its longest ordered subsequence.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1260.Pearls]]></title>
      <url>%2Fpost%2FPOJ%2F1260.html</url>
      <content type="text"><![CDATA[题解|动态规划|贪心算法|POJ|题目 Description In Pearlania everybody is fond of pearls. One company, called The Royal Pearl, produces a lot of jewelry with pearls in it. The Royal Pearl has its name because it delivers to the royal family of Pearlania. But it also produces bracelets and necklaces for ordinary people. Of course the quality of the pearls for these people is much lower then the quality of pearls for the royal family.In Pearlania pearls are separated into 100 different quality classes. A quality class is identified by the price for one single pearl in that quality class. This price is unique for that quality class and the price is always higher then the price for a pearl in a lower quality class.Every month the stock manager of The Royal Pearl prepares a list with the number of pearls needed in each quality class. The pearls are bought on the local pearl market. Each quality class has its own price per pearl, but for every complete deal in a certain quality class one has to pay an extra amount of money equal to ten pearls in that class. This is to prevent tourists from buying just one pearl.Also The Royal Pearl is suffering from the slow-down of the global economy. Therefore the company needs to be more efficient. The CFO (chief financial officer) has discovered that he can sometimes save money by buying pearls in a higher quality class than is actually needed.No customer will blame The Royal Pearl for putting better pearls in the bracelets, as long as theprices remain the same.For example 5 pearls are needed in the 10 Euro category and 100 pearls are needed in the 20 Euro category. That will normally cost: (5+10)10+(100+10)20 = 2350 Euro.Buying all 105 pearls in the 20 Euro category only costs: (5+100+10)*20 = 2300 Euro.The problem is that it requires a lot of computing work before the CFO knows how many pearls can best be bought in a higher quality class. You are asked to help The Royal Pearl with a computer program. Given a list with the number of pearls and the price per pearl in different quality classes, give the lowest possible price needed to buy everything on the list. Pearls can be bought in the requested,or in a higher quality class, but not in a lower one.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1836.Alignment]]></title>
      <url>%2Fpost%2FPOJ%2F1836.html</url>
      <content type="text"><![CDATA[题解|动态规划|最长上升子序列|POJ|题目 DescriptionIn the army, a platoon is composed by n soldiers. During the morning inspection, the soldiers are aligned in a straight line in front of the captain. The captain is not satisfied with the way his soldiers are aligned; it is true that the soldiers are aligned in order by their code number: 1 , 2 , 3 , . . . , n , but they are not aligned by their height. The captain asks some soldiers to get out of the line, as the soldiers that remain in the line, without changing their places, but getting closer, to form a new line, where each soldier can see by looking lengthwise the line at least one of the line’s extremity (left or right). A soldier see an extremity if there isn’t any soldiers with a higher or equal height than his height between him and that extremity.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[最长上升子序列]]></title>
      <url>%2Fpost%2FAlgorithm%2FLIS.html</url>
      <content type="text"><![CDATA[算法|动态规划|最长上升子序列|二分|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[背包问题]]></title>
      <url>%2Fpost%2FAlgorithm%2FPackage_Problem.html</url>
      <content type="text"><![CDATA[算法|动态规划|背包问题|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1276.Cash Machine]]></title>
      <url>%2Fpost%2FPOJ%2F1276.html</url>
      <content type="text"><![CDATA[题解|动态规划|背包问题|POJ|题目 Description A Bank plans to install a machine for cash withdrawal. The machine is able to deliver appropriate @ bills for a requested cash amount. The machine uses exactly N distinct bill denominations, say Dk, k=1,N, and for each denomination Dk the machine has a supply of nk bills. For example, N=3, n1=10, D1=100, n2=4, D2=50, n3=5, D3=10 means the machine has a supply of 10 bills of @100 each, 4 bills of @50 each, and 5 bills of @10 each. Call cash the requested amount of cash the machine should deliver and write a program that computes the maximum amount of cash less than or equal to cash that can be effectively delivered according to the available bill supply of the machine. Notes:@ is the symbol of the currency delivered by the machine. For instance, @ may stand for dollar, euro, pound etc.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1837.Balance]]></title>
      <url>%2Fpost%2FPOJ%2F1837.html</url>
      <content type="text"><![CDATA[题解|动态规划|POJ|题目 Description Gigel has a strange “balance” and he wants to poise it. Actually, the device is different from any other ordinary balance. It orders two arms of negligible weight and each arm’s length is 15. Some hooks are attached to these arms and Gigel wants to hang up some weights from his collection of G weights (1 &lt;= G &lt;= 20) knowing that these weights have distinct values in the range 1..25. Gigel may droop any weight of any hook but he is forced to use all the weights. Finally, Gigel managed to balance the device using the experience he gained at the National Olympiad in Informatics. Now he would like to know in how many ways the device can be balanced. Knowing the repartition of the hooks and the set of the weights write a program that calculates the number of possibilities to balance the device. It is guaranteed that will exist at least one solution for each test case at the evaluation.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[BFS专题]]></title>
      <url>%2Fpost%2FProject%2FBFS.html</url>
      <content type="text"><![CDATA[专题|BFS|BFS(宽度优先遍历 或 广度优先遍历)是一种从起点开始，逐层向外拓展的算法。 采用队列或优先队列来保证逐层的特性。 当第一次访问到终点时，即得到最短路径 &gt;简单的BFS算法&lt; &gt;更多的BFS题解&lt;]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1195.Open the Lock]]></title>
      <url>%2Fpost%2FHDU%2F1195.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Description Now an emergent task for you is to open a password lock. The password is consisted of four digits. Each digit is numbered from 1 to 9.Each time, you can add or minus 1 to any digit. When add 1 to ‘9’, the digit will change to be ‘1’ and when minus 1 to ‘1’, the digit will change to be ‘9’. You can also exchange the digit with its neighbor. Each action will take one step. Now your task is to use minimal steps to open the lock. Note: The leftmost digit is not the neighbor of the rightmost digit.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2612.Find a way]]></title>
      <url>%2Fpost%2FHDU%2F2612.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Description Pass a year learning in Hangzhou, yifenfei arrival hometown Ningbo at finally. Leave Ningbo one year, yifenfei have many people to meet. Especially a good friend Merceki.Yifenfei’s home is at the countryside, but Merceki’s home is in the center of city. So yifenfei made arrangements with Merceki to meet at a KFC. There are many KFC in Ningbo, they want to choose one that let the total time to it be most smallest.Now give you a Ningbo map, Both yifenfei and Merceki can move up, down ,left, right to the adjacent road by cost 11 minutes.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1240.Asteroids!]]></title>
      <url>%2Fpost%2FHDU%2F1240.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Description You’re in space.You want to get home.There are asteroids.You don’t want to hit them.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1429.胜利大逃亡(续)]]></title>
      <url>%2Fpost%2FHDU%2F1429.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Description Ignatius再次被魔王抓走了(搞不懂他咋这么讨魔王喜欢)…… 这次魔王汲取了上次的教训，把Ignatius关在一个n*m的地牢里，并在地牢的某些地方安装了带锁的门，钥匙藏在地牢另外的某些地方。刚开始Ignatius被关在(sx,sy)的位置，离开地牢的门在(ex,ey)的位置。Ignatius每分钟只能从一个坐标走到相邻四个坐标中的其中一个。魔王每t分钟回地牢视察一次，若发现Ignatius不在原位置便把他拎回去。经过若干次的尝试,Ignatius已画出整个地牢的地图。现在请你帮他计算能否再次成功逃亡。只要在魔王下次视察之前走到出口就算离开地牢，如果魔王回来的时候刚好走到出口或还未到出口都算逃亡失败。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1253.胜利大逃亡]]></title>
      <url>%2Fpost%2FHDU%2F1253.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Problem Description Ignatius被魔王抓走了,有一天魔王出差去了,这可是Ignatius逃亡的好机会. 魔王住在一个城堡里,城堡是一个ABC的立方体,可以被表示成A个B*C的矩阵,刚开始Ignatius被关在(0,0,0)的位置,离开城堡的门在(A-1,B-1,C-1)的位置,现在知道魔王将在T分钟后回到城堡,Ignatius每分钟能从一个坐标走到相邻的六个坐标中的其中一个.现在给你城堡的地图,请你计算出Ignatius能否在魔王回来前离开城堡(只要走到出口就算离开城堡,如果走到出口的时候魔王刚好回来也算逃亡成功),如果可以请输出需要多少分钟才能离开,如果不能则输出-1.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2102.A计划]]></title>
      <url>%2Fpost%2FHDU%2F2102.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Description 可怜的公主在一次次被魔王掳走一次次被骑士们救回来之后，而今，不幸的她再一次面临生命的考验。魔王已经发出消息说将在T时刻吃掉公主，因为他听信谣言说吃公主的肉也能长生不老。年迈的国王正是心急如焚，告招天下勇士来拯救公主。不过公主早已习以为常，她深信智勇的骑士LJ肯定能将她救出。现据密探所报，公主被关在一个两层的迷宫里，迷宫的入口是S（0，0，0），公主的位置用P表示，时空传输机用#表示，墙用*表示，平地用.表示。骑士们一进入时空传输机就会被转到另一层的相对位置，但如果被转到的位置是墙的话，那骑士们就会被撞死。骑士们在一层中只能前后左右移动，每移动一格花1时刻。层间的移动只能通过时空传输机，且不需要任何时间。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2579.Dating with girls(2)]]></title>
      <url>%2Fpost%2FHDU%2F2579.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1782.逃离迷宫]]></title>
      <url>%2Fpost%2FHDU%2F1782.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Description 给定一个m × n (m行, n列)的迷宫，迷宫中有两个位置，gloria想从迷宫的一个位置走到另外一个位置，当然迷宫中有些地方是空地，gloria可以穿越，有些地方是障碍，她必须绕行，从迷宫的一个位置，只能走到与它相邻的4个位置中,当然在行走过程中，gloria不能走到迷宫外面去。令人头痛的是，gloria是个没什么方向感的人，因此，她在行走过程中，不能转太多弯了，否则她会晕倒的。我们假定给定的两个位置都是空地，初始时，gloria所面向的方向未定，她可以选择4个方向的任何一个出发，而不算成一次转弯。gloria能从一个位置走到另外一个位置吗？]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1242.Rescue]]></title>
      <url>%2Fpost%2FHDU%2F1242.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Description Angel was caught by the MOLIGPY! He was put in prison by Moligpy. The prison is described as a N * M (N, M &lt;= 200) matrix. There are WALLs, ROADs, and GUARDs in the prison. Angel’s friends want to save Angel. Their task is: approach Angel. We assume that “approach Angel” is to get to the position where Angel stays. When there’s a guard in the grid, we must kill him (or her?) to move into the grid. We assume that we moving up, down, right, left takes us 1 unit time, &gt; and killing a guard takes 1 unit time, too. And we are strong enough to kill all the guards. You have to calculate the minimal time to approach Angel. (We can move only UP, DOWN, LEFT and RIGHT, to the neighbor grid within bound, of course.)]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1026.Ignatius and the Princess I]]></title>
      <url>%2Fpost%2FHDU%2F1026.html</url>
      <content type="text"><![CDATA[题解|HDU|Dijkstra|最短路|图论|BFS|队列(queue)|题目 DescriptionThe Princess has been abducted by the BEelzebub feng5166, our hero Ignatius has to rescue our pretty Princess. Now he gets into feng5166’s castle. The castle is a large labyrinth. To make the problem simply, we assume the labyrinth is a N*M two-dimensional array which left-top corner is (0,0) and &gt; &gt; right-bottom corner is (N-1,M-1). Ignatius enters at (0,0), and the door to feng5166’s room is at (N-1,M-1), that is our target. There are some monsters in the castle, if Ignatius meet them, he has to kill them. Here is some rules: 1.Ignatius can only move in four directions(up, down, left, right), one step per second. A step is defined as follow: if current position is (x,y), after a step, Ignatius can only stand on (x-1,y), (x+1,y), (x,y-1) or (x,y+1).2.The array is marked with some characters and numbers. We define them like this:. : The place where Ignatius can walk on.X : The place is a trap, Ignatius should not walk on it.n : Here is a monster with n HP(1&lt;=n&lt;=9), if Ignatius walk on it, it takes him n seconds to kill the monster. Your task is to give out the path which costs minimum seconds for Ignatius to reach target position. You may assume that the start position and the target position will never be a trap, and there will never be a monster at the start position.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1180.诡异的楼梯]]></title>
      <url>%2Fpost%2FHDU%2F1180.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Problem Description Hogwarts正式开学以后,Harry发现在Hogwarts里,某些楼梯并不是静止不动的，相反,他们每隔一分钟就变动一次方向.比如下面的例子里,一开始楼梯在竖直方向,一分钟以后它移动到了水平方向,再过一分钟它又回到了竖直方向.Harry发现对他来说很难找到能使得他最快到达目的地的路线,这时Ron(Harry最好的朋友)告诉Harry正好有一个魔法道具可以帮助他寻找这样的路线,而那个魔法道具上的咒语,正是由你纂写的.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1175.连连看]]></title>
      <url>%2Fpost%2FHDU%2F1175.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Description 有一种新的游戏，游戏规则如下：在棋盘中，存在一些棋子。如果某两个棋子，可以通过一条线连起来（这条线不能经过其它棋子），而且线的转折次数不超过两次，那么这两个棋子就可以在棋盘上消去。注意：连线不能从外面绕过去的。给出当前棋盘的情况，试判断某些棋子能不能消去。现在你的任务就是写这个后台程序。呵呵，这个跟“连连看”很像。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5650.so easy]]></title>
      <url>%2Fpost%2FHDU%2F5650.html</url>
      <content type="text"><![CDATA[题解|HDU|位运算| 题目Description Given an array withnnintegers, assume f(S)f(S) as the result of executing xor operation among all the elements of set SS. e.g. if S={1,2,3}S={1,2,3} then f(S)=0f(S)=0. your task is: calculate xor of all f(s)f(s), here s⊆Ss⊆S.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5642.King's Order]]></title>
      <url>%2Fpost%2FHDU%2F5642.html</url>
      <content type="text"><![CDATA[题解|动态规划|HDU|记忆化搜索|题目 DescriptionAfter the king’s speech , everyone is encouraged. But the war is not over. The king needs to give orders from time to time. But sometimes he can not speak things well. So in his order there are some ones like this: “Let the group-p-p three come to me”. As you can see letter ‘p’ repeats for 3 times. &gt; &gt; Poor king! Now , it is war time , because of the spies from enemies , sometimes it is pretty hard for the general to tell which orders come from the king. But fortunately the general know how the king speaks: the king never repeats a letter for more than 3 times continually .And only this kind of order is &gt; &gt; legal. For example , the order: “Let the group-p-p-p three come to me” can never come from the king. While the order:” Let the group-p three come to me” is a legal statement. The general wants to know how many legal orders that has the length of n To make it simple , only lower case English Letters can appear in king’s order , and please output the answer modulo 10000000071000000007 We regard two strings are the same if and only if each charactor is the same place of these two strings are the same.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[POJ 1306.Combinations]]></title>
      <url>%2Fpost%2FPOJ%2F1306.html</url>
      <content type="text"><![CDATA[题解|辗转相除法|高精度算法|POJ|题目 Description Computing the exact number of ways that N things can be taken M at a time can be a great challenge when N and/or M become very large. Challenges are the stuff of contests. Therefore, you are to make just such a computation given the following:GIVEN: 5 &lt;= N &lt;= 100; 5 &lt;= M &lt;= 100; M &lt;= NCompute the EXACT value of: C = N! / (N-M)!M!You may assume that the final value of C will fit in a 32-bit Pascal LongInt or a C long. For the record, the exact value of 100! is:93,326,215,443,944,152,681,699,238,856,266,700,490,715,968,264,381,621, 468,592,963,895,217,599,993,229,915,608,941,463,976,156,518,286,253, 697,920,827,223,758,251,185,210,916,864,000,000,000,000,000,000,000,000]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 5640.King's Cake]]></title>
      <url>%2Fpost%2FHDU%2F5640.html</url>
      <content type="text"><![CDATA[题解|HDU|BFS|题目 Description It is the king’s birthday before the military parade . The ministers prepared a rectangle cake of size n \times m(1\le n, m \le 10000)2×22×2]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1072.Nightmare]]></title>
      <url>%2Fpost%2FHDU%2F1072.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Description Ignatius had a nightmare last night. He found himself in a labyrinth with a time bomb on him. The labyrinth has an exit, Ignatius should get out of the labyrinth before the bomb explodes. The initial exploding time of the bomb is set to 6 minutes. To prevent the bomb from exploding by shake, Ignatius had to move slowly, that is to move from one area to the nearest area(that is, if Ignatius stands on (x,y) now, he could only on (x+1,y), (x-1,y), (x,y+1), or (x,y-1) in the next minute) takes him 1 minute. Some area in the labyrinth contains a Bomb-Reset-Equipment. They could reset the &gt; &gt; exploding time to 6 minutes. Given the layout of the labyrinth and Ignatius’ start position, please tell Ignatius whether he could get out of the labyrinth, if he could, output the minimum time that he has to use to find the exit of the labyrinth, else output -1. Here are some rules: We can assume the labyrinth is a 2 array. Each minute, Ignatius could only get to one of the nearest area, and he should not walk out of the border, of course he could not walk on a wall, too. If Ignatius get to the exit when the exploding time turns to 0, he can’t get out of the labyrinth. If Ignatius get to the area which contains Bomb-Rest-Equipment when the exploding time turns to 0, he can’t use the equipment to reset the bomb. A Bomb-Reset-Equipment can be used as many times as you wish, if it is needed, Ignatius can get to any areas in the labyrinth as many times as you wish. The time to reset the exploding time can be ignore, in other words, if Ignatius get to an area which contain Bomb-Rest-Equipment, and the exploding time is larger than 0, the exploding time would be reset to 6.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 2717.Catch That Cow]]></title>
      <url>%2Fpost%2FHDU%2F2717.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 DescriptionFarmer John has been informed of the location of a fugitive cow and wants to catch her immediately. He starts at a point N (0 ≤ N ≤ 100,000) on a number line and the cow is at a point K (0 ≤ K ≤ 100,000) on the same number line. Farmer John has two modes of transportation: walking and &gt; teleporting. Walking: FJ can move from any point X to the points X - 1 or X + 1 in a single minute Teleporting: FJ can move from any point X to the point 2 × X in a single minute. If the cow, unaware of its pursuit, does not move at all, how long does it take for Farmer John to retrieve it?]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1372.Knight Moves]]></title>
      <url>%2Fpost%2FHDU%2F1372.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Description A friend of you is doing research on the Traveling Knight Problem (TKP) where you are to find the shortest closed tour of knight moves that visits each square of a given set of n squares on a chessboard exactly once. He thinks that the most difficult part of the problem is determining the smallest &gt; &gt; number of knight moves between two given squares and that, once you have accomplished this, finding the tour would be easy.Of course you know that it is vice versa. So you offer him to write a program that solves the “difficult” part. Your job is to write a program that takes two squares a and b as input and then determines the number of knight moves on a shortest route from a to b.]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[HDU 1548.A strange lift]]></title>
      <url>%2Fpost%2FHDU%2F1548.html</url>
      <content type="text"><![CDATA[题解|HDU|最短路|图论|BFS|队列(queue)|题目 Description There is a strange lift.The lift can stop can at every floor as you want, and there is a number Ki(0 &lt;= Ki &lt;= N) on every floor.The lift have just two buttons: up and down.When you at floor i,if you press the button “UP” , you will go up Ki floor,i.e,you will go to the i+Ki th floor,as the same, if you press the button “DOWN” , you will go down Ki floor,i.e,you will go to the i-Ki th floor. Of course, the lift can’t go up high than N,and can’t go down lower than 1. For example, there is a buliding with 5 floors, and k1 = 3, k2 = 3,k3 = 1,k4 = 2, k5 = 5.Begining from the 1 st floor,you can &gt; &gt; press the button “UP”, and you’ll go up to the 4 th floor,and if you press the button “DOWN”, the lift can’t do it, because it can’t go down to the -2 th floor,as you know ,the -2 th floor isn’t exist.Here comes the problem: when you are on floor A,and you want to go to floor B,how many times at least he has to press the button “UP” or “DOWN”?]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 802.运输宝物]]></title>
      <url>%2Fpost%2FAOJ%2F802.html</url>
      <content type="text"><![CDATA[题解|AOJ|贪心算法|模拟|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 53Submission Accepted: 22 Description 众所周知，“西瓜”是大名鼎鼎的江洋大盗。有一次他偷到了一批宝库。这批宝物共有n个，他一共有k个箱子。他只能用这些箱子把这些宝物运出去，为了保证运输安全，他不会把两个以上的宝物装入同一个箱子（一个箱子只能装1个或者2个宝物）。这些宝物的大小分别是s(1)、s(2)、s(3)……s(n)。（题目给出的重量保证是非降序，即s(i-1)&lt;=s(i) 对于任何i&gt;1)。装进宝物后，每个箱子的容量要大于或者等于所装的宝物大小之和。为了规格统一，这些箱子每个的容量要一致。为了降低运费，箱子的容量要尽可能小。“西瓜”想要知道，在能运走的情况下，箱子容量最小是多少。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 794.西瓜理发记(二)]]></title>
      <url>%2Fpost%2FAOJ%2F794.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 151Submission Accepted: 28 Description 剃完光头后，西瓜表示非常开心，于是直接骑上自行车去往勺林寺。等骑到勺林寺的时候，头发已经都长出来了，于是西瓜决定在附近的理发店再剃一次。然而这里的理发店老板WzyJerry表示正在做ACM练习，没空给他理发。西瓜决定帮助老板AK。题目是这样的：你现在有一个培养盒，盒中没有细菌每天早上，你可以向盒中放入一个细菌每天晚上，一个细菌会分裂成两个。求如果你想在将来的某天使盒中恰好有n个细菌，你最少要向盒中放入几个细菌]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 793.西瓜理发记(一)]]></title>
      <url>%2Fpost%2FAOJ%2F793.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 100Submission Accepted: 42 Description 某天，西瓜决心皈依勺林寺，于是来到安大门口的理发店，准备剃一个光头。然而理发店有很多人排队，西瓜想知道他大概还需要排队排多久。假设一位男生需要8分钟，一位女生需要12分钟。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 789.买酒]]></title>
      <url>%2Fpost%2FAOJ%2F789.html</url>
      <content type="text"><![CDATA[题解|AOJ|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 43Submission Accepted: 6 Description 众所周知，西瓜是一个很爱喝酒的人。有一天西瓜和朋友去酒楼喝酒，却发现酒楼在大酬宾，活动规则如下。 全场只要买酒可以买二送一，买2瓶酒就可以送一瓶酒，买4瓶酒就送两瓶酒。 4个空瓶可以换一瓶酒。 10个酒瓶盖可以换一瓶酒。 拿瓶子和盖子换酒可以享受换二送一的优惠（比如8个空瓶可以换两瓶酒，然后再送一瓶；12个空瓶+10个盖子可以换4瓶酒，再送两瓶），并且换来的酒产生的的瓶盖和空瓶依旧可以继续拿给酒楼换酒。现在西瓜和朋友们的钱一共有N元, 酒一瓶M元，请问他们最多可以喝多少瓶酒。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 788.数方块]]></title>
      <url>%2Fpost%2FAOJ%2F788.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 116Submission Accepted: 38 Description 西瓜在寒假里辅导身为小学生的小西瓜寒假作业，里面有这样一道题目：数一数下图中有几个正方形，小巫女认为只有16个，可是老师说错了。 对于西瓜来说，这样的问题自然很容易解决，但是现在西瓜想知道，如果现在有一个n*m个小正方形组成的长方形，请问里面一共有几个正方形呢？]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[网络流]]></title>
      <url>%2Fpost%2FAlgorithm%2FNetwork_Flow.html</url>
      <content type="text"><![CDATA[算法|网络流|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[最小生成树]]></title>
      <url>%2Fpost%2FAlgorithm%2FMST.html</url>
      <content type="text"><![CDATA[算法|树|最小生成树|Kruskal|Prim|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[初窥Dijkstra算法、Bellman-Ford、SPFA算法、Floyd算法、迭代加深搜索、A*、IDA*]]></title>
      <url>%2Fpost%2FAlgorithm%2FShortest_Path.html</url>
      <content type="text"><![CDATA[算法|Dijkstra|最短路|图论|BFS|DFS|A*|IDA*|Bellman-Ford|SPFA|Floyd|迭代加深|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[(转)巧妙运用C语言位运算+位运算笔记]]></title>
      <url>%2Fpost%2FNote%2Fbit.html</url>
      <content type="text"><![CDATA[笔记|位运算|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 716.谢尔宾斯基三角形]]></title>
      <url>%2Fpost%2FAOJ%2F716.html</url>
      <content type="text"><![CDATA[题解|AOJ|递推|题目 Time Limit: 3000 msCase Time Limit: 3000 msMemory Limit: 128 MBTotal Submission: 116Submission Accepted: 35 Description 谢尔宾斯基三角形（Sierpinski triangle）是一种分形，由波兰数学家谢尔宾斯基在1915年提出。下面的图片就是谢尔宾斯基三角形的一个简单例子。现在，Roll想在自己的电脑中画出这个图形，他要求不高，只要实现一个控制台版本就好，也不需要行首的空格缩进，下面是一个25行的控制台版本的谢尔宾斯基三角形例子。（具体的字符可以参考样例输出) 你能帮他实现么]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 803.魔方]]></title>
      <url>%2Fpost%2FAOJ%2F803.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|题目 Time Limit: 5000 msCase Time Limit: 5000 msMemory Limit: 64 MBTotal Submission: 181Submission Accepted: 71 Description 西瓜很喜欢玩魔方，现在西瓜想知道，一个N阶魔方在表面一共有多少个立方体能被看见？]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 796.数三角形]]></title>
      <url>%2Fpost%2FAOJ%2F796.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|题目 Time Limit: 5000 msCase Time Limit: 5000 msMemory Limit: 128 MBTotal Submission: 112Submission Accepted: 40 Description ACMer最讨厌大段大段的题目描述了，尤其当题目描述是英文的时候。还好，1243France为大家准备了一道简洁且简单的问题。给出平面上n个点的坐标，求这n个点总共可以围成多少个面积大于0的三角形。保证每个点的横纵坐标均为整数且绝对值小于等于100。保证给出点当中没有重点]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 800.热身之开关灯]]></title>
      <url>%2Fpost%2FAOJ%2F800.html</url>
      <content type="text"><![CDATA[题解|AOJ|打表|模拟|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 224Submission Accepted: 86 Description 吃完草莓以后，机房的小伙伴们要开始做些运动。在ACM实验室里有N盏灯编号为1到N，起初都是开着的，从第一盏灯开始，凡是编号是一的倍数的灯的开关都要被按一遍（亮的变成暗的，暗的变成亮的），然后到第二盏灯，凡是编号是二的倍数的灯的开关都要被按一遍，一直到第N盏灯，凡是编号是N的倍数的灯都要被按一遍。那么问题来了，在灯质量比较好的情况下，最后还有多少盏灯是亮着的。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 801.热身之蘸酱吃]]></title>
      <url>%2Fpost%2FAOJ%2F801.html</url>
      <content type="text"><![CDATA[题解|AOJ|模拟|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 108Submission Accepted: 50 Description 在ACM实验室里有n个草莓，编号依次为1到n，重量依次为w[1]，w[2],…,w[n]。由于某人比较喜欢蘸西瓜酱吃，在接下来的时间内，我会选择m个区间[l,r]并且随机选择一个数字k，使得标号在[l,r]区间内的每个草莓（包括端点）上面都加蘸了k重量的酱。这时候会突然出现T个区间[L,R]，对于每个区间，我们需要计算标号属于这个区间的草莓的重量和（包括上面的西瓜酱的重量，区间也包括端点）并输出。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 799.热身之回家养猪]]></title>
      <url>%2Fpost%2FAOJ%2F799.html</url>
      <content type="text"><![CDATA[题解|AOJ|并查集|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 203Submission Accepted: 14 Description 快毕业了，同学们开始为自己的未来做打算。某人打算回家养猪。由于养猪还得去卖，所以交通是个问题，现在有n个村庄，村庄的编号是1到n，有m条路。若想使得所有的村庄连通，至少还需要修多少条路？]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 606.LOL系列之德玛短路]]></title>
      <url>%2Fpost%2FAOJ%2F606.html</url>
      <content type="text"><![CDATA[题解|AOJ|质数|打表|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 215Submission Accepted: 79 Description 德玛的经典台词：人在塔在。由于最近LOL增加了草丛数量（草丛伦怎能不开心？！）由于太过于兴奋，盖伦突然变成白痴了- -，连最经典的台词都变为：人在塔亡（变身剑圣？）德玛现在的症状是：如果该单词在句子中的序号为素数的话，他就会把这个单词反过来说（abcd -&gt; dcba），为了治疗盖伦，你得和盖伦交流，寻求找到治疗他的方法。德玛说话完全变反了现在你的任务是将盖伦的话翻译回他本来的意思，比如德玛说:i evil dna tower tsixe其实他的本意是i live and tower exist（因为2,3,5是素数，所以这些位置上的单词反过来了）注意：1不是素数，而且可能会有许多多余的空格！]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 708.序列匹配]]></title>
      <url>%2Fpost%2FAOJ%2F708.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|题目 Time Limit: 5000 msMemory Limit: 128 MBTotal Submission: 146Submission Accepted: 34 Description 给定两个长度均为3的数字序列，每位上为一个范围是1-N的正整数，求有多少个仍然由3个1-N的整数构成的数字序列能与给定的两个序列中的任意一个匹配。如果两个序列匹配，当且仅当两个序列中的每个对应数字的最近距离不超过2。比如当N为9时，每一位数字可能是1,2,3,4,5,6,7,8,9，并且数字是循环的。也就是说9和1是相邻的。数字之间的距离就是两个数字的位置之差。也就是说在上面的例子中，9和1的最近距离是1,9和2的最近距离是2,2和5的最近距离是3。比如现在给定两个序列组合为(1,2,3)和(4,5,6), (2,4,8)或者(1, N, 5) 是能和两个序列匹配中的至少一个匹配的，但是(1, 5, 6)是不能和给定的两个序列中的任何一个匹配的。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 589.多米诺]]></title>
      <url>%2Fpost%2FAOJ%2F589.html</url>
      <content type="text"><![CDATA[题解|AOJ|贪心算法|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 34Submission Accepted: 12 Description 有一个n*m的网格，用一些2*1的多米诺去填充。有以下规则：1、每一个多米诺必须完整覆盖两个格子2、多米诺之间不能重叠3、多米诺不能超过网格边界4、摆放多米诺时可以旋转，但是不能斜着摆放问最多可以用多少个多米诺去覆盖网格。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 335.三角形]]></title>
      <url>%2Fpost%2FAOJ%2F335.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|题目 Time Limit: 1000 ms Case Time Limit: 1000 ms Memory Limit: 64 MBTotal Submission: 41 Submission Accepted: 26 Description 一个名为PC的安大学生希望写一个程序来计算三角形的三条边长，你可以帮帮她吗？ Input 第一行是一个整数m(0&lt;m&lt;200)，代表有m组数据。之后m行，每行有三个整数(x&lt;10000),三角形的三条边]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 162.杨辉三角]]></title>
      <url>%2Fpost%2FAOJ%2F162.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|打表|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 47Submission Accepted: 26 Description 11 11 2 11 3 3 11 4 6 4 11 5 10 10 5 1上面的图形熟悉吗？它就是我们中学时候学过的杨辉三角。现在请你输出一个m层的杨辉三角]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 609.LOL系列之回到现实]]></title>
      <url>%2Fpost%2FAOJ%2F609.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 72Submission Accepted: 28 Description 天天LOL，没怎么上过自习，这就是小小明生活的真实写照，殊不知，期末考试悄悄降临，首先考的是大物，纳尼？！！！这学期物理卷子改版？只有一道计算题？！题目描述如下：你在一数轴原点上，需要朝正方向一颗炮弹，你可以给炮弹提供的最大初速度为V，你应该调整炮弹的发射角度为多少才可以使得炮弹水平飞行距离最大呢？请输出炮弹最远飞行的水平距离，由于期末考试只有一题，所以要么AC，要么挂大物，你们自己看着办吧（这就是天天撸的后果，学霸们早已在你们看完这题的时候AC了）（g = 9.8）注：不考虑空气阻力]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 579.期末考试之传纸条]]></title>
      <url>%2Fpost%2FAOJ%2F579.html</url>
      <content type="text"><![CDATA[题解|AOJ|最短路|图论|BFS|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 32 MBTotal Submission: 12Submission Accepted: 8 Description 平时不努力，考试得着急呐。传说中的BT监考老师竟然搬来了信号屏蔽工具，手机不管用啦有木有。不过这难不到大家，cxlove见证了同学们使用传统的作弊方式—-传纸条，纸条得从A同学传到B同学处，在一个N*M的教室里，零散着坐着一些同学，监考老师游荡在教室某些位置，能否成功将纸条传到B同学处，且不被老师发现。每一次传纸条不能斜传，只能传给前后左右四个同学，监考老师的监视范围为相邻的八个位置，当纸条传到老师监视范围内就会被逮住了，纸条传到空位置处时传送失败。帮cxlove计算下最少需要多少时间才能完成传纸条。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 491.扑克牌]]></title>
      <url>%2Fpost%2FAOJ%2F491.html</url>
      <content type="text"><![CDATA[题解|AOJ|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 54Submission Accepted: 24 Description 扑克牌大家非常熟悉，扑克牌从小到大的顺序为：3,4,5,6,7,8,9,10,J,Q,K,A,2我们就做个简单的事，单张扑克牌比大小，并且还没有花色区别，也没有大小王。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 718.计算GPA]]></title>
      <url>%2Fpost%2FAOJ%2F718.html</url>
      <content type="text"><![CDATA[题解|AOJ|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 128 MBTotal Submission: 72Submission Accepted: 32 Description 上学期面对繁重的课程和考试，TYF终于考完了。成绩出来之后，TYF想看一下GPA(Grade Point Average,平均成绩点数)是多少，之后他熟练的打开了教务处，看到绩点显示0.00，他丝毫没有感到吃惊，他知道教务处又出现问题了。之后TYF决定自己写一个程序来计算自己的GPA。想必大家都知道GPA如何计算的，就是加权平均数。计算方式如下：例如某学生的五门课程的学分和他所获得的绩点为：A课程四个学分，绩点4；B课程三个学分，绩点3；C课程两个学分，绩点4；D课程六个学分，绩点2；E课程三个学分，绩点3。以上五项成绩GPA为：GPA=（44+33+24+62+3*3）/（4+3+2+6+3）=3.00现在让你帮助TYF完成这项任务。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 11.Rails]]></title>
      <url>%2Fpost%2FAOJ%2F11.html</url>
      <content type="text"><![CDATA[题解|AOJ|栈(stack)|模拟栈 按照目标一个一个试着移动即可]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 592.神奇的叶子]]></title>
      <url>%2Fpost%2FAOJ%2F592.html</url>
      <content type="text"><![CDATA[题解|AOJ|水题 等差数列求和]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 10.目标柏林]]></title>
      <url>%2Fpost%2FAOJ%2F10.html</url>
      <content type="text"><![CDATA[题解|AOJ|优化！优化！ 读入的字符串包含空格！ 数据量较大，vector string都会降低效率 简直优化哭了要( ▼-▼ )]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 9.University]]></title>
      <url>%2Fpost%2FAOJ%2F9.html</url>
      <content type="text"><![CDATA[题解|AOJ|打表|打表]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 8.童年生活二三事]]></title>
      <url>%2Fpost%2FAOJ%2F8.html</url>
      <content type="text"><![CDATA[题解|动态规划|AOJ|打表|动态规划+打表]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 7.Redraiment猜想]]></title>
      <url>%2Fpost%2FAOJ%2F7.html</url>
      <content type="text"><![CDATA[题解|AOJ|质数|筛法求素数]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 6.Hero In Maze]]></title>
      <url>%2Fpost%2FAOJ%2F6.html</url>
      <content type="text"><![CDATA[题解|AOJ|最短路|图论|BFS|DFS|简单的最短路 BFS DFS都可以实现（BFS应该会更快一点吧） 其中输入的N、M、T中，N是列，M是行，而不是和大多数题目一样，N是行，M是列 另外，类中不要乱放常量，类中不要直接为类变量赋初值（不是所有编译器都承认貌似~）]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 667.抢占白房子]]></title>
      <url>%2Fpost%2FAOJ%2F667.html</url>
      <content type="text"><![CDATA[题解|AOJ|数学|题目 Time Limit: 1000 msCase Time Limit: 1000 msMemory Limit: 64 MBTotal Submission: 79Submission Accepted: 25 Description 在一个8×8的宫格图中，每个格子要么是白色，要么是黑色，且相邻的两个格子的颜色一定不同；已知左上角（1，1）的格子的颜色为白色。现给出用字符描述的该图G，如果有G（i，j）=’F’，则说明从上向下数的第i行（从1开始数），从左向右数的第j行（从1开始数）交叉的格子被占领，否则这个格子是空的，未被占领。求出被占领的白格子数量。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 5.渊子赛马]]></title>
      <url>%2Fpost%2FAOJ%2F5.html</url>
      <content type="text"><![CDATA[题解|AOJ|贪心算法|贪心算法]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 4.1、2、3、4、5]]></title>
      <url>%2Fpost%2FAOJ%2F4.html</url>
      <content type="text"><![CDATA[题解|AOJ|鸡兔同笼 注意各种Error情况]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 3.Redraiment的遭遇]]></title>
      <url>%2Fpost%2FAOJ%2F3.html</url>
      <content type="text"><![CDATA[题解|AOJ|打表|模拟|打表 要注意不到7月前和8月后的情况 同时注意“0号”等特殊情况]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[AOJ 2.Home Work]]></title>
      <url>%2Fpost%2FAOJ%2F2.html</url>
      <content type="text"><![CDATA[题解|AOJ|贪心算法|打表 要注意不到7月前和8月后的情况 同时注意“0号”等特殊情况]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 400.Unix is]]></title>
      <url>%2Fpost%2FUva%2F400.html</url>
      <content type="text"><![CDATA[Uva|怎么看这道题都是理解比实现难 特别是英语版，最后如何输出被绕进去了 大概意思就是在保证每行不超过60字符的情况下，尽可能让行数最少输出。 注意三目运算符的运算优先度，记得加括号]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 540.Team Queue]]></title>
      <url>%2Fpost%2FUva%2F540.html</url>
      <content type="text"><![CDATA[题解|队列(queue)|Uva|队列问题，思路较为清晰 通过模拟操作可以发现可以先队内排列，然后进行队伍排列 其中个别操作由于vector、map嵌套，可能会发生打错凌乱的情况。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 12096.The SetStack Computer]]></title>
      <url>%2Fpost%2FUva%2F12096.html</url>
      <content type="text"><![CDATA[Uva|嗯……这道题大思路很明显，但是细节好烦人…… 大体上就是stack+set 对于栈中的元素，可以发现每个元素都是一个集合（set），而集合中的元素也是集合 因此，应该对每个集合（元素）进行编号 typedef set&lt;int&gt; element ，这样就能把每个元素看作保存整数的栈 stack s; 用map和vector进行映射集合（元素）和编号 map&lt;element,int&gt; ID_eache; vector&lt;int&gt; ID_eache2; 然后再按照要求写就行了 其中可用switch case判断操作。 要注意每个case都需要 break; 因为case只是入口，并不是出口。只要进去后，没有break就会一直运行下去]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 156.Ananagrams]]></title>
      <url>%2Fpost%2FUva%2F156.html</url>
      <content type="text"><![CDATA[题解|映射(map)|集合(set)|向量(vector)|Uva|写麻烦了貌似 不过算同时复习了下 vector set map]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 10815.Andy's First Dictionary]]></title>
      <url>%2Fpost%2FUva%2F10815.html</url>
      <content type="text"><![CDATA[题解|集合(set)|Uva|题意和思路都非常非常明确，直接读入-&gt;set-&gt;输出 然而，在读入上竟然出了问题 最早是是用的]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 101.The Blocks Problem]]></title>
      <url>%2Fpost%2FUva%2F101.html</url>
      <content type="text"><![CDATA[题解|向量(vector)|Uva|链表(list)|题意比较容易理解 《入门经典》上用的是向量，不过觉得用链表更快点~ 于是，就在链表这个大坑中爬不出来了…… 要注意对两种情况的排除，一个是a==b，另一个就是a、b在同一堆 在链表中，要注意什么时候链表到尽头，到底用 temp!=NULL 还是用 temp-&gt;next!=NULL 做循环判断的条件 另外，当链表的节点进行移动操作的时候，要注意移动 temp-&gt;next-&gt;last 和 temp-&gt;last-&gt;next （其中还要判断 temp-&gt;last 和 temp-&gt;next 存在与否） （要在这里被坑多少次才能记住╮(╯-╰)╭）]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 1588.Kickdown]]></title>
      <url>%2Fpost%2FUva%2F1588.html</url>
      <content type="text"><![CDATA[题解|Uva|题目比较简单，反而我觉得这道题英语比算法难233333 读入数据后，循环判断每个位置是不是都是2就行]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 1587.Box]]></title>
      <url>%2Fpost%2FUva%2F1587.html</url>
      <content type="text"><![CDATA[题解|排序|模拟|Uva|思路比较清晰吧 如果可以拼成长方体，要满足： 保证6个长方形能够成对相同（相同）有3组不同的数据（长、宽、高），且每组有4个使用排序进行排序。 相邻两个排序，确保每一个长方形都是以（宽，长）的顺序记录（sort排序时，开始位置是第一个位置，结束为止是最后一个数据的下一个位置） 然后整体排序，每4个一组，进行比较]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 10340.All in All]]></title>
      <url>%2Fpost%2FUva%2F10340.html</url>
      <content type="text"><![CDATA[题解|字符串(string)|Uva|哎~这题没什么要注意的吧。。。注意数组别开太小就行 然后往下比较下去……十分钟就能撸完吧]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 202.Repeating Decimals]]></title>
      <url>%2Fpost%2FUva%2F202.html</url>
      <content type="text"><![CDATA[题解|字符串(string)|Uva|题目大意就是取循环小数的循环节 思路比较清晰 完全模拟人脑做除法，同时分组标记被除数和除数，判断循环节 中间需要判断是除尽和没除尽两种情况 最后要关注格式，每两个输出要有空行，且第二行前有3个空格]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 232.Crossword Answers]]></title>
      <url>%2Fpost%2FUva%2F232.html</url>
      <content type="text"><![CDATA[题解|字符串(string)|Uva|下面的输出一定要是%3d的格式来输出序号 另外注意两个解之间的空格]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Uva 1368.DNA Consensus String]]></title>
      <url>%2Fpost%2FUva%2F1368.html</url>
      <content type="text"><![CDATA[题解|字符串(string)|Uva|题目要求是对几个字符串进行分析，得到一个最优的字符串，使它满足与要求的字符串不同的字符之和最小。如果有多种解，则输出字典序最小的。 注意：字符串的结束时 \0 一定要加上]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[关于cin]]></title>
      <url>%2Fpost%2FNote%2Fcin.html</url>
      <content type="text"><![CDATA[笔记|读入输出|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[代码优化方案]]></title>
      <url>%2Fpost%2FNote%2FCodeBetter.html</url>
      <content type="text"><![CDATA[笔记|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[主流播放器的强行联网对比]]></title>
      <url>%2Fpost%2FWriting%2FMusic_Player.html</url>
      <content type="text"><![CDATA[随笔| 结论： pc版百度音乐阉割联网功能 手机版天天动听或网易云音乐阉割联网功能 起因 作为一名虔诚的LoveLiver，听μ’s的歌写程序是必须的~ 无疑，音乐一定要是flac无损的（尽管我听不出来），带高清专辑封面（尽管我不看），有双语歌词的（尽管我也不怎么看） 在众多LoveLiver的共同努力下，我们有了符合以上要求的歌曲（如图，有高清专辑封面，在同文件夹下有同名歌词） 科研内容包括常见播放器对本地专辑封面，本地歌词的支持情况（包括pc版和手机版） 测试歌曲 START DASH-μ&#39;s]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[康托（逆）展开]]></title>
      <url>%2Fpost%2FAlgorithm%2FContour.html</url>
      <content type="text"><![CDATA[算法|康托|]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[高精度算法]]></title>
      <url>%2Fpost%2FAlgorithm%2FHigh_precision.html</url>
      <content type="text"><![CDATA[算法|高精度算法|c++中，变量的大小是有限制的。 比如int是 -2147483648~2147483647 long long是-9223372036854775808~18446744073709551615 然而他们都有一个范围，如果数据过大，就会出现错误。这时，我们需要高精度计算。 同过数组来存储各位上的情况，模拟计算加减乘除。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[筛法求素数]]></title>
      <url>%2Fpost%2FAlgorithm%2FPrime.html</url>
      <content type="text"><![CDATA[算法|质数| 质数（prime number）又称素数，有无限个。一个大于1的自然数，除了1和它本身外，不能被其他自然数（质数）整除，换句话说就是该数除了1和它本身以外不再有其他的因数；否则称为合数。 ——百度百科 要想判断一个数是不是质数，就要看他能不能被除了1和自己之外的数分解 显然如果当需要多次判断数据是否是素数时，每次都计算一次是很慢的。 但是可以声明一个布尔型数组，保存对应下标是否为素数，这样只需要计算一次。 开始时，从2开始，分别乘上2以上的数，所得的数全都不是素数]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[欧几里得算法]]></title>
      <url>%2Fpost%2FAlgorithm%2FEuclid.html</url>
      <content type="text"><![CDATA[算法|欧几里得算法|辗转相除法|需要知识 同余数论中的重要概念。给定一个正整数m，如果两个整数a和b满足（a-b）能够整除m，即（a-b）/m得到一个整数，那么就称整数a与b对模m同余，记作a≡b(mod m)。对模m同余是整数的一个等价关系。——百度百科 关于同余的定理 欧几里德算法 辗转相除法， 又名欧几里德算法（Euclidean algorithm）乃求两个正整数之最大公因子的算法。它是已知最古老的算法， 其可追溯至3000年前。这种算法，在中国则可以追溯至东汉出现的《九章算术》。——百度百科简单明了的最大公因数计算算法。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[快速幂取模]]></title>
      <url>%2Fpost%2FAlgorithm%2FRaising_Modulo_Numbers.html</url>
      <content type="text"><![CDATA[算法|二分|快速幂取模|递归与分治|取余数有%，即 10%3 可以得到1 但是当数比较大时(比如2999999)，计算机可能就无法计算 然而，根据数论的结论，我们可以简化一下。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[同余]]></title>
      <url>%2Fpost%2FAlgorithm%2FCongruence.html</url>
      <content type="text"><![CDATA[算法|数学|同余| 同余指两个整数除以同一正数，余数相同。同余指两个整数相减能够被一个整数整除。]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[图论相关算法]]></title>
      <url>%2Fpost%2FAlgorithm%2FGraph.html</url>
      <content type="text"><![CDATA[算法|图论|转载自：http://cojs.tk/cogs/page/page.php?aid=30]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[STL笔记]]></title>
      <url>%2Fpost%2FNote%2FSTLNote.html</url>
      <content type="text"><![CDATA[笔记|栈(stack)|队列(queue)|映射(map)|集合(set)|向量(vector)|STL方面的笔记以下为vector queue map set stack的基本用法可编译结合注释查看]]></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[ACM进阶计划]]></title>
      <url>%2Fpost%2FNote%2FACM.html</url>
      <content type="text"></content>
    </entry>

    
    <entry>
      
      <title><![CDATA[Dijkstra算法]]></title>
      <url>%2Fpost%2FAlgorithm%2FDijkstra.html</url>
      <content type="text"><![CDATA[算法|Dijkstra|最短路|图论|吐槽一句，这个东西好难拼 迪杰斯特拉算法是由荷兰计算机科学家狄克斯特拉于1959年提出的，因此又叫狄克斯特拉算法。是从一个顶点到其余各顶点的最短路径算法，解决的是有向图中最短路径问题。迪杰斯特拉算法主要特点是以起始点为中心向外层层扩展，直到扩展到终点为止。——百度百科 Dijkstra算法就是用来算在一个有向带权图中，一个点到其他各点的最短距离 其思路是： 给起始点权值标成0，其他点标成无限大。从出发点开始 向该点向能通向的点走，算出到各点的总距离，并标记在相应点上。 给该点标记上访问标志，以后不再访问该点，然后从所有点中选出权值最小的点，重复步骤2 当所有点均被标记后，各点权值即为到该点最短距离]]></content>
    </entry>

    
  
  
</search>
